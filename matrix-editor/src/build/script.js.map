{
  "version": 3,
  "sources": ["../build/lib/sanscript.js", "../build/lib/csv.js", "../build/_snowpack/pkg/raphael.js", "../build/lib/jsphylosvg-custom.js", "../build/script.js", "../build/lib/normalize.js", "../build/lib/transliterate.js", "../build/xslt/csv.js", "../build/xslt/prettyprint.js", "../build/xslt/matrix.js", "../build/xslt/tree.js", "../build/xslt/lemma.js", "../build/xslt/lg.js", "../build/lib/xslt.js", "../build/_snowpack/pkg/hypher.js", "../build/lib/hypher-sa.js"],
  "sourcesContent": ["\"use strict\";\nconst Sanscript = {};\nSanscript.defaults = {\n  skip_sgml: false,\n  syncope: false\n};\nvar schemes = Sanscript.schemes = {\n  balinese: {\n    vowels: \"смЕ смЖ смЗ смИ смЙ смК смЛ смМ смН смО  смП смР  смС смТ\".split(\" \"),\n    vowel_marks: \"см╡ см╢ см╖ см╕ см╣ см║ см╗ см╝ см╜ снВ см╛ см┐ снГ снА снБ\".split(\" \"),\n    other_marks: [\"смВ\", \"смД\", \"смБ\", \"\"],\n    virama: [\"снД\"],\n    consonants: \"смУ смФ смХ смЦ смЧ смШ смЩ смЪ смЫ смЬ смЭ смЮ смЯ сма смб смв смг смд сме смж смз сми смй смк смл смм смн смо смп см░ см▒ см▓ см│\".split(\" \"),\n    symbols: \"снР снС снТ снУ снФ снХ снЦ снЧ снШ снЩ   снЮ снЯ\".split(\" \"),\n    zwj: [\"тАН\"],\n    skip: [\"\"]\n  },\n  bengali: {\n    vowels: \"ржЕ ржЖ ржЗ ржИ ржЙ ржК ржЛ рза ржМ рзб  ржП ржР  ржУ ржФ\".split(\" \"),\n    vowel_marks: \"рж╛ рж┐ рзА рзБ рзВ рзГ рзД рзв рзг  рзЗ рзИ  рзЛ рзМ\".split(\" \"),\n    other_marks: \"ржВ ржГ ржБ\".split(\" \"),\n    virama: [\"рзН\"],\n    consonants: \"ржХ ржЦ ржЧ ржШ ржЩ ржЪ ржЫ ржЬ ржЭ ржЮ ржЯ ржа ржб ржв ржг ржд рже ржж ржз ржи ржк ржл ржм ржн ржо ржп рж░ рж▓ ржм рж╢ рж╖ рж╕ рж╣ рд│ ржХрзНрж╖ ржЬрзНржЮ\".split(\" \"),\n    symbols: \"рзж рзз рзи рзй рзк рзл рзм рзн рзо рзп реР рж╜ ред рее\".split(\" \"),\n    other: \"    ржб ржв  ржп \".split(\" \")\n  },\n  newa: {\n    vowels: [\n      \"ЁСРА\",\n      \"ЁСРБ\",\n      \"ЁСРВ\",\n      \"ЁСРГ\",\n      \"ЁСРД\",\n      \"ЁСРЕ\",\n      \"ЁСРЖ\",\n      \"ЁСРЗ\",\n      \"ЁСРИ\",\n      \"ЁСРЙ\",\n      \"\",\n      \"ЁСРК\",\n      \"ЁСРЛ\",\n      \"\",\n      \"ЁСРМ\",\n      \"ЁСРН\"\n    ],\n    vowel_marks: [\n      \"ЁСР╡\",\n      \"ЁСР╢\",\n      \"ЁСР╖\",\n      \"ЁСР╕\",\n      \"ЁСР╣\",\n      \"ЁСР║\",\n      \"ЁСР╗\",\n      \"ЁСР╝\",\n      \"ЁСР╜\",\n      \"\",\n      \"ЁСР╛\",\n      \"ЁСР┐\",\n      \"\",\n      \"ЁССА\",\n      \"ЁССБ\"\n    ],\n    other_marks: [\"ЁССД\", \"ЁССЕ\", \"ЁССГ\", \"ЁССа\", \"ЁССб\", \"\"],\n    virama: [\"ЁССВ\"],\n    consonants: [\n      \"ЁСРО\",\n      \"ЁСРП\",\n      \"ЁСРР\",\n      \"ЁСРС\",\n      \"ЁСРТ\",\n      \"ЁСРФ\",\n      \"ЁСРХ\",\n      \"ЁСРЦ\",\n      \"ЁСРЧ\",\n      \"ЁСРШ\",\n      \"ЁСРЪ\",\n      \"ЁСРЫ\",\n      \"ЁСРЬ\",\n      \"ЁСРЭ\",\n      \"ЁСРЮ\",\n      \"ЁСРЯ\",\n      \"ЁСРа\",\n      \"ЁСРб\",\n      \"ЁСРв\",\n      \"ЁСРг\",\n      \"ЁСРе\",\n      \"ЁСРж\",\n      \"ЁСРз\",\n      \"ЁСРи\",\n      \"ЁСРй\",\n      \"ЁСРл\",\n      \"ЁСРм\",\n      \"ЁСРо\",\n      \"ЁСР░\",\n      \"ЁСР▒\",\n      \"ЁСР▓\",\n      \"ЁСР│\",\n      \"ЁСР┤\"\n    ],\n    symbols: [\n      \"ЁССР\",\n      \"ЁССС\",\n      \"ЁССТ\",\n      \"ЁССУ\",\n      \"ЁССФ\",\n      \"ЁССХ\",\n      \"ЁССЦ\",\n      \"ЁССЧ\",\n      \"ЁССШ\",\n      \"ЁССЩ\",\n      \"ЁССЙ\",\n      \"ЁССЗ\",\n      \"ЁССЛ\",\n      \"ЁССМ\"\n    ]\n  },\n  sarada: {\n    vowels: [\n      \"ЁСЖГ\",\n      \"ЁСЖД\",\n      \"ЁСЖЕ\",\n      \"ЁСЖЖ\",\n      \"ЁСЖЗ\",\n      \"ЁСЖИ\",\n      \"ЁСЖЙ\",\n      \"ЁСЖК\",\n      \"ЁСЖЛ\",\n      \"ЁСЖМ\",\n      \"\",\n      \"ЁСЖН\",\n      \"ЁСЖО\",\n      \"\",\n      \"ЁСЖП\",\n      \"ЁСЖР\"\n    ],\n    vowel_marks: [\n      \"ЁСЖ│\",\n      \"ЁСЖ┤\",\n      \"ЁСЖ╡\",\n      \"ЁСЖ╢\",\n      \"ЁСЖ╖\",\n      \"ЁСЖ╕\",\n      \"ЁСЖ╣\",\n      \"ЁСЖ║\",\n      \"ЁСЖ╗\",\n      \"\",\n      \"ЁСЖ╝\",\n      \"ЁСЖ╜\",\n      \"\",\n      \"ЁСЖ╛\",\n      \"ЁСЖ┐\"\n    ],\n    other_marks: [\"ЁСЖБ\", \"ЁСЖВ\", \"ЁСЖА\", \"ЁСЗВ\", \"ЁСЗГ\"],\n    virama: [\"ЁСЗА\"],\n    consonants: [\n      \"ЁСЖС\",\n      \"ЁСЖТ\",\n      \"ЁСЖУ\",\n      \"ЁСЖФ\",\n      \"ЁСЖХ\",\n      \"ЁСЖЦ\",\n      \"ЁСЖЧ\",\n      \"ЁСЖШ\",\n      \"ЁСЖЩ\",\n      \"ЁСЖЪ\",\n      \"ЁСЖЫ\",\n      \"ЁСЖЬ\",\n      \"ЁСЖЭ\",\n      \"ЁСЖЮ\",\n      \"ЁСЖЯ\",\n      \"ЁСЖа\",\n      \"ЁСЖб\",\n      \"ЁСЖв\",\n      \"ЁСЖг\",\n      \"ЁСЖд\",\n      \"ЁСЖе\",\n      \"ЁСЖж\",\n      \"ЁСЖз\",\n      \"ЁСЖи\",\n      \"ЁСЖй\",\n      \"ЁСЖк\",\n      \"ЁСЖл\",\n      \"ЁСЖм\",\n      \"ЁСЖо\",\n      \"ЁСЖп\",\n      \"ЁСЖ░\",\n      \"ЁСЖ▒\",\n      \"ЁСЖ▓\",\n      \"ЁСЖн\"\n    ],\n    symbols: [\n      \"ЁСЗР\",\n      \"ЁСЗС\",\n      \"ЁСЗТ\",\n      \"ЁСЗУ\",\n      \"ЁСЗФ\",\n      \"ЁСЗХ\",\n      \"ЁСЗЦ\",\n      \"ЁСЗЧ\",\n      \"ЁСЗШ\",\n      \"ЁСЗЩ\",\n      \"ЁСЗД\",\n      \"ЁСЗБ\",\n      \"ЁСЗЕ\",\n      \"ЁСЗЖ\"\n    ]\n  },\n  devanagari: {\n    vowels: \"рдЕ рдЖ рдЗ рдИ рдЙ рдК рдЛ реа рдМ реб рдО рдП рдР рдТ рдУ рдФ рдП рдР рдУ\".split(\" \"),\n    vowel_marks: \"рд╛ рд┐ реА реБ реВ реГ реД рев рег реЖ реЗ реИ реК реЛ реМ реО реОреЗ реОрд╛ реОреЛ реЖ реП\".split(\" \"),\n    other_marks: \"рдВ рдГ рдБ с│╡ с│╢ ъг╜\".split(\" \"),\n    virama: [\"реН\"],\n    consonants: \"рдХ рдЦ рдЧ рдШ рдЩ рдЪ рдЫ рдЬ рдЭ рдЮ рдЯ рда рдб рдв рдг рдд рде рдж рдз рди рдк рдл рдм рдн рдо рдп рд░ рд▓ рд╡ рд╢ рд╖ рд╕ рд╣ рд│\".split(\" \"),\n    symbols: \"реж рез реи рей рек рел рем рен рео реп реР рд╜ ред рее\".split(\" \"),\n    zwj: [\"тАН\"],\n    skip: [\"\"],\n    accent: [\"реС\", \"реТ\"],\n    combo_accent: \"рдГреС рдГреТ рдВреС рдВреТ\".split(\" \"),\n    candra: [\"реЕ\"],\n    other: \"рдХрд╝ рдЦрд╝ рдЧрд╝ рдЬрд╝ рдбрд╝ рдврд╝ рдлрд╝ рдпрд╝ рд▒\".split(\" \")\n  },\n  gujarati: {\n    vowels: \"ркЕ ркЖ ркЗ ркИ ркЙ ркК ркЛ рла ркМ рлб  ркП ркР  ркУ ркФ\".split(\" \"),\n    vowel_marks: \"рк╛ рк┐ рлА рлБ рлВ рлГ рлД рлв рлг  рлЗ рлИ  рлЛ рлМ\".split(\" \"),\n    other_marks: \"ркВ ркГ ркБ\".split(\" \"),\n    virama: [\"рлН\"],\n    consonants: \"ркХ ркЦ ркЧ ркШ ркЩ ркЪ ркЫ ркЬ ркЭ ркЮ ркЯ рка ркб ркв ркг ркд рке ркж ркз рки ркк ркл ркм ркн рко ркп рк░ рк▓ рк╡ рк╢ рк╖ рк╕ рк╣ рк│\".split(\" \"),\n    symbols: \"рлж рлз рли рлй рлк рлл рлм рлн рло рлп рлР рк╜ рлд рле\".split(\" \"),\n    candra: [\"рлЕ\"]\n  },\n  gurmukhi: {\n    vowels: \"риЕ риЖ риЗ риИ риЙ риК      риП риР  риУ риФ\".split(\" \"),\n    vowel_marks: \"ри╛ ри┐ рйА рйБ рйВ      рйЗ рйИ  рйЛ рйМ\".split(\" \"),\n    other_marks: \"риВ риГ риБ\".split(\" \"),\n    virama: [\"рйН\"],\n    consonants: \"риХ риЦ риЧ риШ риЩ риЪ риЫ риЬ риЭ риЮ риЯ риа риб рив риг рид рие риж риз рии рик рил рим рин рио рип ри░ ри▓ ри╡ ри╢ ри╢ ри╕ ри╣ ри│\".split(\" \"),\n    symbols: \"рйж рйз рйи рйй рйк рйл рйм рйн рйо рйп реР рд╜ ред рее\".split(\" \"),\n    other: \" риЦ риЧ риЬ риб  рил  \".split(\" \")\n  },\n  kannada: {\n    vowels: \"р▓Е р▓Ж р▓З р▓И р▓Й р▓К р▓Л р│а р▓М р│б р▓О р▓П р▓Р р▓Т р▓У р▓Ф\".split(\" \"),\n    vowel_marks: \"р▓╛ р▓┐ р│А р│Б р│В р│Г р│Д р│в р│г р│Ж р│З р│И р│К р│Л р│М\".split(\" \"),\n    other_marks: \"р▓В р▓Г рдБ\".split(\" \"),\n    virama: [\"р│Н\"],\n    consonants: \"р▓Х р▓Ц р▓Ч р▓Ш р▓Щ р▓Ъ р▓Ы р▓Ь р▓Э р▓Ю р▓Я р▓а р▓б р▓в р▓г р▓д р▓е р▓ж р▓з р▓и р▓к р▓л р▓м р▓н р▓о р▓п р▓░ р▓▓ р▓╡ р▓╢ р▓╖ р▓╕ р▓╣ р▓│\".split(\" \"),\n    symbols: \"р│ж р│з р│и р│й р│к р│л р│м р│н р│о р│п р▓Ур▓В р▓╜ ред рее\".split(\" \"),\n    other: \"      р▓л  р▓▒\".split(\" \")\n  },\n  malayalam: {\n    vowels: \"р┤Е р┤Ж р┤З р┤И р┤Й р┤К р┤Л р╡а р┤М р╡б р┤О р┤П р┤Р р┤Т р┤У р┤Ф\".split(\" \"),\n    vowel_marks: \"р┤╛ р┤┐ р╡А р╡Б р╡В р╡Г р╡Д р╡в р╡г р╡Ж р╡З р╡И р╡К р╡Л р╡М\".split(\" \"),\n    other_marks: \"р┤В р┤Г рдБ\".split(\" \"),\n    virama: [\"р╡Н\"],\n    consonants: \"р┤Х р┤Ц р┤Ч р┤Ш р┤Щ р┤Ъ р┤Ы р┤Ь р┤Э р┤Ю р┤Я р┤а р┤б р┤в р┤г р┤д р┤е р┤ж р┤з р┤и р┤к р┤л р┤м р┤н р┤о р┤п р┤░ р┤▓ р┤╡ р┤╢ р┤╖ р┤╕ р┤╣ р┤│\".split(\" \"),\n    symbols: \"р╡ж р╡з р╡и р╡й р╡к р╡л р╡м р╡н р╡о р╡п р┤Ур┤В р┤╜ ред рее\".split(\" \"),\n    other: \"        р┤▒\".split(\" \")\n  },\n  oriya: {\n    vowels: \"рмЕ рмЖ рмЗ рмИ рмЙ рмК рмЛ рна рмМ рнб  рмП рмР  рмУ рмФ\".split(\" \"),\n    vowel_marks: \"рм╛ рм┐ рнА рнБ рнВ рнГ рнД рнв рнг  рнЗ рнИ  рнЛ рнМ\".split(\" \"),\n    other_marks: \"рмВ рмГ рмБ\".split(\" \"),\n    virama: [\"рнН\"],\n    consonants: \"рмХ рмЦ рмЧ рмШ рмЩ рмЪ рмЫ рмЬ рмЭ рмЮ рмЯ рма рмб рмв рмг рмд рме рмж рмз рми рмк рмл рмм рмн рмо рмп рм░ рм▓ рм╡ рм╢ рм╖ рм╕ рм╣ рм│\".split(\" \"),\n    symbols: \"рнж рнз рни рнй рнк рнл рнм рнн рно рнп рмУрмВ рм╜ ред рее\".split(\" \"),\n    other: \"    рмб рмв  рмп \".split(\" \")\n  },\n  tamil: {\n    vowels: \"роЕ роЖ роЗ роИ роЙ роК     роО роП роР роТ роУ роФ\".split(\" \"),\n    vowel_marks: \"ро╛ ро┐ рпА рпБ рпВ     рпЖ рпЗ рпИ рпК рпЛ рпМ\".split(\" \"),\n    other_marks: \"роВ роГ \".split(\" \"),\n    virama: [\"рпН\"],\n    consonants: \"роХ роХ роХ роХ роЩ роЪ роЪ роЬ роЪ роЮ роЯ роЯ роЯ роЯ рог род род род род рои рок рок рок рок роо роп ро░ ро▓ ро╡ ро╢ ро╖ ро╕ ро╣ ро│\".split(\" \"),\n    symbols: \"рпж рпз рпи рпй рпк рпл рпм рпн рпо рпп рпР рд╜ ред рее\".split(\" \"),\n    other: \"        ро▒\".split(\" \")\n  },\n  telugu: {\n    vowels: \"р░Е р░Ж р░З р░И р░Й р░К р░Л р▒а р░М р▒б р░О р░П р░Р р░Т р░У р░Ф\".split(\" \"),\n    vowel_marks: \"р░╛ р░┐ р▒А р▒Б р▒В р▒Г р▒Д р▒в р▒г р▒Ж р▒З р▒И р▒К р▒Л р▒М\".split(\" \"),\n    other_marks: \"р░В р░Г р░Б с│▓ с│▓\".split(\" \"),\n    virama: [\"р▒Н\"],\n    consonants: \"р░Х р░Ц р░Ч р░Ш р░Щ р░Ъ р░Ы р░Ь р░Э р░Ю р░Я р░а р░б р░в р░г р░д р░е р░ж р░з р░и р░к р░л р░м р░н р░о р░п р░░ р░▓ р░╡ р░╢ р░╖ р░╕ р░╣ р░│\".split(\" \"),\n    symbols: \"р▒ж р▒з р▒и р▒й р▒к р▒л р▒м р▒н р▒о р▒п р░Ур░В р░╜ ред рее\".split(\" \"),\n    other: \"        р░▒\".split(\" \")\n  },\n  iast: {\n    vowels: \"a ─Б i ─л u ┼л с╣Ы с╣Э с╕╖ с╕╣ с║╜ e ai ├╡ o au ├к a├о ├┤ a├╗\".split(\" \"),\n    other_marks: [\"с╣Г\", \"с╕е\", \"m╠Р\", \"с║Ц\", \"с╕л\", \"oс╕┐\"],\n    virama: [\"\"],\n    consonants: \"k kh g gh с╣Е c ch j jh ├▒ с╣н с╣нh с╕Н с╕Нh с╣З t th d dh n p ph b bh m y r l v ┼Ы с╣г s h с╕╗\".split(\" \"),\n    symbols: \"0 1 2 3 4 5 6 7 8 9 oс╣Б ' | ||\".split(\" \")\n  },\n  iso: {\n    vowels: \"a ─Б i ─л u ┼л r╠е r╠е╠Д l╠е l╠е╠Д с║╜ e ai ├╡ o au ├к a├о ├┤ a├╗\".split(\" \"),\n    other_marks: [\"с╣Б\", \"с╕е\", \"m╠Р\", \"oс╕┐\"],\n    virama: [\"\"],\n    consonants: \"k kh g gh с╣Е c ch j jh ├▒ с╣н с╣нh с╕Н с╕Нh с╣З t th d dh n p ph b bh m y r l v ┼Ы с╣г s h с╕╖ kс╣г j├▒\".split(\" \"),\n    symbols: \"0 1 2 3 4 5 6 7 8 9 om╠Р ' | ||\".split(\" \")\n  },\n  itrans: {\n    vowels: \"a A i I u U RRi RRI LLi LLI  e ai  o au\".split(\" \"),\n    other_marks: [\"M\", \"H\", \".N\"],\n    virama: [\"\"],\n    consonants: \"k kh g gh ~N ch Ch j jh ~n T Th D Dh N t th d dh n p ph b bh m y r l v sh Sh s h L kSh j~n\".split(\" \"),\n    symbols: \"0 1 2 3 4 5 6 7 8 9 OM .a | ||\".split(\" \"),\n    candra: [\".c\"],\n    zwj: [\"{}\"],\n    skip: \"_\",\n    accent: [\"\\\\'\", \"\\\\_\"],\n    combo_accent: \"\\\\'H \\\\_H \\\\'M \\\\_M\".split(\" \"),\n    other: \"q K G z .D .Dh f Y R\".split(\" \")\n  },\n  hk: {\n    vowels: \"a A i I u U R RR lR lRR  e ai  o au\".split(\" \"),\n    other_marks: \"M H ~\".split(\" \"),\n    virama: [\"\"],\n    consonants: \"k kh g gh G c ch j jh J T Th D Dh N t th d dh n p ph b bh m y r l v z S s h L kS jJ\".split(\" \"),\n    symbols: \"0 1 2 3 4 5 6 7 8 9 OM ' | ||\".split(\" \")\n  },\n  slp1: {\n    vowels: \"a A i I u U f F x X с║╜ e E ├╡ o O ├к ├К ├┤ ├Ф\".split(\" \"),\n    other_marks: \"M H m╠Р с║Ц с╕л oс╕┐\".split(\" \"),\n    virama: [\"\"],\n    consonants: \"k K g G N c C j J Y w W q Q R t T d D n p P b B m y r l v S z s h L\".split(\" \"),\n    symbols: \"0 1 2 3 4 5 6 7 8 9 oс╣Б ' | ||\".split(\" \")\n  },\n  velthuis: {\n    vowels: \"a aa i ii u uu .r .rr .li .ll  e ai  o au\".split(\" \"),\n    other_marks: \".m .h \".split(\" \"),\n    virama: [\"\"],\n    consonants: 'k kh g gh \"n c ch j jh ~n .t .th .d .d .n t th d dh n p ph b bh m y r l v ~s .s s h L k.s j~n'.split(\" \"),\n    symbols: \"0 1 2 3 4 5 6 7 8 9 o.m ' | ||\".split(\" \")\n  },\n  wx: {\n    vowels: \"a A i I u U q Q L   e E  o O\".split(\" \"),\n    other_marks: \"M H z\".split(\" \"),\n    virama: [\"\"],\n    consonants: \"k K g G f c C j J F t T d D N w W x X n p P b B m y r l v S R s h  kR jF\".split(\" \"),\n    symbols: \"0 1 2 3 4 5 6 7 8 9 oM ' | ||\".split(\" \")\n  }\n}, romanSchemes = {}, allAlternates = {\n  iast: {\n    с╣Ы: [\"r╠е\"],\n    с╣Г: [\"с╣Б\"]\n  },\n  itrans: {\n    A: [\"aa\"],\n    I: [\"ii\", \"ee\"],\n    U: [\"uu\", \"oo\"],\n    RRi: [\"R^i\"],\n    RRI: [\"R^I\"],\n    LLi: [\"L^i\"],\n    LLI: [\"L^I\"],\n    M: [\".m\", \".n\"],\n    \"~N\": [\"N^\"],\n    ch: [\"c\"],\n    Ch: [\"C\", \"chh\"],\n    \"~n\": [\"JN\"],\n    v: [\"w\"],\n    Sh: [\"S\", \"shh\"],\n    kSh: [\"kS\", \"x\"],\n    \"j~n\": [\"GY\", \"dny\"],\n    OM: [\"AUM\"],\n    \"\\\\_\": [\"\\\\`\"],\n    \"\\\\_H\": [\"\\\\`H\"],\n    \"\\\\'M\": [\"\\\\'.m\", \"\\\\'.n\"],\n    \"\\\\_M\": \"\\\\_.m \\\\_.n \\\\`M \\\\`.m \\\\`.n\".split(\" \"),\n    \".a\": [\"~\"],\n    \"|\": [\".\"],\n    \"||\": [\"..\"],\n    z: [\"J\"]\n  }\n}, cache = {};\nSanscript.isRomanScheme = function(name) {\n  return romanSchemes.hasOwnProperty(name);\n};\nSanscript.addBrahmicScheme = function(name, scheme) {\n  Sanscript.schemes[name] = scheme;\n};\nSanscript.addRomanScheme = function(name, scheme) {\n  if (!(\"vowel_marks\" in scheme)) {\n    scheme.vowel_marks = scheme.vowels.slice(1);\n  }\n  Sanscript.schemes[name] = scheme;\n  romanSchemes[name] = true;\n};\nvar cheapCopy = function(scheme) {\n  var copy = {};\n  for (var key in scheme) {\n    if (!scheme.hasOwnProperty(key)) {\n      continue;\n    }\n    copy[key] = scheme[key].slice(0);\n  }\n  return copy;\n};\n(function() {\n  var kolkata = schemes.kolkata = cheapCopy(schemes.iast), schemeNames = \"iast itrans hk kolkata slp1 velthuis wx\".split(\" \");\n  kolkata.vowels = \"a ─Б i ─л u ┼л с╣Ы с╣Э с╕╖ с╕╣ e ─У ai o ┼Н au\".split(\" \");\n  for (var i = 0, name; name = schemeNames[i]; i++) {\n    Sanscript.addRomanScheme(name, schemes[name]);\n  }\n  var itrans_dravidian = cheapCopy(schemes.itrans);\n  itrans_dravidian.vowels = \"a A i I u U Ri RRI LLi LLi e E ai o O au\".split(\" \");\n  itrans_dravidian.vowel_marks = itrans_dravidian.vowels.slice(1);\n  allAlternates.itrans_dravidian = allAlternates.itrans;\n  Sanscript.addRomanScheme(\"itrans_dravidian\", itrans_dravidian);\n})();\nvar makeMap = function(from, to) {\n  var alternates = allAlternates[from] || {}, consonants = {}, fromScheme = Sanscript.schemes[from], letters = {}, tokenLengths = [], marks = {}, toScheme = Sanscript.schemes[to];\n  for (var group in fromScheme) {\n    if (!fromScheme.hasOwnProperty(group)) {\n      continue;\n    }\n    var fromGroup = fromScheme[group], toGroup = toScheme[group];\n    if (toGroup === void 0) {\n      continue;\n    }\n    for (var i = 0; i < fromGroup.length; i++) {\n      var F = fromGroup[i], T = toGroup[i], alts = alternates[F] || [], numAlts = alts.length, j = 0;\n      tokenLengths.push(F.length);\n      for (j = 0; j < numAlts; j++) {\n        tokenLengths.push(alts[j].length);\n      }\n      if (group === \"vowel_marks\" || group === \"virama\") {\n        marks[F] = T;\n        for (j = 0; j < numAlts; j++) {\n          marks[alts[j]] = T;\n        }\n      } else {\n        letters[F] = T;\n        for (j = 0; j < numAlts; j++) {\n          letters[alts[j]] = T;\n        }\n        if (group === \"consonants\" || group === \"other\") {\n          consonants[F] = T;\n          for (j = 0; j < numAlts; j++) {\n            consonants[alts[j]] = T;\n          }\n        }\n      }\n    }\n  }\n  return {\n    consonants,\n    fromRoman: Sanscript.isRomanScheme(from),\n    letters,\n    marks,\n    maxTokenLength: Math.max.apply(Math, tokenLengths),\n    toRoman: Sanscript.isRomanScheme(to),\n    virama: toScheme.virama\n  };\n};\nvar transliterateRoman = function(data, map, options) {\n  var buf = [], consonants = map.consonants, dataLength = data.length, hadConsonant = false, letters = map.letters, marks = map.marks, maxTokenLength = map.maxTokenLength, optSkipSGML = options.skip_sgml, optSyncope = options.syncope, tempLetter, tempMark, tokenBuffer = \"\", toRoman = map.toRoman, virama = map.virama;\n  var skippingSGML = false, skippingTrans = false, toggledTrans = false;\n  for (var i = 0, L; (L = data.charAt(i)) || tokenBuffer; i++) {\n    var difference = maxTokenLength - tokenBuffer.length;\n    if (difference > 0 && i < dataLength) {\n      tokenBuffer += L;\n      if (difference > 1) {\n        continue;\n      }\n    }\n    for (var j = 0; j < maxTokenLength; j++) {\n      var token = tokenBuffer.substr(0, maxTokenLength - j);\n      if (skippingSGML === true) {\n        skippingSGML = token !== \">\";\n      } else if (token === \"<\") {\n        skippingSGML = optSkipSGML;\n      } else if (token === \"##\") {\n        toggledTrans = !toggledTrans;\n        tokenBuffer = tokenBuffer.substr(2);\n        break;\n      }\n      skippingTrans = skippingSGML || toggledTrans;\n      if ((tempLetter = letters[token]) !== void 0 && !skippingTrans) {\n        if (toRoman) {\n          buf.push(tempLetter);\n        } else {\n          if (hadConsonant) {\n            if (tempMark = marks[token]) {\n              buf.push(tempMark);\n            } else if (token !== \"a\") {\n              buf.push(virama);\n              buf.push(tempLetter);\n            }\n          } else {\n            buf.push(tempLetter);\n          }\n          hadConsonant = token in consonants;\n        }\n        tokenBuffer = tokenBuffer.substr(maxTokenLength - j);\n        break;\n      } else if (j === maxTokenLength - 1) {\n        if (hadConsonant) {\n          hadConsonant = false;\n          if (!optSyncope) {\n            buf.push(virama);\n          }\n        }\n        buf.push(token);\n        tokenBuffer = tokenBuffer.substr(1);\n      }\n    }\n  }\n  if (hadConsonant && !optSyncope) {\n    buf.push(virama);\n  }\n  return buf.join(\"\");\n};\nvar transliterateBrahmic = function(data, map) {\n  var buf = [], consonants = map.consonants, danglingHash = false, hadRomanConsonant = false, letters = map.letters, marks = map.marks, temp, toRoman = map.toRoman, skippingTrans = false;\n  for (var i = 0, L; L = data.charAt(i); i++) {\n    if (L === \"#\") {\n      if (danglingHash) {\n        skippingTrans = !skippingTrans;\n        danglingHash = false;\n      } else {\n        danglingHash = true;\n      }\n      if (hadRomanConsonant) {\n        buf.push(\"a\");\n        hadRomanConsonant = false;\n      }\n      continue;\n    } else if (skippingTrans) {\n      buf.push(L);\n      continue;\n    }\n    if ((temp = marks[L]) !== void 0) {\n      buf.push(temp);\n      hadRomanConsonant = false;\n    } else {\n      if (danglingHash) {\n        buf.push(\"#\");\n        danglingHash = false;\n      }\n      if (hadRomanConsonant) {\n        buf.push(\"a\");\n        hadRomanConsonant = false;\n      }\n      if (temp = letters[L]) {\n        buf.push(temp);\n        hadRomanConsonant = toRoman && L in consonants;\n      } else {\n        buf.push(L);\n      }\n    }\n  }\n  if (hadRomanConsonant) {\n    buf.push(\"a\");\n  }\n  return buf.join(\"\");\n};\nSanscript.t = function(data, from, to, options) {\n  options = options || {};\n  var cachedOptions = cache.options || {}, defaults = Sanscript.defaults, hasPriorState = cache.from === from && cache.to === to, map;\n  for (var key in defaults) {\n    if (defaults.hasOwnProperty(key)) {\n      var value = defaults[key];\n      if (key in options) {\n        value = options[key];\n      }\n      options[key] = value;\n      if (value !== cachedOptions[key]) {\n        hasPriorState = false;\n      }\n    }\n  }\n  if (hasPriorState) {\n    map = cache.map;\n  } else {\n    map = makeMap(from, to, options);\n    cache = {\n      from,\n      map,\n      options,\n      to\n    };\n  }\n  if (from === \"itrans\") {\n    data = data.replace(/\\{\\\\m\\+\\}/g, \".h.N\");\n    data = data.replace(/\\.h/g, \"\");\n    data = data.replace(/\\\\([^'`_]|$)/g, \"##$1##\");\n  }\n  if (map.fromRoman) {\n    return transliterateRoman(data, map, options);\n  } else {\n    return transliterateBrahmic(data, map, options);\n  }\n};\nexport {Sanscript};\n", "var CSV = {};\n(function(my) {\n  \"use strict\";\n  my.__type__ = \"csv\";\n  var Deferred = typeof jQuery !== \"undefined\" && jQuery.Deferred || typeof _ !== \"undefined\" && _.Deferred || function() {\n    var resolve, reject;\n    var promise = new Promise(function(res, rej) {\n      resolve = res;\n      reject = rej;\n    });\n    return {\n      resolve,\n      reject,\n      promise: function() {\n        return promise;\n      }\n    };\n  };\n  my.fetch = function(dataset) {\n    var dfd = new Deferred();\n    if (dataset.file) {\n      var reader = new FileReader();\n      var encoding = dataset.encoding || \"UTF-8\";\n      reader.onload = function(e) {\n        var out2 = my.extractFields(my.parse(e.target.result, dataset), dataset);\n        out2.useMemoryStore = true;\n        out2.metadata = {\n          filename: dataset.file.name\n        };\n        dfd.resolve(out2);\n      };\n      reader.onerror = function(e) {\n        dfd.reject({\n          error: {\n            message: \"Failed to load file. Code: \" + e.target.error.code\n          }\n        });\n      };\n      reader.readAsText(dataset.file, encoding);\n    } else if (dataset.data) {\n      var out = my.extractFields(my.parse(dataset.data, dataset), dataset);\n      out.useMemoryStore = true;\n      dfd.resolve(out);\n    } else if (dataset.url) {\n      var fetch = window.fetch || function(url) {\n        var jq = jQuery.get(url);\n        var promiseResult = {\n          then: function(res) {\n            jq.done(res);\n            return promiseResult;\n          },\n          catch: function(rej) {\n            jq.fail(rej);\n            return promiseResult;\n          }\n        };\n        return promiseResult;\n      };\n      fetch(dataset.url).then(function(response) {\n        if (response.text) {\n          return response.text();\n        } else {\n          return response;\n        }\n      }).then(function(data) {\n        var out2 = my.extractFields(my.parse(data, dataset), dataset);\n        out2.useMemoryStore = true;\n        dfd.resolve(out2);\n      }).catch(function(req, status) {\n        dfd.reject({\n          error: {\n            message: \"Failed to load file. \" + req.statusText + \". Code: \" + req.status,\n            request: req\n          }\n        });\n      });\n    }\n    return dfd.promise();\n  };\n  my.extractFields = function(rows, noFields) {\n    if (noFields.noHeaderRow !== true && rows.length > 0) {\n      return {\n        fields: rows[0],\n        records: rows.slice(1)\n      };\n    } else {\n      return {\n        records: rows\n      };\n    }\n  };\n  my.normalizeDialectOptions = function(options) {\n    var out = {\n      delimiter: \",\",\n      doublequote: true,\n      lineterminator: \"\\n\",\n      quotechar: '\"',\n      skipinitialspace: true,\n      skipinitialrows: 0\n    };\n    for (var key in options) {\n      if (key === \"trim\") {\n        out[\"skipinitialspace\"] = options.trim;\n      } else {\n        out[key.toLowerCase()] = options[key];\n      }\n    }\n    return out;\n  };\n  my.parse = function(s, dialect) {\n    if (!dialect || dialect && !dialect.lineterminator) {\n      s = my.normalizeLineTerminator(s, dialect);\n    }\n    var options = my.normalizeDialectOptions(dialect);\n    s = chomp(s, options.lineterminator);\n    var cur = \"\", inQuote = false, fieldQuoted = false, field = \"\", row = [], out = [], i, processField;\n    processField = function(field2) {\n      if (fieldQuoted !== true) {\n        if (field2 === \"\") {\n          field2 = null;\n        } else if (options.skipinitialspace === true) {\n          field2 = trim(field2);\n        }\n        if (rxIsInt.test(field2)) {\n          field2 = parseInt(field2, 10);\n        } else if (rxIsFloat.test(field2)) {\n          field2 = parseFloat(field2, 10);\n        }\n      }\n      return field2;\n    };\n    for (i = 0; i < s.length; i += 1) {\n      cur = s.charAt(i);\n      if (inQuote === false && (cur === options.delimiter || cur === options.lineterminator)) {\n        field = processField(field);\n        row.push(field);\n        if (cur === options.lineterminator) {\n          out.push(row);\n          row = [];\n        }\n        field = \"\";\n        fieldQuoted = false;\n      } else {\n        if (cur !== options.quotechar) {\n          field += cur;\n        } else {\n          if (!inQuote) {\n            inQuote = true;\n            fieldQuoted = true;\n          } else {\n            if (s.charAt(i + 1) === options.quotechar) {\n              field += options.quotechar;\n              i += 1;\n            } else {\n              inQuote = false;\n            }\n          }\n        }\n      }\n    }\n    field = processField(field);\n    row.push(field);\n    out.push(row);\n    if (options.skipinitialrows)\n      out = out.slice(options.skipinitialrows);\n    return out;\n  };\n  my.normalizeLineTerminator = function(csvString, dialect) {\n    dialect = dialect || {};\n    if (!dialect.lineterminator) {\n      return csvString.replace(/(\\r\\n|\\n|\\r)/gm, \"\\n\");\n    }\n    return csvString;\n  };\n  my.objectToArray = function(dataToSerialize) {\n    var a = [];\n    var fieldNames = [];\n    var fieldIds = [];\n    for (var ii = 0; ii < dataToSerialize.fields.length; ii++) {\n      var id = dataToSerialize.fields[ii].id;\n      fieldIds.push(id);\n      var label = dataToSerialize.fields[ii].label ? dataToSerialize.fields[ii].label : id;\n      fieldNames.push(label);\n    }\n    a.push(fieldNames);\n    for (var ii = 0; ii < dataToSerialize.records.length; ii++) {\n      var tmp = [];\n      var record = dataToSerialize.records[ii];\n      for (var jj = 0; jj < fieldIds.length; jj++) {\n        tmp.push(record[fieldIds[jj]]);\n      }\n      a.push(tmp);\n    }\n    return a;\n  };\n  my.serialize = function(dataToSerialize, dialect) {\n    var a = null;\n    if (dataToSerialize instanceof Array) {\n      a = dataToSerialize;\n    } else {\n      a = my.objectToArray(dataToSerialize);\n    }\n    var options = my.normalizeDialectOptions(dialect);\n    var cur = \"\", field = \"\", row = \"\", out = \"\", i, j, processField;\n    processField = function(field2) {\n      if (field2 === null) {\n        field2 = \"\";\n      } else if (typeof field2 === \"string\" && rxNeedsQuoting.test(field2)) {\n        if (options.doublequote) {\n          field2 = field2.replace(/\"/g, '\"\"');\n        }\n        field2 = options.quotechar + field2 + options.quotechar;\n      } else if (typeof field2 === \"number\") {\n        field2 = field2.toString(10);\n      }\n      return field2;\n    };\n    for (i = 0; i < a.length; i += 1) {\n      cur = a[i];\n      for (j = 0; j < cur.length; j += 1) {\n        field = processField(cur[j]);\n        if (j === cur.length - 1) {\n          row += field;\n          out += row + options.lineterminator;\n          row = \"\";\n        } else {\n          row += field + options.delimiter;\n        }\n        field = \"\";\n      }\n    }\n    return out;\n  };\n  var rxIsInt = /^\\d+$/, rxIsFloat = /^\\d*\\.\\d+$|^\\d+\\.\\d*$/, rxNeedsQuoting = /^\\s|\\s$|,|\"|\\n/, trim = function() {\n    if (String.prototype.trim) {\n      return function(s) {\n        return s.trim();\n      };\n    } else {\n      return function(s) {\n        return s.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\");\n      };\n    }\n  }();\n  function chomp(s, lineterminator) {\n    if (s.charAt(s.length - lineterminator.length) !== lineterminator) {\n      return s;\n    } else {\n      return s.substring(0, s.length - lineterminator.length);\n    }\n  }\n})(CSV);\nexport {CSV};\n", "function getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar raphael_min = createCommonjsModule(function (module, exports) {\n!function(t,e){module.exports=e();}(window,function(){return function(t){var e={};function r(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i});},r.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0});},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var n in t)r.d(i,n,function(e){return t[e]}.bind(null,n));return i},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\"\",r(r.s=1)}([function(t,e,r){var i,n;i=[r(2)],void 0===(n=function(t){function e(i){if(e.is(i,\"function\"))return r?i():t.on(\"raphael.DOMload\",i);if(e.is(i,A))return e._engine.create[c](e,i.splice(0,3+e.is(i[0],T))).add(i);var n=Array.prototype.slice.call(arguments,0);if(e.is(n[n.length-1],\"function\")){var a=n.pop();return r?a.call(e._engine.create[c](e,n)):t.on(\"raphael.DOMload\",function(){a.call(e._engine.create[c](e,n));})}return e._engine.create[c](e,arguments)}e.version=\"2.3.0\",e.eve=t;var r,i,n=/[, ]+/,a={circle:1,rect:1,path:1,ellipse:1,text:1,image:1},s=/\\{(\\d+)\\}/g,o=\"hasOwnProperty\",l={doc:document,win:window},h={was:Object.prototype[o].call(l.win,\"Raphael\"),is:l.win.Raphael},u=function(){this.ca=this.customAttributes={};},c=\"apply\",f=\"concat\",p=\"ontouchstart\"in window||window.TouchEvent||window.DocumentTouch&&document instanceof DocumentTouch,d=\"\",g=\" \",x=String,v=\"split\",y=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[v](g),m={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},b=x.prototype.toLowerCase,_=Math,w=_.max,k=_.min,B=_.abs,C=_.pow,S=_.PI,T=\"number\",A=\"array\",M=Object.prototype.toString,E=(e._ISURL=/^url\\(['\"]?(.+?)['\"]?\\)$/i,/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i),N={NaN:1,Infinity:1,\"-Infinity\":1},L=/^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,P=_.round,z=parseFloat,F=parseInt,R=x.prototype.toUpperCase,j=e._availableAttrs={\"arrow-end\":\"none\",\"arrow-start\":\"none\",blur:0,\"clip-rect\":\"0 0 1e9 1e9\",cursor:\"default\",cx:0,cy:0,fill:\"#fff\",\"fill-opacity\":1,font:'10px \"Arial\"',\"font-family\":'\"Arial\"',\"font-size\":\"10\",\"font-style\":\"normal\",\"font-weight\":400,gradient:0,height:0,href:\"http://raphaeljs.com/\",\"letter-spacing\":0,opacity:1,path:\"M0,0\",r:0,rx:0,ry:0,src:\"\",stroke:\"#000\",\"stroke-dasharray\":\"\",\"stroke-linecap\":\"butt\",\"stroke-linejoin\":\"butt\",\"stroke-miterlimit\":0,\"stroke-opacity\":1,\"stroke-width\":1,target:\"_blank\",\"text-anchor\":\"middle\",title:\"Raphael\",transform:\"\",width:0,x:0,y:0,class:\"\"},I=e._availableAnimAttrs={blur:T,\"clip-rect\":\"csv\",cx:T,cy:T,fill:\"colour\",\"fill-opacity\":T,\"font-size\":T,height:T,opacity:T,path:\"path\",r:T,rx:T,ry:T,stroke:\"colour\",\"stroke-opacity\":T,\"stroke-width\":T,transform:\"transform\",width:T,x:T,y:T},D=/[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,q={hs:1,rg:1},O=/,?([achlmqrstvxz]),?/gi,V=/([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/gi,W=/([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/gi,Y=/(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/gi,G=(e._radial_gradient=/^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,{}),H=function(t,e){return z(t)-z(e)},X=function(t){return t},U=e._rectPath=function(t,e,r,i,n){return n?[[\"M\",t+n,e],[\"l\",r-2*n,0],[\"a\",n,n,0,0,1,n,n],[\"l\",0,i-2*n],[\"a\",n,n,0,0,1,-n,n],[\"l\",2*n-r,0],[\"a\",n,n,0,0,1,-n,-n],[\"l\",0,2*n-i],[\"a\",n,n,0,0,1,n,-n],[\"z\"]]:[[\"M\",t,e],[\"l\",r,0],[\"l\",0,i],[\"l\",-r,0],[\"z\"]]},$=function(t,e,r,i){return null==i&&(i=r),[[\"M\",t,e],[\"m\",0,-i],[\"a\",r,i,0,1,1,0,2*i],[\"a\",r,i,0,1,1,0,-2*i],[\"z\"]]},Z=e._getPath={path:function(t){return t.attr(\"path\")},circle:function(t){var e=t.attrs;return $(e.cx,e.cy,e.r)},ellipse:function(t){var e=t.attrs;return $(e.cx,e.cy,e.rx,e.ry)},rect:function(t){var e=t.attrs;return U(e.x,e.y,e.width,e.height,e.r)},image:function(t){var e=t.attrs;return U(e.x,e.y,e.width,e.height)},text:function(t){var e=t._getBBox();return U(e.x,e.y,e.width,e.height)},set:function(t){var e=t._getBBox();return U(e.x,e.y,e.width,e.height)}},Q=e.mapPath=function(t,e){if(!e)return t;var r,i,n,a,s,o,l;for(n=0,s=(t=Tt(t)).length;n<s;n++)for(a=1,o=(l=t[n]).length;a<o;a+=2)r=e.x(l[a],l[a+1]),i=e.y(l[a],l[a+1]),l[a]=r,l[a+1]=i;return t};if(e._g=l,e.type=l.win.SVGAngle||l.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\",\"1.1\")?\"SVG\":\"VML\",\"VML\"==e.type){var J,K=l.doc.createElement(\"div\");if(K.innerHTML='<v:shape adj=\"1\"/>',(J=K.firstChild).style.behavior=\"url(#default#VML)\",!J||\"object\"!=typeof J.adj)return e.type=d;K=null;}function tt(t){if(\"function\"==typeof t||Object(t)!==t)return t;var e=new t.constructor;for(var r in t)t[o](r)&&(e[r]=tt(t[r]));return e}e.svg=!(e.vml=\"VML\"==e.type),e._Paper=u,e.fn=i=u.prototype=e.prototype,e._id=0,e.is=function(t,e){return \"finite\"==(e=b.call(e))?!N[o](+t):\"array\"==e?t instanceof Array:\"null\"==e&&null===t||e==typeof t&&null!==t||\"object\"==e&&t===Object(t)||\"array\"==e&&Array.isArray&&Array.isArray(t)||M.call(t).slice(8,-1).toLowerCase()==e},e.angle=function(t,r,i,n,a,s){if(null==a){var o=t-i,l=r-n;return o||l?(180+180*_.atan2(-l,-o)/S+360)%360:0}return e.angle(t,r,a,s)-e.angle(i,n,a,s)},e.rad=function(t){return t%360*S/180},e.deg=function(t){return Math.round(180*t/S%360*1e3)/1e3},e.snapTo=function(t,r,i){if(i=e.is(i,\"finite\")?i:10,e.is(t,A)){for(var n=t.length;n--;)if(B(t[n]-r)<=i)return t[n]}else {var a=r%(t=+t);if(a<i)return r-a;if(a>t-i)return r-a+t}return r};var et,rt;e.createUUID=(et=/[xy]/g,rt=function(t){var e=16*_.random()|0;return (\"x\"==t?e:3&e|8).toString(16)},function(){return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(et,rt).toUpperCase()});e.setWindow=function(r){t(\"raphael.setWindow\",e,l.win,r),l.win=r,l.doc=l.win.document,e._engine.initWin&&e._engine.initWin(l.win);};var it=function(t){if(e.vml){var r,i=/^\\s+|\\s+$/g;try{var n=new ActiveXObject(\"htmlfile\");n.write(\"<body>\"),n.close(),r=n.body;}catch(t){r=createPopup().document.body;}var a=r.createTextRange();it=ht(function(t){try{r.style.color=x(t).replace(i,d);var e=a.queryCommandValue(\"ForeColor\");return \"#\"+(\"000000\"+(e=(255&e)<<16|65280&e|(16711680&e)>>>16).toString(16)).slice(-6)}catch(t){return \"none\"}});}else {var s=l.doc.createElement(\"i\");s.title=\"Rapha├лl Colour Picker\",s.style.display=\"none\",l.doc.body.appendChild(s),it=ht(function(t){return s.style.color=t,l.doc.defaultView.getComputedStyle(s,d).getPropertyValue(\"color\")});}return it(t)},nt=function(){return \"hsb(\"+[this.h,this.s,this.b]+\")\"},at=function(){return \"hsl(\"+[this.h,this.s,this.l]+\")\"},st=function(){return this.hex},ot=function(t,r,i){if(null==r&&e.is(t,\"object\")&&\"r\"in t&&\"g\"in t&&\"b\"in t&&(i=t.b,r=t.g,t=t.r),null==r&&e.is(t,\"string\")){var n=e.getRGB(t);t=n.r,r=n.g,i=n.b;}return (t>1||r>1||i>1)&&(t/=255,r/=255,i/=255),[t,r,i]},lt=function(t,r,i,n){var a={r:t*=255,g:r*=255,b:i*=255,hex:e.rgb(t,r,i),toString:st};return e.is(n,\"finite\")&&(a.opacity=n),a};function ht(t,e,r){return function i(){var n=Array.prototype.slice.call(arguments,0),a=n.join(\"тРА\"),s=i.cache=i.cache||{},l=i.count=i.count||[];return s[o](a)?(function(t,e){for(var r=0,i=t.length;r<i;r++)if(t[r]===e)return t.push(t.splice(r,1)[0])}(l,a),r?r(s[a]):s[a]):(l.length>=1e3&&delete s[l.shift()],l.push(a),s[a]=t[c](e,n),r?r(s[a]):s[a])}}e.color=function(t){var r;return e.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"b\"in t?(r=e.hsb2rgb(t),t.r=r.r,t.g=r.g,t.b=r.b,t.hex=r.hex):e.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"l\"in t?(r=e.hsl2rgb(t),t.r=r.r,t.g=r.g,t.b=r.b,t.hex=r.hex):(e.is(t,\"string\")&&(t=e.getRGB(t)),e.is(t,\"object\")&&\"r\"in t&&\"g\"in t&&\"b\"in t?(r=e.rgb2hsl(t),t.h=r.h,t.s=r.s,t.l=r.l,r=e.rgb2hsb(t),t.v=r.b):(t={hex:\"none\"}).r=t.g=t.b=t.h=t.s=t.v=t.l=-1),t.toString=st,t},e.hsb2rgb=function(t,e,r,i){var n,a,s,o,l;return this.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"b\"in t&&(r=t.b,e=t.s,i=t.o,t=t.h),o=(l=r*e)*(1-B((t=(t*=360)%360/60)%2-1)),n=a=s=r-l,lt(n+=[l,o,0,0,o,l][t=~~t],a+=[o,l,l,o,0,0][t],s+=[0,0,o,l,l,o][t],i)},e.hsl2rgb=function(t,e,r,i){var n,a,s,o,l;return this.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"l\"in t&&(r=t.l,e=t.s,t=t.h),(t>1||e>1||r>1)&&(t/=360,e/=100,r/=100),o=(l=2*e*(r<.5?r:1-r))*(1-B((t=(t*=360)%360/60)%2-1)),n=a=s=r-l/2,lt(n+=[l,o,0,0,o,l][t=~~t],a+=[o,l,l,o,0,0][t],s+=[0,0,o,l,l,o][t],i)},e.rgb2hsb=function(t,e,r){var i,n;return t=(r=ot(t,e,r))[0],e=r[1],r=r[2],{h:((0==(n=(i=w(t,e,r))-k(t,e,r))?null:i==t?(e-r)/n:i==e?(r-t)/n+2:(t-e)/n+4)+360)%6*60/360,s:0==n?0:n/i,b:i,toString:nt}},e.rgb2hsl=function(t,e,r){var i,n,a,s;return t=(r=ot(t,e,r))[0],e=r[1],r=r[2],i=((n=w(t,e,r))+(a=k(t,e,r)))/2,{h:((0==(s=n-a)?null:n==t?(e-r)/s:n==e?(r-t)/s+2:(t-e)/s+4)+360)%6*60/360,s:0==s?0:i<.5?s/(2*i):s/(2-2*i),l:i,toString:at}},e._path2string=function(){return this.join(\",\").replace(O,\"$1\")};e._preload=function(t,e){var r=l.doc.createElement(\"img\");r.style.cssText=\"position:absolute;left:-9999em;top:-9999em\",r.onload=function(){e.call(this),this.onload=null,l.doc.body.removeChild(this);},r.onerror=function(){l.doc.body.removeChild(this);},l.doc.body.appendChild(r),r.src=t;};function ut(){return this.hex}function ct(t,e){for(var r=[],i=0,n=t.length;n-2*!e>i;i+=2){var a=[{x:+t[i-2],y:+t[i-1]},{x:+t[i],y:+t[i+1]},{x:+t[i+2],y:+t[i+3]},{x:+t[i+4],y:+t[i+5]}];e?i?n-4==i?a[3]={x:+t[0],y:+t[1]}:n-2==i&&(a[2]={x:+t[0],y:+t[1]},a[3]={x:+t[2],y:+t[3]}):a[0]={x:+t[n-2],y:+t[n-1]}:n-4==i?a[3]=a[2]:i||(a[0]={x:+t[i],y:+t[i+1]}),r.push([\"C\",(-a[0].x+6*a[1].x+a[2].x)/6,(-a[0].y+6*a[1].y+a[2].y)/6,(a[1].x+6*a[2].x-a[3].x)/6,(a[1].y+6*a[2].y-a[3].y)/6,a[2].x,a[2].y]);}return r}e.getRGB=ht(function(t){if(!t||(t=x(t)).indexOf(\"-\")+1)return {r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ut};if(\"none\"==t)return {r:-1,g:-1,b:-1,hex:\"none\",toString:ut};!q[o](t.toLowerCase().substring(0,2))&&\"#\"!=t.charAt()&&(t=it(t));var r,i,n,a,s,l,h=t.match(E);return h?(h[2]&&(n=F(h[2].substring(5),16),i=F(h[2].substring(3,5),16),r=F(h[2].substring(1,3),16)),h[3]&&(n=F((s=h[3].charAt(3))+s,16),i=F((s=h[3].charAt(2))+s,16),r=F((s=h[3].charAt(1))+s,16)),h[4]&&(l=h[4][v](D),r=z(l[0]),\"%\"==l[0].slice(-1)&&(r*=2.55),i=z(l[1]),\"%\"==l[1].slice(-1)&&(i*=2.55),n=z(l[2]),\"%\"==l[2].slice(-1)&&(n*=2.55),\"rgba\"==h[1].toLowerCase().slice(0,4)&&(a=z(l[3])),l[3]&&\"%\"==l[3].slice(-1)&&(a/=100)),h[5]?(l=h[5][v](D),r=z(l[0]),\"%\"==l[0].slice(-1)&&(r*=2.55),i=z(l[1]),\"%\"==l[1].slice(-1)&&(i*=2.55),n=z(l[2]),\"%\"==l[2].slice(-1)&&(n*=2.55),(\"deg\"==l[0].slice(-3)||\"┬░\"==l[0].slice(-1))&&(r/=360),\"hsba\"==h[1].toLowerCase().slice(0,4)&&(a=z(l[3])),l[3]&&\"%\"==l[3].slice(-1)&&(a/=100),e.hsb2rgb(r,i,n,a)):h[6]?(l=h[6][v](D),r=z(l[0]),\"%\"==l[0].slice(-1)&&(r*=2.55),i=z(l[1]),\"%\"==l[1].slice(-1)&&(i*=2.55),n=z(l[2]),\"%\"==l[2].slice(-1)&&(n*=2.55),(\"deg\"==l[0].slice(-3)||\"┬░\"==l[0].slice(-1))&&(r/=360),\"hsla\"==h[1].toLowerCase().slice(0,4)&&(a=z(l[3])),l[3]&&\"%\"==l[3].slice(-1)&&(a/=100),e.hsl2rgb(r,i,n,a)):((h={r:r,g:i,b:n,toString:ut}).hex=\"#\"+(16777216|n|i<<8|r<<16).toString(16).slice(1),e.is(a,\"finite\")&&(h.opacity=a),h)):{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ut}},e),e.hsb=ht(function(t,r,i){return e.hsb2rgb(t,r,i).hex}),e.hsl=ht(function(t,r,i){return e.hsl2rgb(t,r,i).hex}),e.rgb=ht(function(t,e,r){function i(t){return t+.5|0}return \"#\"+(16777216|i(r)|i(e)<<8|i(t)<<16).toString(16).slice(1)}),e.getColor=function(t){var e=this.getColor.start=this.getColor.start||{h:0,s:1,b:t||.75},r=this.hsb2rgb(e.h,e.s,e.b);return e.h+=.075,e.h>1&&(e.h=0,e.s-=.2,e.s<=0&&(this.getColor.start={h:0,s:1,b:e.b})),r.hex},e.getColor.reset=function(){delete this.start;},e.parsePathString=function(t){if(!t)return null;var r=ft(t);if(r.arr)return mt(r.arr);var i={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0},n=[];return e.is(t,A)&&e.is(t[0],A)&&(n=mt(t)),n.length||x(t).replace(V,function(t,e,r){var a=[],s=e.toLowerCase();if(r.replace(Y,function(t,e){e&&a.push(+e);}),\"m\"==s&&a.length>2&&(n.push([e][f](a.splice(0,2))),s=\"l\",e=\"m\"==e?\"l\":\"L\"),\"r\"==s)n.push([e][f](a));else for(;a.length>=i[s]&&(n.push([e][f](a.splice(0,i[s]))),i[s]););}),n.toString=e._path2string,r.arr=mt(n),n},e.parseTransformString=ht(function(t){if(!t)return null;var r=[];return e.is(t,A)&&e.is(t[0],A)&&(r=mt(t)),r.length||x(t).replace(W,function(t,e,i){var n=[];b.call(e);i.replace(Y,function(t,e){e&&n.push(+e);}),r.push([e][f](n));}),r.toString=e._path2string,r},this,function(t){if(!t)return t;for(var e=[],r=0;r<t.length;r++){for(var i=[],n=0;n<t[r].length;n++)i.push(t[r][n]);e.push(i);}return e});var ft=function(t){var e=ft.ps=ft.ps||{};return e[t]?e[t].sleep=100:e[t]={sleep:100},setTimeout(function(){for(var r in e)e[o](r)&&r!=t&&(e[r].sleep--,!e[r].sleep&&delete e[r]);}),e[t]};function pt(t,e,r,i,n){return t*(t*(-3*e+9*r-9*i+3*n)+6*e-12*r+6*i)-3*e+3*r}function dt(t,e,r,i,n,a,s,o,l){null==l&&(l=1);for(var h=(l=l>1?1:l<0?0:l)/2,u=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],c=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],f=0,p=0;p<12;p++){var d=h*u[p]+h,g=pt(d,t,r,n,s),x=pt(d,e,i,a,o),v=g*g+x*x;f+=c[p]*_.sqrt(v);}return h*f}function gt(t,e,r,i,n,a,s,o){if(!(w(t,r)<k(n,s)||k(t,r)>w(n,s)||w(e,i)<k(a,o)||k(e,i)>w(a,o))){var l=(t-r)*(a-o)-(e-i)*(n-s);if(l){var h=((t*i-e*r)*(n-s)-(t-r)*(n*o-a*s))/l,u=((t*i-e*r)*(a-o)-(e-i)*(n*o-a*s))/l,c=+h.toFixed(2),f=+u.toFixed(2);if(!(c<+k(t,r).toFixed(2)||c>+w(t,r).toFixed(2)||c<+k(n,s).toFixed(2)||c>+w(n,s).toFixed(2)||f<+k(e,i).toFixed(2)||f>+w(e,i).toFixed(2)||f<+k(a,o).toFixed(2)||f>+w(a,o).toFixed(2)))return {x:h,y:u}}}}function xt(t,r,i){var n=e.bezierBBox(t),a=e.bezierBBox(r);if(!e.isBBoxIntersect(n,a))return i?0:[];for(var s=dt.apply(0,t),o=dt.apply(0,r),l=w(~~(s/5),1),h=w(~~(o/5),1),u=[],c=[],f={},p=i?0:[],d=0;d<l+1;d++){var g=e.findDotsAtSegment.apply(e,t.concat(d/l));u.push({x:g.x,y:g.y,t:d/l});}for(d=0;d<h+1;d++)g=e.findDotsAtSegment.apply(e,r.concat(d/h)),c.push({x:g.x,y:g.y,t:d/h});for(d=0;d<l;d++)for(var x=0;x<h;x++){var v=u[d],y=u[d+1],m=c[x],b=c[x+1],_=B(y.x-v.x)<.001?\"y\":\"x\",C=B(b.x-m.x)<.001?\"y\":\"x\",S=gt(v.x,v.y,y.x,y.y,m.x,m.y,b.x,b.y);if(S){if(f[S.x.toFixed(4)]==S.y.toFixed(4))continue;f[S.x.toFixed(4)]=S.y.toFixed(4);var T=v.t+B((S[_]-v[_])/(y[_]-v[_]))*(y.t-v.t),A=m.t+B((S[C]-m[C])/(b[C]-m[C]))*(b.t-m.t);T>=0&&T<=1.001&&A>=0&&A<=1.001&&(i?p++:p.push({x:S.x,y:S.y,t1:k(T,1),t2:k(A,1)}));}}return p}function vt(t,r,i){t=e._path2curve(t),r=e._path2curve(r);for(var n,a,s,o,l,h,u,c,f,p,d=i?0:[],g=0,x=t.length;g<x;g++){var v=t[g];if(\"M\"==v[0])n=l=v[1],a=h=v[2];else {\"C\"==v[0]?(f=[n,a].concat(v.slice(1)),n=f[6],a=f[7]):(f=[n,a,n,a,l,h,l,h],n=l,a=h);for(var y=0,m=r.length;y<m;y++){var b=r[y];if(\"M\"==b[0])s=u=b[1],o=c=b[2];else {\"C\"==b[0]?(p=[s,o].concat(b.slice(1)),s=p[6],o=p[7]):(p=[s,o,s,o,u,c,u,c],s=u,o=c);var _=xt(f,p,i);if(i)d+=_;else {for(var w=0,k=_.length;w<k;w++)_[w].segment1=g,_[w].segment2=y,_[w].bez1=f,_[w].bez2=p;d=d.concat(_);}}}}}return d}e.findDotsAtSegment=function(t,e,r,i,n,a,s,o,l){var h=1-l,u=C(h,3),c=C(h,2),f=l*l,p=f*l,d=u*t+3*c*l*r+3*h*l*l*n+p*s,g=u*e+3*c*l*i+3*h*l*l*a+p*o,x=t+2*l*(r-t)+f*(n-2*r+t),v=e+2*l*(i-e)+f*(a-2*i+e),y=r+2*l*(n-r)+f*(s-2*n+r),m=i+2*l*(a-i)+f*(o-2*a+i),b=h*t+l*r,w=h*e+l*i,k=h*n+l*s,B=h*a+l*o,T=90-180*_.atan2(x-y,v-m)/S;return (x>y||v<m)&&(T+=180),{x:d,y:g,m:{x:x,y:v},n:{x:y,y:m},start:{x:b,y:w},end:{x:k,y:B},alpha:T}},e.bezierBBox=function(t,r,i,n,a,s,o,l){e.is(t,\"array\")||(t=[t,r,i,n,a,s,o,l]);var h=St.apply(null,t);return {x:h.min.x,y:h.min.y,x2:h.max.x,y2:h.max.y,width:h.max.x-h.min.x,height:h.max.y-h.min.y}},e.isPointInsideBBox=function(t,e,r){return e>=t.x&&e<=t.x2&&r>=t.y&&r<=t.y2},e.isBBoxIntersect=function(t,r){var i=e.isPointInsideBBox;return i(r,t.x,t.y)||i(r,t.x2,t.y)||i(r,t.x,t.y2)||i(r,t.x2,t.y2)||i(t,r.x,r.y)||i(t,r.x2,r.y)||i(t,r.x,r.y2)||i(t,r.x2,r.y2)||(t.x<r.x2&&t.x>r.x||r.x<t.x2&&r.x>t.x)&&(t.y<r.y2&&t.y>r.y||r.y<t.y2&&r.y>t.y)},e.pathIntersection=function(t,e){return vt(t,e)},e.pathIntersectionNumber=function(t,e){return vt(t,e,1)},e.isPointInsidePath=function(t,r,i){var n=e.pathBBox(t);return e.isPointInsideBBox(n,r,i)&&vt(t,[[\"M\",r,i],[\"H\",n.x2+10]],1)%2==1},e._removedFactory=function(e){return function(){t(\"raphael.log\",null,\"Rapha├лl: you are calling to method тАЬ\"+e+\"тАЭ of removed object\",e);}};var yt=e.pathBBox=function(t){var e=ft(t);if(e.bbox)return tt(e.bbox);if(!t)return {x:0,y:0,width:0,height:0,x2:0,y2:0};for(var r,i=0,n=0,a=[],s=[],o=0,l=(t=Tt(t)).length;o<l;o++)if(\"M\"==(r=t[o])[0])i=r[1],n=r[2],a.push(i),s.push(n);else {var h=St(i,n,r[1],r[2],r[3],r[4],r[5],r[6]);a=a[f](h.min.x,h.max.x),s=s[f](h.min.y,h.max.y),i=r[5],n=r[6];}var u=k[c](0,a),p=k[c](0,s),d=w[c](0,a),g=w[c](0,s),x=d-u,v=g-p,y={x:u,y:p,x2:d,y2:g,width:x,height:v,cx:u+x/2,cy:p+v/2};return e.bbox=tt(y),y},mt=function(t){var r=tt(t);return r.toString=e._path2string,r},bt=e._pathToRelative=function(t){var r=ft(t);if(r.rel)return mt(r.rel);e.is(t,A)&&e.is(t&&t[0],A)||(t=e.parsePathString(t));var i=[],n=0,a=0,s=0,o=0,l=0;\"M\"==t[0][0]&&(s=n=t[0][1],o=a=t[0][2],l++,i.push([\"M\",n,a]));for(var h=l,u=t.length;h<u;h++){var c=i[h]=[],f=t[h];if(f[0]!=b.call(f[0]))switch(c[0]=b.call(f[0]),c[0]){case\"a\":c[1]=f[1],c[2]=f[2],c[3]=f[3],c[4]=f[4],c[5]=f[5],c[6]=+(f[6]-n).toFixed(3),c[7]=+(f[7]-a).toFixed(3);break;case\"v\":c[1]=+(f[1]-a).toFixed(3);break;case\"m\":s=f[1],o=f[2];default:for(var p=1,d=f.length;p<d;p++)c[p]=+(f[p]-(p%2?n:a)).toFixed(3);}else {c=i[h]=[],\"m\"==f[0]&&(s=f[1]+n,o=f[2]+a);for(var g=0,x=f.length;g<x;g++)i[h][g]=f[g];}var v=i[h].length;switch(i[h][0]){case\"z\":n=s,a=o;break;case\"h\":n+=+i[h][v-1];break;case\"v\":a+=+i[h][v-1];break;default:n+=+i[h][v-2],a+=+i[h][v-1];}}return i.toString=e._path2string,r.rel=mt(i),i},_t=e._pathToAbsolute=function(t){var r=ft(t);if(r.abs)return mt(r.abs);if(e.is(t,A)&&e.is(t&&t[0],A)||(t=e.parsePathString(t)),!t||!t.length)return [[\"M\",0,0]];var i=[],n=0,a=0,s=0,o=0,l=0;\"M\"==t[0][0]&&(s=n=+t[0][1],o=a=+t[0][2],l++,i[0]=[\"M\",n,a]);for(var h,u,c=3==t.length&&\"M\"==t[0][0]&&\"R\"==t[1][0].toUpperCase()&&\"Z\"==t[2][0].toUpperCase(),p=l,d=t.length;p<d;p++){if(i.push(h=[]),(u=t[p])[0]!=R.call(u[0]))switch(h[0]=R.call(u[0]),h[0]){case\"A\":h[1]=u[1],h[2]=u[2],h[3]=u[3],h[4]=u[4],h[5]=u[5],h[6]=+(u[6]+n),h[7]=+(u[7]+a);break;case\"V\":h[1]=+u[1]+a;break;case\"H\":h[1]=+u[1]+n;break;case\"R\":for(var g=[n,a][f](u.slice(1)),x=2,v=g.length;x<v;x++)g[x]=+g[x]+n,g[++x]=+g[x]+a;i.pop(),i=i[f](ct(g,c));break;case\"M\":s=+u[1]+n,o=+u[2]+a;default:for(x=1,v=u.length;x<v;x++)h[x]=+u[x]+(x%2?n:a);}else if(\"R\"==u[0])g=[n,a][f](u.slice(1)),i.pop(),i=i[f](ct(g,c)),h=[\"R\"][f](u.slice(-2));else for(var y=0,m=u.length;y<m;y++)h[y]=u[y];switch(h[0]){case\"Z\":n=s,a=o;break;case\"H\":n=h[1];break;case\"V\":a=h[1];break;case\"M\":s=h[h.length-2],o=h[h.length-1];default:n=h[h.length-2],a=h[h.length-1];}}return i.toString=e._path2string,r.abs=mt(i),i},wt=function(t,e,r,i){return [t,e,r,i,r,i]},kt=function(t,e,r,i,n,a){return [1/3*t+2/3*r,1/3*e+2/3*i,1/3*n+2/3*r,1/3*a+2/3*i,n,a]},Bt=function(t,e,r,i,n,a,s,o,l,h){var u,c=120*S/180,p=S/180*(+n||0),d=[],g=ht(function(t,e,r){return {x:t*_.cos(r)-e*_.sin(r),y:t*_.sin(r)+e*_.cos(r)}});if(h)A=h[0],M=h[1],C=h[2],T=h[3];else {t=(u=g(t,e,-p)).x,e=u.y,o=(u=g(o,l,-p)).x,l=u.y;var x=(t-o)/2,y=(e-l)/2,m=x*x/(r*r)+y*y/(i*i);m>1&&(r*=m=_.sqrt(m),i*=m);var b=r*r,w=i*i,k=(a==s?-1:1)*_.sqrt(B((b*w-b*y*y-w*x*x)/(b*y*y+w*x*x))),C=k*r*y/i+(t+o)/2,T=k*-i*x/r+(e+l)/2,A=_.asin(((e-T)/i).toFixed(9)),M=_.asin(((l-T)/i).toFixed(9));(A=t<C?S-A:A)<0&&(A=2*S+A),(M=o<C?S-M:M)<0&&(M=2*S+M),s&&A>M&&(A-=2*S),!s&&M>A&&(M-=2*S);}var E=M-A;if(B(E)>c){var N=M,L=o,P=l;M=A+c*(s&&M>A?1:-1),o=C+r*_.cos(M),l=T+i*_.sin(M),d=Bt(o,l,r,i,n,0,s,L,P,[M,N,C,T]);}E=M-A;var z=_.cos(A),F=_.sin(A),R=_.cos(M),j=_.sin(M),I=_.tan(E/4),D=4/3*r*I,q=4/3*i*I,O=[t,e],V=[t+D*F,e-q*z],W=[o+D*j,l-q*R],Y=[o,l];if(V[0]=2*O[0]-V[0],V[1]=2*O[1]-V[1],h)return [V,W,Y][f](d);for(var G=[],H=0,X=(d=[V,W,Y][f](d).join()[v](\",\")).length;H<X;H++)G[H]=H%2?g(d[H-1],d[H],p).y:g(d[H],d[H+1],p).x;return G},Ct=function(t,e,r,i,n,a,s,o,l){var h=1-l;return {x:C(h,3)*t+3*C(h,2)*l*r+3*h*l*l*n+C(l,3)*s,y:C(h,3)*e+3*C(h,2)*l*i+3*h*l*l*a+C(l,3)*o}},St=ht(function(t,e,r,i,n,a,s,o){var l,h=n-2*r+t-(s-2*n+r),u=2*(r-t)-2*(n-r),f=t-r,p=(-u+_.sqrt(u*u-4*h*f))/2/h,d=(-u-_.sqrt(u*u-4*h*f))/2/h,g=[e,o],x=[t,s];return B(p)>\"1e12\"&&(p=.5),B(d)>\"1e12\"&&(d=.5),p>0&&p<1&&(l=Ct(t,e,r,i,n,a,s,o,p),x.push(l.x),g.push(l.y)),d>0&&d<1&&(l=Ct(t,e,r,i,n,a,s,o,d),x.push(l.x),g.push(l.y)),h=a-2*i+e-(o-2*a+i),f=e-i,p=(-(u=2*(i-e)-2*(a-i))+_.sqrt(u*u-4*h*f))/2/h,d=(-u-_.sqrt(u*u-4*h*f))/2/h,B(p)>\"1e12\"&&(p=.5),B(d)>\"1e12\"&&(d=.5),p>0&&p<1&&(l=Ct(t,e,r,i,n,a,s,o,p),x.push(l.x),g.push(l.y)),d>0&&d<1&&(l=Ct(t,e,r,i,n,a,s,o,d),x.push(l.x),g.push(l.y)),{min:{x:k[c](0,x),y:k[c](0,g)},max:{x:w[c](0,x),y:w[c](0,g)}}}),Tt=e._path2curve=ht(function(t,e){var r=!e&&ft(t);if(!e&&r.curve)return mt(r.curve);for(var i=_t(t),n=e&&_t(e),a={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},s={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},o=function(t,e,r){var i,n;if(!t)return [\"C\",e.x,e.y,e.x,e.y,e.x,e.y];switch(!(t[0]in{T:1,Q:1})&&(e.qx=e.qy=null),t[0]){case\"M\":e.X=t[1],e.Y=t[2];break;case\"A\":t=[\"C\"][f](Bt[c](0,[e.x,e.y][f](t.slice(1))));break;case\"S\":\"C\"==r||\"S\"==r?(i=2*e.x-e.bx,n=2*e.y-e.by):(i=e.x,n=e.y),t=[\"C\",i,n][f](t.slice(1));break;case\"T\":\"Q\"==r||\"T\"==r?(e.qx=2*e.x-e.qx,e.qy=2*e.y-e.qy):(e.qx=e.x,e.qy=e.y),t=[\"C\"][f](kt(e.x,e.y,e.qx,e.qy,t[1],t[2]));break;case\"Q\":e.qx=t[1],e.qy=t[2],t=[\"C\"][f](kt(e.x,e.y,t[1],t[2],t[3],t[4]));break;case\"L\":t=[\"C\"][f](wt(e.x,e.y,t[1],t[2]));break;case\"H\":t=[\"C\"][f](wt(e.x,e.y,t[1],e.y));break;case\"V\":t=[\"C\"][f](wt(e.x,e.y,e.x,t[1]));break;case\"Z\":t=[\"C\"][f](wt(e.x,e.y,e.X,e.Y));}return t},l=function(t,e){if(t[e].length>7){t[e].shift();for(var r=t[e];r.length;)u[e]=\"A\",n&&(p[e]=\"A\"),t.splice(e++,0,[\"C\"][f](r.splice(0,6)));t.splice(e,1),v=w(i.length,n&&n.length||0);}},h=function(t,e,r,a,s){t&&e&&\"M\"==t[s][0]&&\"M\"!=e[s][0]&&(e.splice(s,0,[\"M\",a.x,a.y]),r.bx=0,r.by=0,r.x=t[s][1],r.y=t[s][2],v=w(i.length,n&&n.length||0));},u=[],p=[],d=\"\",g=\"\",x=0,v=w(i.length,n&&n.length||0);x<v;x++){i[x]&&(d=i[x][0]),\"C\"!=d&&(u[x]=d,x&&(g=u[x-1])),i[x]=o(i[x],a,g),\"A\"!=u[x]&&\"C\"==d&&(u[x]=\"C\"),l(i,x),n&&(n[x]&&(d=n[x][0]),\"C\"!=d&&(p[x]=d,x&&(g=p[x-1])),n[x]=o(n[x],s,g),\"A\"!=p[x]&&\"C\"==d&&(p[x]=\"C\"),l(n,x)),h(i,n,a,s,x),h(n,i,s,a,x);var y=i[x],m=n&&n[x],b=y.length,_=n&&m.length;a.x=y[b-2],a.y=y[b-1],a.bx=z(y[b-4])||a.x,a.by=z(y[b-3])||a.y,s.bx=n&&(z(m[_-4])||s.x),s.by=n&&(z(m[_-3])||s.y),s.x=n&&m[_-2],s.y=n&&m[_-1];}return n||(r.curve=mt(i)),n?[i,n]:i},null,mt),At=(e._parseDots=ht(function(t){for(var r=[],i=0,n=t.length;i<n;i++){var a={},s=t[i].match(/^([^:]*):?([\\d\\.]*)/);if(a.color=e.getRGB(s[1]),a.color.error)return null;a.opacity=a.color.opacity,a.color=a.color.hex,s[2]&&(a.offset=s[2]+\"%\"),r.push(a);}for(i=1,n=r.length-1;i<n;i++)if(!r[i].offset){for(var o=z(r[i-1].offset||0),l=0,h=i+1;h<n;h++)if(r[h].offset){l=r[h].offset;break}l||(l=100,h=n);for(var u=((l=z(l))-o)/(h-i+1);i<h;i++)o+=u,r[i].offset=o+\"%\";}return r}),e._tear=function(t,e){t==e.top&&(e.top=t.prev),t==e.bottom&&(e.bottom=t.next),t.next&&(t.next.prev=t.prev),t.prev&&(t.prev.next=t.next);}),Mt=(e._tofront=function(t,e){e.top!==t&&(At(t,e),t.next=null,t.prev=e.top,e.top.next=t,e.top=t);},e._toback=function(t,e){e.bottom!==t&&(At(t,e),t.next=e.bottom,t.prev=null,e.bottom.prev=t,e.bottom=t);},e._insertafter=function(t,e,r){At(t,r),e==r.top&&(r.top=t),e.next&&(e.next.prev=t),t.next=e.next,t.prev=e,e.next=t;},e._insertbefore=function(t,e,r){At(t,r),e==r.bottom&&(r.bottom=t),e.prev&&(e.prev.next=t),t.prev=e.prev,e.prev=t,t.next=e;},e.toMatrix=function(t,e){var r=yt(t),i={_:{transform:d},getBBox:function(){return r}};return Et(i,e),i.matrix}),Et=(e.transformPath=function(t,e){return Q(t,Mt(t,e))},e._extractTransform=function(t,r){if(null==r)return t._.transform;r=x(r).replace(/\\.{3}|\\u2026/g,t._.transform||d);var i,n,a=e.parseTransformString(r),s=0,o=1,l=1,h=t._,u=new Pt;if(h.transform=a||[],a)for(var c=0,f=a.length;c<f;c++){var p,g,v,y,m,b=a[c],_=b.length,w=x(b[0]).toLowerCase(),k=b[0]!=w,B=k?u.invert():0;\"t\"==w&&3==_?k?(p=B.x(0,0),g=B.y(0,0),v=B.x(b[1],b[2]),y=B.y(b[1],b[2]),u.translate(v-p,y-g)):u.translate(b[1],b[2]):\"r\"==w?2==_?(m=m||t.getBBox(1),u.rotate(b[1],m.x+m.width/2,m.y+m.height/2),s+=b[1]):4==_&&(k?(v=B.x(b[2],b[3]),y=B.y(b[2],b[3]),u.rotate(b[1],v,y)):u.rotate(b[1],b[2],b[3]),s+=b[1]):\"s\"==w?2==_||3==_?(m=m||t.getBBox(1),u.scale(b[1],b[_-1],m.x+m.width/2,m.y+m.height/2),o*=b[1],l*=b[_-1]):5==_&&(k?(v=B.x(b[3],b[4]),y=B.y(b[3],b[4]),u.scale(b[1],b[2],v,y)):u.scale(b[1],b[2],b[3],b[4]),o*=b[1],l*=b[2]):\"m\"==w&&7==_&&u.add(b[1],b[2],b[3],b[4],b[5],b[6]),h.dirtyT=1,t.matrix=u;}t.matrix=u,h.sx=o,h.sy=l,h.deg=s,h.dx=i=u.e,h.dy=n=u.f,1==o&&1==l&&!s&&h.bbox?(h.bbox.x+=+i,h.bbox.y+=+n):h.dirtyT=1;}),Nt=function(t){var e=t[0];switch(e.toLowerCase()){case\"t\":return [e,0,0];case\"m\":return [e,1,0,0,1,0,0];case\"r\":return 4==t.length?[e,0,t[2],t[3]]:[e,0];case\"s\":return 5==t.length?[e,1,1,t[3],t[4]]:3==t.length?[e,1,1]:[e,1]}},Lt=e._equaliseTransform=function(t,r){r=x(r).replace(/\\.{3}|\\u2026/g,t),t=e.parseTransformString(t)||[],r=e.parseTransformString(r)||[];for(var i,n,a,s,o=w(t.length,r.length),l=[],h=[],u=0;u<o;u++){if(a=t[u]||Nt(r[u]),s=r[u]||Nt(a),a[0]!=s[0]||\"r\"==a[0].toLowerCase()&&(a[2]!=s[2]||a[3]!=s[3])||\"s\"==a[0].toLowerCase()&&(a[3]!=s[3]||a[4]!=s[4]))return;for(l[u]=[],h[u]=[],i=0,n=w(a.length,s.length);i<n;i++)i in a&&(l[u][i]=a[i]),i in s&&(h[u][i]=s[i]);}return {from:l,to:h}};function Pt(t,e,r,i,n,a){null!=t?(this.a=+t,this.b=+e,this.c=+r,this.d=+i,this.e=+n,this.f=+a):(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0);}e._getContainer=function(t,r,i,n){var a;if(null!=(a=null!=n||e.is(t,\"object\")?t:l.doc.getElementById(t)))return a.tagName?null==r?{container:a,width:a.style.pixelWidth||a.offsetWidth,height:a.style.pixelHeight||a.offsetHeight}:{container:a,width:r,height:i}:{container:1,x:t,y:r,width:i,height:n}},e.pathToRelative=bt,e._engine={},e.path2curve=Tt,e.matrix=function(t,e,r,i,n,a){return new Pt(t,e,r,i,n,a)},function(t){function r(t){return t[0]*t[0]+t[1]*t[1]}function i(t){var e=_.sqrt(r(t));t[0]&&(t[0]/=e),t[1]&&(t[1]/=e);}t.add=function(t,e,r,i,n,a){var s,o,l,h,u=[[],[],[]],c=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1]],f=[[t,r,n],[e,i,a],[0,0,1]];for(t&&t instanceof Pt&&(f=[[t.a,t.c,t.e],[t.b,t.d,t.f],[0,0,1]]),s=0;s<3;s++)for(o=0;o<3;o++){for(h=0,l=0;l<3;l++)h+=c[s][l]*f[l][o];u[s][o]=h;}this.a=u[0][0],this.b=u[1][0],this.c=u[0][1],this.d=u[1][1],this.e=u[0][2],this.f=u[1][2];},t.invert=function(){var t=this,e=t.a*t.d-t.b*t.c;return new Pt(t.d/e,-t.b/e,-t.c/e,t.a/e,(t.c*t.f-t.d*t.e)/e,(t.b*t.e-t.a*t.f)/e)},t.clone=function(){return new Pt(this.a,this.b,this.c,this.d,this.e,this.f)},t.translate=function(t,e){this.add(1,0,0,1,t,e);},t.scale=function(t,e,r,i){null==e&&(e=t),(r||i)&&this.add(1,0,0,1,r,i),this.add(t,0,0,e,0,0),(r||i)&&this.add(1,0,0,1,-r,-i);},t.rotate=function(t,r,i){t=e.rad(t),r=r||0,i=i||0;var n=+_.cos(t).toFixed(9),a=+_.sin(t).toFixed(9);this.add(n,a,-a,n,r,i),this.add(1,0,0,1,-r,-i);},t.x=function(t,e){return t*this.a+e*this.c+this.e},t.y=function(t,e){return t*this.b+e*this.d+this.f},t.get=function(t){return +this[x.fromCharCode(97+t)].toFixed(4)},t.toString=function(){return e.svg?\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\":[this.get(0),this.get(2),this.get(1),this.get(3),0,0].join()},t.toFilter=function(){return \"progid:DXImageTransform.Microsoft.Matrix(M11=\"+this.get(0)+\", M12=\"+this.get(2)+\", M21=\"+this.get(1)+\", M22=\"+this.get(3)+\", Dx=\"+this.get(4)+\", Dy=\"+this.get(5)+\", sizingmethod='auto expand')\"},t.offset=function(){return [this.e.toFixed(4),this.f.toFixed(4)]},t.split=function(){var t={};t.dx=this.e,t.dy=this.f;var n=[[this.a,this.c],[this.b,this.d]];t.scalex=_.sqrt(r(n[0])),i(n[0]),t.shear=n[0][0]*n[1][0]+n[0][1]*n[1][1],n[1]=[n[1][0]-n[0][0]*t.shear,n[1][1]-n[0][1]*t.shear],t.scaley=_.sqrt(r(n[1])),i(n[1]),t.shear/=t.scaley;var a=-n[0][1],s=n[1][1];return s<0?(t.rotate=e.deg(_.acos(s)),a<0&&(t.rotate=360-t.rotate)):t.rotate=e.deg(_.asin(a)),t.isSimple=!(+t.shear.toFixed(9)||t.scalex.toFixed(9)!=t.scaley.toFixed(9)&&t.rotate),t.isSuperSimple=!+t.shear.toFixed(9)&&t.scalex.toFixed(9)==t.scaley.toFixed(9)&&!t.rotate,t.noRotation=!+t.shear.toFixed(9)&&!t.rotate,t},t.toTransformString=function(t){var e=t||this[v]();return e.isSimple?(e.scalex=+e.scalex.toFixed(4),e.scaley=+e.scaley.toFixed(4),e.rotate=+e.rotate.toFixed(4),(e.dx||e.dy?\"t\"+[e.dx,e.dy]:d)+(1!=e.scalex||1!=e.scaley?\"s\"+[e.scalex,e.scaley,0,0]:d)+(e.rotate?\"r\"+[e.rotate,0,0]:d)):\"m\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)]};}(Pt.prototype);for(var zt=function(){this.returnValue=!1;},Ft=function(){return this.originalEvent.preventDefault()},Rt=function(){this.cancelBubble=!0;},jt=function(){return this.originalEvent.stopPropagation()},It=function(t){var e=l.doc.documentElement.scrollTop||l.doc.body.scrollTop,r=l.doc.documentElement.scrollLeft||l.doc.body.scrollLeft;return {x:t.clientX+r,y:t.clientY+e}},Dt=l.doc.addEventListener?function(t,e,r,i){var n=function(t){var e=It(t);return r.call(i,t,e.x,e.y)};if(t.addEventListener(e,n,!1),p&&m[e]){var a=function(e){for(var n=It(e),a=e,s=0,o=e.targetTouches&&e.targetTouches.length;s<o;s++)if(e.targetTouches[s].target==t){(e=e.targetTouches[s]).originalEvent=a,e.preventDefault=Ft,e.stopPropagation=jt;break}return r.call(i,e,n.x,n.y)};t.addEventListener(m[e],a,!1);}return function(){return t.removeEventListener(e,n,!1),p&&m[e]&&t.removeEventListener(m[e],a,!1),!0}}:l.doc.attachEvent?function(t,e,r,i){var n=function(t){t=t||l.win.event;var e=l.doc.documentElement.scrollTop||l.doc.body.scrollTop,n=l.doc.documentElement.scrollLeft||l.doc.body.scrollLeft,a=t.clientX+n,s=t.clientY+e;return t.preventDefault=t.preventDefault||zt,t.stopPropagation=t.stopPropagation||Rt,r.call(i,t,a,s)};return t.attachEvent(\"on\"+e,n),function(){return t.detachEvent(\"on\"+e,n),!0}}:void 0,qt=[],Ot=function(e){for(var r,i=e.clientX,n=e.clientY,a=l.doc.documentElement.scrollTop||l.doc.body.scrollTop,s=l.doc.documentElement.scrollLeft||l.doc.body.scrollLeft,o=qt.length;o--;){if(r=qt[o],p&&e.touches){for(var h,u=e.touches.length;u--;)if((h=e.touches[u]).identifier==r.el._drag.id){i=h.clientX,n=h.clientY,(e.originalEvent?e.originalEvent:e).preventDefault();break}}else e.preventDefault();var c,f=r.el.node,d=f.nextSibling,g=f.parentNode,x=f.style.display;l.win.opera&&g.removeChild(f),f.style.display=\"none\",c=r.el.paper.getElementByPoint(i,n),f.style.display=x,l.win.opera&&(d?g.insertBefore(f,d):g.appendChild(f)),c&&t(\"raphael.drag.over.\"+r.el.id,r.el,c),i+=s,n+=a,t(\"raphael.drag.move.\"+r.el.id,r.move_scope||r.el,i-r.el._drag.x,n-r.el._drag.y,i,n,e);}},Vt=function(r){e.unmousemove(Ot).unmouseup(Vt);for(var i,n=qt.length;n--;)(i=qt[n]).el._drag={},t(\"raphael.drag.end.\"+i.el.id,i.end_scope||i.start_scope||i.move_scope||i.el,r);qt=[];},Wt=e.el={},Yt=y.length;Yt--;)!function(t){e[t]=Wt[t]=function(r,i){return e.is(r,\"function\")&&(this.events=this.events||[],this.events.push({name:t,f:r,unbind:Dt(this.shape||this.node||l.doc,t,r,i||this)})),this},e[\"un\"+t]=Wt[\"un\"+t]=function(r){for(var i=this.events||[],n=i.length;n--;)i[n].name!=t||!e.is(r,\"undefined\")&&i[n].f!=r||(i[n].unbind(),i.splice(n,1),!i.length&&delete this.events);return this};}(y[Yt]);Wt.data=function(r,i){var n=G[this.id]=G[this.id]||{};if(0==arguments.length)return n;if(1==arguments.length){if(e.is(r,\"object\")){for(var a in r)r[o](a)&&this.data(a,r[a]);return this}return t(\"raphael.data.get.\"+this.id,this,n[r],r),n[r]}return n[r]=i,t(\"raphael.data.set.\"+this.id,this,i,r),this},Wt.removeData=function(t){return null==t?delete G[this.id]:G[this.id]&&delete G[this.id][t],this},Wt.getData=function(){return tt(G[this.id]||{})},Wt.hover=function(t,e,r,i){return this.mouseover(t,r).mouseout(e,i||r)},Wt.unhover=function(t,e){return this.unmouseover(t).unmouseout(e)};var Gt=[];Wt.drag=function(r,i,n,a,s,o){function h(h){(h.originalEvent||h).preventDefault();var u=h.clientX,c=h.clientY,f=l.doc.documentElement.scrollTop||l.doc.body.scrollTop,d=l.doc.documentElement.scrollLeft||l.doc.body.scrollLeft;if(this._drag.id=h.identifier,p&&h.touches)for(var g,x=h.touches.length;x--;)if(g=h.touches[x],this._drag.id=g.identifier,g.identifier==this._drag.id){u=g.clientX,c=g.clientY;break}this._drag.x=u+d,this._drag.y=c+f,!qt.length&&e.mousemove(Ot).mouseup(Vt),qt.push({el:this,move_scope:a,start_scope:s,end_scope:o}),i&&t.on(\"raphael.drag.start.\"+this.id,i),r&&t.on(\"raphael.drag.move.\"+this.id,r),n&&t.on(\"raphael.drag.end.\"+this.id,n),t(\"raphael.drag.start.\"+this.id,s||a||this,this._drag.x,this._drag.y,h);}return this._drag={},Gt.push({el:this,start:h}),this.mousedown(h),this},Wt.onDragOver=function(e){e?t.on(\"raphael.drag.over.\"+this.id,e):t.unbind(\"raphael.drag.over.\"+this.id);},Wt.undrag=function(){for(var r=Gt.length;r--;)Gt[r].el==this&&(this.unmousedown(Gt[r].start),Gt.splice(r,1),t.unbind(\"raphael.drag.*.\"+this.id));!Gt.length&&e.unmousemove(Ot).unmouseup(Vt),qt=[];},i.circle=function(t,r,i){var n=e._engine.circle(this,t||0,r||0,i||0);return this.__set__&&this.__set__.push(n),n},i.rect=function(t,r,i,n,a){var s=e._engine.rect(this,t||0,r||0,i||0,n||0,a||0);return this.__set__&&this.__set__.push(s),s},i.ellipse=function(t,r,i,n){var a=e._engine.ellipse(this,t||0,r||0,i||0,n||0);return this.__set__&&this.__set__.push(a),a},i.path=function(t){t&&!e.is(t,\"string\")&&!e.is(t[0],A)&&(t+=d);var r=e._engine.path(e.format[c](e,arguments),this);return this.__set__&&this.__set__.push(r),r},i.image=function(t,r,i,n,a){var s=e._engine.image(this,t||\"about:blank\",r||0,i||0,n||0,a||0);return this.__set__&&this.__set__.push(s),s},i.text=function(t,r,i){var n=e._engine.text(this,t||0,r||0,x(i));return this.__set__&&this.__set__.push(n),n},i.set=function(t){!e.is(t,\"array\")&&(t=Array.prototype.splice.call(arguments,0,arguments.length));var r=new ce(t);return this.__set__&&this.__set__.push(r),r.paper=this,r.type=\"set\",r},i.setStart=function(t){this.__set__=t||this.set();},i.setFinish=function(t){var e=this.__set__;return delete this.__set__,e},i.getSize=function(){var t=this.canvas.parentNode;return {width:t.offsetWidth,height:t.offsetHeight}},i.setSize=function(t,r){return e._engine.setSize.call(this,t,r)},i.setViewBox=function(t,r,i,n,a){return e._engine.setViewBox.call(this,t,r,i,n,a)},i.top=i.bottom=null,i.raphael=e;function Ht(){return this.x+g+this.y+g+this.width+\" ├Ч \"+this.height}i.getElementByPoint=function(t,e){var r,i,n,a,s,o,h,u=this.canvas,c=l.doc.elementFromPoint(t,e);if(l.win.opera&&\"svg\"==c.tagName){var f=(i=(r=u).getBoundingClientRect(),n=r.ownerDocument,a=n.body,s=n.documentElement,o=s.clientTop||a.clientTop||0,h=s.clientLeft||a.clientLeft||0,{y:i.top+(l.win.pageYOffset||s.scrollTop||a.scrollTop)-o,x:i.left+(l.win.pageXOffset||s.scrollLeft||a.scrollLeft)-h}),p=u.createSVGRect();p.x=t-f.x,p.y=e-f.y,p.width=p.height=1;var d=u.getIntersectionList(p,null);d.length&&(c=d[d.length-1]);}if(!c)return null;for(;c.parentNode&&c!=u.parentNode&&!c.raphael;)c=c.parentNode;return c==this.canvas.parentNode&&(c=u),c=c&&c.raphael?this.getById(c.raphaelid):null},i.getElementsByBBox=function(t){var r=this.set();return this.forEach(function(i){e.isBBoxIntersect(i.getBBox(),t)&&r.push(i);}),r},i.getById=function(t){for(var e=this.bottom;e;){if(e.id==t)return e;e=e.next;}return null},i.forEach=function(t,e){for(var r=this.bottom;r;){if(!1===t.call(e,r))return this;r=r.next;}return this},i.getElementsByPoint=function(t,e){var r=this.set();return this.forEach(function(i){i.isPointInside(t,e)&&r.push(i);}),r},Wt.isPointInside=function(t,r){var i=this.realPath=Z[this.type](this);return this.attr(\"transform\")&&this.attr(\"transform\").length&&(i=e.transformPath(i,this.attr(\"transform\"))),e.isPointInsidePath(i,t,r)},Wt.getBBox=function(t){if(this.removed)return {};var e=this._;return t?(!e.dirty&&e.bboxwt||(this.realPath=Z[this.type](this),e.bboxwt=yt(this.realPath),e.bboxwt.toString=Ht,e.dirty=0),e.bboxwt):((e.dirty||e.dirtyT||!e.bbox)&&(!e.dirty&&this.realPath||(e.bboxwt=0,this.realPath=Z[this.type](this)),e.bbox=yt(Q(this.realPath,this.matrix)),e.bbox.toString=Ht,e.dirty=e.dirtyT=0),e.bbox)},Wt.clone=function(){if(this.removed)return null;var t=this.paper[this.type]().attr(this.attr());return this.__set__&&this.__set__.push(t),t},Wt.glow=function(t){if(\"text\"==this.type)return null;var e={width:((t=t||{}).width||10)+(+this.attr(\"stroke-width\")||1),fill:t.fill||!1,opacity:null==t.opacity?.5:t.opacity,offsetx:t.offsetx||0,offsety:t.offsety||0,color:t.color||\"#000\"},r=e.width/2,i=this.paper,n=i.set(),a=this.realPath||Z[this.type](this);a=this.matrix?Q(a,this.matrix):a;for(var s=1;s<r+1;s++)n.push(i.path(a).attr({stroke:e.color,fill:e.fill?e.color:\"none\",\"stroke-linejoin\":\"round\",\"stroke-linecap\":\"round\",\"stroke-width\":+(e.width/r*s).toFixed(3),opacity:+(e.opacity/r).toFixed(3)}));return n.insertBefore(this).translate(e.offsetx,e.offsety)};var Xt=function(t,r,i,n,a,s,o,l,h){return null==h?dt(t,r,i,n,a,s,o,l):e.findDotsAtSegment(t,r,i,n,a,s,o,l,function(t,e,r,i,n,a,s,o,l){if(!(l<0||dt(t,e,r,i,n,a,s,o)<l)){var h,u=.5,c=1-u;for(h=dt(t,e,r,i,n,a,s,o,c);B(h-l)>.01;)h=dt(t,e,r,i,n,a,s,o,c+=(h<l?1:-1)*(u/=2));return c}}(t,r,i,n,a,s,o,l,h))},Ut=function(t,r){return function(i,n,a){for(var s,o,l,h,u,c=\"\",f={},p=0,d=0,g=(i=Tt(i)).length;d<g;d++){if(\"M\"==(l=i[d])[0])s=+l[1],o=+l[2];else {if(p+(h=Xt(s,o,l[1],l[2],l[3],l[4],l[5],l[6]))>n){if(r&&!f.start){if(c+=[\"C\"+(u=Xt(s,o,l[1],l[2],l[3],l[4],l[5],l[6],n-p)).start.x,u.start.y,u.m.x,u.m.y,u.x,u.y],a)return c;f.start=c,c=[\"M\"+u.x,u.y+\"C\"+u.n.x,u.n.y,u.end.x,u.end.y,l[5],l[6]].join(),p+=h,s=+l[5],o=+l[6];continue}if(!t&&!r)return {x:(u=Xt(s,o,l[1],l[2],l[3],l[4],l[5],l[6],n-p)).x,y:u.y,alpha:u.alpha}}p+=h,s=+l[5],o=+l[6];}c+=l.shift()+l;}return f.end=c,(u=t?p:r?f:e.findDotsAtSegment(s,o,l[0],l[1],l[2],l[3],l[4],l[5],1)).alpha&&(u={x:u.x,y:u.y,alpha:u.alpha}),u}},$t=Ut(1),Zt=Ut(),Qt=Ut(0,1);e.getTotalLength=$t,e.getPointAtLength=Zt,e.getSubpath=function(t,e,r){if(this.getTotalLength(t)-r<1e-6)return Qt(t,e).end;var i=Qt(t,r,1);return e?Qt(i,e).end:i},Wt.getTotalLength=function(){var t=this.getPath();if(t)return this.node.getTotalLength?this.node.getTotalLength():$t(t)},Wt.getPointAtLength=function(t){var e=this.getPath();if(e)return Zt(e,t)},Wt.getPath=function(){var t,r=e._getPath[this.type];if(\"text\"!=this.type&&\"set\"!=this.type)return r&&(t=r(this)),t},Wt.getSubpath=function(t,r){var i=this.getPath();if(i)return e.getSubpath(i,t,r)};var Jt=e.easing_formulas={linear:function(t){return t},\"<\":function(t){return C(t,1.7)},\">\":function(t){return C(t,.48)},\"<>\":function(t){var e=.48-t/1.04,r=_.sqrt(.1734+e*e),i=r-e,n=-r-e,a=C(B(i),1/3)*(i<0?-1:1)+C(B(n),1/3)*(n<0?-1:1)+.5;return 3*(1-a)*a*a+a*a*a},backIn:function(t){var e=1.70158;return t*t*((e+1)*t-e)},backOut:function(t){var e=1.70158;return (t-=1)*t*((e+1)*t+e)+1},elastic:function(t){return t==!!t?t:C(2,-10*t)*_.sin(2*S*(t-.075)/.3)+1},bounce:function(t){var e=7.5625,r=2.75;return t<1/r?e*t*t:t<2/r?e*(t-=1.5/r)*t+.75:t<2.5/r?e*(t-=2.25/r)*t+.9375:e*(t-=2.625/r)*t+.984375}};Jt.easeIn=Jt[\"ease-in\"]=Jt[\"<\"],Jt.easeOut=Jt[\"ease-out\"]=Jt[\">\"],Jt.easeInOut=Jt[\"ease-in-out\"]=Jt[\"<>\"],Jt[\"back-in\"]=Jt.backIn,Jt[\"back-out\"]=Jt.backOut;var Kt=[],te=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){setTimeout(t,16);},ee=function(){for(var r=+new Date,i=0;i<Kt.length;i++){var n=Kt[i];if(!n.el.removed&&!n.paused){var a,s,l=r-n.start,h=n.ms,u=n.easing,c=n.from,p=n.diff,d=n.to,x=(n.t,n.el),v={},y={};if(n.initstatus?(l=(n.initstatus*n.anim.top-n.prev)/(n.percent-n.prev)*h,n.status=n.initstatus,delete n.initstatus,n.stop&&Kt.splice(i--,1)):n.status=(n.prev+(n.percent-n.prev)*(l/h))/n.anim.top,!(l<0))if(l<h){var m=u(l/h);for(var b in c)if(c[o](b)){switch(I[b]){case T:a=+c[b]+m*h*p[b];break;case\"colour\":a=\"rgb(\"+[re(P(c[b].r+m*h*p[b].r)),re(P(c[b].g+m*h*p[b].g)),re(P(c[b].b+m*h*p[b].b))].join(\",\")+\")\";break;case\"path\":a=[];for(var _=0,w=c[b].length;_<w;_++){a[_]=[c[b][_][0]];for(var k=1,B=c[b][_].length;k<B;k++)a[_][k]=+c[b][_][k]+m*h*p[b][_][k];a[_]=a[_].join(g);}a=a.join(g);break;case\"transform\":if(p[b].real)for(a=[],_=0,w=c[b].length;_<w;_++)for(a[_]=[c[b][_][0]],k=1,B=c[b][_].length;k<B;k++)a[_][k]=c[b][_][k]+m*h*p[b][_][k];else {var C=function(t){return +c[b][t]+m*h*p[b][t]};a=[[\"m\",C(0),C(1),C(2),C(3),C(4),C(5)]];}break;case\"csv\":if(\"clip-rect\"==b)for(a=[],_=4;_--;)a[_]=+c[b][_]+m*h*p[b][_];break;default:var S=[][f](c[b]);for(a=[],_=x.paper.customAttributes[b].length;_--;)a[_]=+S[_]+m*h*p[b][_];}v[b]=a;}x.attr(v),function(e,r,i){setTimeout(function(){t(\"raphael.anim.frame.\"+e,r,i);});}(x.id,x,n.anim);}else {if(function(r,i,n){setTimeout(function(){t(\"raphael.anim.frame.\"+i.id,i,n),t(\"raphael.anim.finish.\"+i.id,i,n),e.is(r,\"function\")&&r.call(i);});}(n.callback,x,n.anim),x.attr(d),Kt.splice(i--,1),n.repeat>1&&!n.next){for(s in d)d[o](s)&&(y[s]=n.totalOrigin[s]);n.el.attr(y),ae(n.anim,n.el,n.anim.percents[0],null,n.totalOrigin,n.repeat-1);}n.next&&!n.stop&&ae(n.anim,n.el,n.next,null,n.totalOrigin,n.repeat);}}}Kt.length&&te(ee);},re=function(t){return t>255?255:t<0?0:t};function ie(t,e,r,i,n,a){var s=3*e,o=3*(i-e)-s,l=1-s-o,h=3*r,u=3*(n-r)-h,c=1-h-u;function f(t){return ((l*t+o)*t+s)*t}return function(t,e){var r=function(t,e){var r,i,n,a,h,u;for(n=t,u=0;u<8;u++){if(a=f(n)-t,B(a)<e)return n;if(B(h=(3*l*n+2*o)*n+s)<1e-6)break;n-=a/h;}if(i=1,(n=t)<(r=0))return r;if(n>i)return i;for(;r<i;){if(a=f(n),B(a-t)<e)return n;t>a?r=n:i=n,n=(i-r)/2+r;}return n}(t,e);return ((c*r+u)*r+h)*r}(t,1/(200*a))}function ne(t,e){var r=[],i={};if(this.ms=e,this.times=1,t){for(var n in t)t[o](n)&&(i[z(n)]=t[n],r.push(z(n)));r.sort(H);}this.anim=i,this.top=r[r.length-1],this.percents=r;}function ae(r,i,a,s,l,h){a=z(a);var u,c,p,d,g,y,m=r.ms,b={},_={},w={};if(s)for(B=0,C=Kt.length;B<C;B++){var k=Kt[B];if(k.el.id==i.id&&k.anim==r){k.percent!=a?(Kt.splice(B,1),p=1):c=k,i.attr(k.totalOrigin);break}}else s=+_;for(var B=0,C=r.percents.length;B<C;B++){if(r.percents[B]==a||r.percents[B]>s*r.top){a=r.percents[B],g=r.percents[B-1]||0,m=m/r.top*(a-g),d=r.percents[B+1],u=r.anim[a];break}s&&i.attr(r.anim[r.percents[B]]);}if(u){if(c)c.initstatus=s,c.start=new Date-c.ms*s;else {for(var S in u)if(u[o](S)&&(I[o](S)||i.paper.customAttributes[o](S)))switch(b[S]=i.attr(S),null==b[S]&&(b[S]=j[S]),_[S]=u[S],I[S]){case T:w[S]=(_[S]-b[S])/m;break;case\"colour\":b[S]=e.getRGB(b[S]);var A=e.getRGB(_[S]);w[S]={r:(A.r-b[S].r)/m,g:(A.g-b[S].g)/m,b:(A.b-b[S].b)/m};break;case\"path\":var M=Tt(b[S],_[S]),E=M[1];for(b[S]=M[0],w[S]=[],B=0,C=b[S].length;B<C;B++){w[S][B]=[0];for(var N=1,P=b[S][B].length;N<P;N++)w[S][B][N]=(E[B][N]-b[S][B][N])/m;}break;case\"transform\":var F=i._,R=Lt(F[S],_[S]);if(R)for(b[S]=R.from,_[S]=R.to,w[S]=[],w[S].real=!0,B=0,C=b[S].length;B<C;B++)for(w[S][B]=[b[S][B][0]],N=1,P=b[S][B].length;N<P;N++)w[S][B][N]=(_[S][B][N]-b[S][B][N])/m;else {var D=i.matrix||new Pt,q={_:{transform:F.transform},getBBox:function(){return i.getBBox(1)}};b[S]=[D.a,D.b,D.c,D.d,D.e,D.f],Et(q,_[S]),_[S]=q._.transform,w[S]=[(q.matrix.a-D.a)/m,(q.matrix.b-D.b)/m,(q.matrix.c-D.c)/m,(q.matrix.d-D.d)/m,(q.matrix.e-D.e)/m,(q.matrix.f-D.f)/m];}break;case\"csv\":var O=x(u[S])[v](n),V=x(b[S])[v](n);if(\"clip-rect\"==S)for(b[S]=V,w[S]=[],B=V.length;B--;)w[S][B]=(O[B]-b[S][B])/m;_[S]=O;break;default:for(O=[][f](u[S]),V=[][f](b[S]),w[S]=[],B=i.paper.customAttributes[S].length;B--;)w[S][B]=((O[B]||0)-(V[B]||0))/m;}var W=u.easing,Y=e.easing_formulas[W];if(!Y)if((Y=x(W).match(L))&&5==Y.length){var G=Y;Y=function(t){return ie(t,+G[1],+G[2],+G[3],+G[4],m)};}else Y=X;if(k={anim:r,percent:a,timestamp:y=u.start||r.start||+new Date,start:y+(r.del||0),status:0,initstatus:s||0,stop:!1,ms:m,easing:Y,from:b,diff:w,to:_,el:i,callback:u.callback,prev:g,next:d,repeat:h||r.times,origin:i.attr(),totalOrigin:l},Kt.push(k),s&&!c&&!p&&(k.stop=!0,k.start=new Date-m*s,1==Kt.length))return ee();p&&(k.start=new Date-k.ms*s),1==Kt.length&&te(ee);}t(\"raphael.anim.start.\"+i.id,i,r);}}function se(t){for(var e=0;e<Kt.length;e++)Kt[e].el.paper==t&&Kt.splice(e--,1);}Wt.animateWith=function(t,r,i,n,a,s){if(this.removed)return s&&s.call(this),this;var o=i instanceof ne?i:e.animation(i,n,a,s);ae(o,this,o.percents[0],null,this.attr());for(var l=0,h=Kt.length;l<h;l++)if(Kt[l].anim==r&&Kt[l].el==t){Kt[h-1].start=Kt[l].start;break}return this},Wt.onAnimation=function(e){return e?t.on(\"raphael.anim.frame.\"+this.id,e):t.unbind(\"raphael.anim.frame.\"+this.id),this},ne.prototype.delay=function(t){var e=new ne(this.anim,this.ms);return e.times=this.times,e.del=+t||0,e},ne.prototype.repeat=function(t){var e=new ne(this.anim,this.ms);return e.del=this.del,e.times=_.floor(w(t,0))||1,e},e.animation=function(t,r,i,n){if(t instanceof ne)return t;!e.is(i,\"function\")&&i||(n=n||i||null,i=null),t=Object(t),r=+r||0;var a,s,l={};for(s in t)t[o](s)&&z(s)!=s&&z(s)+\"%\"!=s&&(a=!0,l[s]=t[s]);if(a)return i&&(l.easing=i),n&&(l.callback=n),new ne({100:l},r);if(n){var h=0;for(var u in t){var c=F(u);t[o](u)&&c>h&&(h=c);}!t[h+=\"%\"].callback&&(t[h].callback=n);}return new ne(t,r)},Wt.animate=function(t,r,i,n){if(this.removed)return n&&n.call(this),this;var a=t instanceof ne?t:e.animation(t,r,i,n);return ae(a,this,a.percents[0],null,this.attr()),this},Wt.setTime=function(t,e){return t&&null!=e&&this.status(t,k(e,t.ms)/t.ms),this},Wt.status=function(t,e){var r,i,n=[],a=0;if(null!=e)return ae(t,this,-1,k(e,1)),this;for(r=Kt.length;a<r;a++)if((i=Kt[a]).el.id==this.id&&(!t||i.anim==t)){if(t)return i.status;n.push({anim:i.anim,status:i.status});}return t?0:n},Wt.pause=function(e){for(var r=0;r<Kt.length;r++)Kt[r].el.id!=this.id||e&&Kt[r].anim!=e||!1!==t(\"raphael.anim.pause.\"+this.id,this,Kt[r].anim)&&(Kt[r].paused=!0);return this},Wt.resume=function(e){for(var r=0;r<Kt.length;r++)if(Kt[r].el.id==this.id&&(!e||Kt[r].anim==e)){var i=Kt[r];!1!==t(\"raphael.anim.resume.\"+this.id,this,i.anim)&&(delete i.paused,this.status(i.anim,i.status));}return this},Wt.stop=function(e){for(var r=0;r<Kt.length;r++)Kt[r].el.id!=this.id||e&&Kt[r].anim!=e||!1!==t(\"raphael.anim.stop.\"+this.id,this,Kt[r].anim)&&Kt.splice(r--,1);return this},t.on(\"raphael.remove\",se),t.on(\"raphael.clear\",se),Wt.toString=function(){return \"Rapha├лlтАЩs object\"};var oe,le,he,ue,ce=function(t){if(this.items=[],this.length=0,this.type=\"set\",t)for(var e=0,r=t.length;e<r;e++)!t[e]||t[e].constructor!=Wt.constructor&&t[e].constructor!=ce||(this[this.items.length]=this.items[this.items.length]=t[e],this.length++);},fe=ce.prototype;for(var pe in fe.push=function(){for(var t,e,r=0,i=arguments.length;r<i;r++)!(t=arguments[r])||t.constructor!=Wt.constructor&&t.constructor!=ce||(this[e=this.items.length]=this.items[e]=t,this.length++);return this},fe.pop=function(){return this.length&&delete this[this.length--],this.items.pop()},fe.forEach=function(t,e){for(var r=0,i=this.items.length;r<i;r++)if(!1===t.call(e,this.items[r],r))return this;return this},Wt)Wt[o](pe)&&(fe[pe]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t][c](r,e);})}}(pe));return fe.attr=function(t,r){if(t&&e.is(t,A)&&e.is(t[0],\"object\"))for(var i=0,n=t.length;i<n;i++)this.items[i].attr(t[i]);else for(var a=0,s=this.items.length;a<s;a++)this.items[a].attr(t,r);return this},fe.clear=function(){for(;this.length;)this.pop();},fe.splice=function(t,e,r){t=t<0?w(this.length+t,0):t,e=w(0,k(this.length-t,e));var i,n=[],a=[],s=[];for(i=2;i<arguments.length;i++)s.push(arguments[i]);for(i=0;i<e;i++)a.push(this[t+i]);for(;i<this.length-t;i++)n.push(this[t+i]);var o=s.length;for(i=0;i<o+n.length;i++)this.items[t+i]=this[t+i]=i<o?s[i]:n[i-o];for(i=this.items.length=this.length-=e-o;this[i];)delete this[i++];return new ce(a)},fe.exclude=function(t){for(var e=0,r=this.length;e<r;e++)if(this[e]==t)return this.splice(e,1),!0},fe.animate=function(t,r,i,n){(e.is(i,\"function\")||!i)&&(n=i||null);var a,s,o=this.items.length,l=o,h=this;if(!o)return this;n&&(s=function(){!--o&&n.call(h);}),i=e.is(i,\"string\")?i:s;var u=e.animation(t,r,i,s);for(a=this.items[--l].animate(u);l--;)this.items[l]&&!this.items[l].removed&&this.items[l].animateWith(a,u,u),this.items[l]&&!this.items[l].removed||o--;return this},fe.insertAfter=function(t){for(var e=this.items.length;e--;)this.items[e].insertAfter(t);return this},fe.getBBox=function(){for(var t=[],e=[],r=[],i=[],n=this.items.length;n--;)if(!this.items[n].removed){var a=this.items[n].getBBox();t.push(a.x),e.push(a.y),r.push(a.x+a.width),i.push(a.y+a.height);}return {x:t=k[c](0,t),y:e=k[c](0,e),x2:r=w[c](0,r),y2:i=w[c](0,i),width:r-t,height:i-e}},fe.clone=function(t){t=this.paper.set();for(var e=0,r=this.items.length;e<r;e++)t.push(this.items[e].clone());return t},fe.toString=function(){return \"Rapha├лlтАШs set\"},fe.glow=function(t){var e=this.paper.set();return this.forEach(function(r,i){var n=r.glow(t);null!=n&&n.forEach(function(t,r){e.push(t);});}),e},fe.isPointInside=function(t,e){var r=!1;return this.forEach(function(i){if(i.isPointInside(t,e))return r=!0,!1}),r},e.registerFont=function(t){if(!t.face)return t;this.fonts=this.fonts||{};var e={w:t.w,face:{},glyphs:{}},r=t.face[\"font-family\"];for(var i in t.face)t.face[o](i)&&(e.face[i]=t.face[i]);if(this.fonts[r]?this.fonts[r].push(e):this.fonts[r]=[e],!t.svg)for(var n in e.face[\"units-per-em\"]=F(t.face[\"units-per-em\"],10),t.glyphs)if(t.glyphs[o](n)){var a=t.glyphs[n];if(e.glyphs[n]={w:a.w,k:{},d:a.d&&\"M\"+a.d.replace(/[mlcxtrv]/g,function(t){return {l:\"L\",c:\"C\",x:\"z\",t:\"m\",r:\"l\",v:\"c\"}[t]||\"M\"})+\"z\"},a.k)for(var s in a.k)a[o](s)&&(e.glyphs[n].k[s]=a.k[s]);}return t},i.getFont=function(t,r,i,n){if(n=n||\"normal\",i=i||\"normal\",r=+r||{normal:400,bold:700,lighter:300,bolder:800}[r]||400,e.fonts){var a,s=e.fonts[t];if(!s){var l=new RegExp(\"(^|\\\\s)\"+t.replace(/[^\\w\\d\\s+!~.:_-]/g,d)+\"(\\\\s|$)\",\"i\");for(var h in e.fonts)if(e.fonts[o](h)&&l.test(h)){s=e.fonts[h];break}}if(s)for(var u=0,c=s.length;u<c&&((a=s[u]).face[\"font-weight\"]!=r||a.face[\"font-style\"]!=i&&a.face[\"font-style\"]||a.face[\"font-stretch\"]!=n);u++);return a}},i.print=function(t,r,i,a,s,o,l,h){o=o||\"middle\",l=w(k(l||0,1),-1),h=w(k(h||1,3),1);var u,c=x(i)[v](d),f=0,p=0,g=d;if(e.is(a,\"string\")&&(a=this.getFont(a)),a){u=(s||16)/a.face[\"units-per-em\"];for(var y=a.face.bbox[v](n),m=+y[0],b=y[3]-y[1],_=0,B=+y[1]+(\"baseline\"==o?b+ +a.face.descent:b/2),C=0,S=c.length;C<S;C++){if(\"\\n\"==c[C])f=0,A=0,p=0,_+=b*h;else {var T=p&&a.glyphs[c[C-1]]||{},A=a.glyphs[c[C]];f+=p?(T.w||a.w)+(T.k&&T.k[c[C]]||0)+a.w*l:0,p=1;}A&&A.d&&(g+=e.transformPath(A.d,[\"t\",f*u,_*u,\"s\",u,u,m,B,\"t\",(t-m)/u,(r-B)/u]));}}return this.path(g).attr({fill:\"#000\",stroke:\"none\"})},i.add=function(t){if(e.is(t,\"array\"))for(var r,i=this.set(),n=0,s=t.length;n<s;n++)r=t[n]||{},a[o](r.type)&&i.push(this[r.type]().attr(r));return i},e.format=function(t,r){var i=e.is(r,A)?[0][f](r):arguments;return t&&e.is(t,\"string\")&&i.length-1&&(t=t.replace(s,function(t,e){return null==i[++e]?d:i[e]})),t||d},e.fullfill=(oe=/\\{([^\\}]+)\\}/g,le=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,function(t,e){return String(t).replace(oe,function(t,r){return function(t,e,r){var i=r;return e.replace(le,function(t,e,r,n,a){e=e||n,i&&(e in i&&(i=i[e]),\"function\"==typeof i&&a&&(i=i()));}),i=(null==i||i==r?t:i)+\"\"}(t,r,e)})}),e.ninja=function(){if(h.was)l.win.Raphael=h.is;else {window.Raphael=void 0;try{delete window.Raphael;}catch(t){}}return e},e.st=fe,t.on(\"raphael.DOMload\",function(){r=!0;}),null==(he=document).readyState&&he.addEventListener&&(he.addEventListener(\"DOMContentLoaded\",ue=function(){he.removeEventListener(\"DOMContentLoaded\",ue,!1),he.readyState=\"complete\";},!1),he.readyState=\"loading\"),function t(){/in/.test(he.readyState)?setTimeout(t,9):e.eve(\"raphael.DOMload\");}(),e}.apply(e,i))||(t.exports=n);},function(t,e,r){var i,n;i=[r(0),r(3),r(4)],void 0===(n=function(t){return t}.apply(e,i))||(t.exports=n);},function(t,e,r){var i,n,a,s,o,l,h,u,c,f,p,d,g,x;s=\"hasOwnProperty\",o=/[\\.\\/]/,l=/\\s*,\\s*/,h=function(t,e){return t-e},u={n:{}},c=function(){for(var t=0,e=this.length;t<e;t++)if(void 0!==this[t])return this[t]},f=function(){for(var t=this.length;--t;)if(void 0!==this[t])return this[t]},p=Object.prototype.toString,d=String,g=Array.isArray||function(t){return t instanceof Array||\"[object Array]\"==p.call(t)},(x=function(t,e){var r,i=a,s=Array.prototype.slice.call(arguments,2),o=x.listeners(t),l=0,u=[],p={},d=[],g=n;d.firstDefined=c,d.lastDefined=f,n=t,a=0;for(var v=0,y=o.length;v<y;v++)\"zIndex\"in o[v]&&(u.push(o[v].zIndex),o[v].zIndex<0&&(p[o[v].zIndex]=o[v]));for(u.sort(h);u[l]<0;)if(r=p[u[l++]],d.push(r.apply(e,s)),a)return a=i,d;for(v=0;v<y;v++)if(\"zIndex\"in(r=o[v]))if(r.zIndex==u[l]){if(d.push(r.apply(e,s)),a)break;do{if((r=p[u[++l]])&&d.push(r.apply(e,s)),a)break}while(r)}else p[r.zIndex]=r;else if(d.push(r.apply(e,s)),a)break;return a=i,n=g,d})._events=u,x.listeners=function(t){var e,r,i,n,a,s,l,h,c=g(t)?t:t.split(o),f=u,p=[f],d=[];for(n=0,a=c.length;n<a;n++){for(h=[],s=0,l=p.length;s<l;s++)for(r=[(f=p[s].n)[c[n]],f[\"*\"]],i=2;i--;)(e=r[i])&&(h.push(e),d=d.concat(e.f||[]));p=h;}return d},x.separator=function(t){t?(t=\"[\"+(t=d(t).replace(/(?=[\\.\\^\\]\\[\\-])/g,\"\\\\\"))+\"]\",o=new RegExp(t)):o=/[\\.\\/]/;},x.on=function(t,e){if(\"function\"!=typeof e)return function(){};for(var r=g(t)?g(t[0])?t:[t]:d(t).split(l),i=0,n=r.length;i<n;i++)!function(t){for(var r,i=g(t)?t:d(t).split(o),n=u,a=0,s=i.length;a<s;a++)n=(n=n.n).hasOwnProperty(i[a])&&n[i[a]]||(n[i[a]]={n:{}});for(n.f=n.f||[],a=0,s=n.f.length;a<s;a++)if(n.f[a]==e){r=!0;break}!r&&n.f.push(e);}(r[i]);return function(t){+t==+t&&(e.zIndex=+t);}},x.f=function(t){var e=[].slice.call(arguments,1);return function(){x.apply(null,[t,null].concat(e).concat([].slice.call(arguments,0)));}},x.stop=function(){a=1;},x.nt=function(t){var e=g(n)?n.join(\".\"):n;return t?new RegExp(\"(?:\\\\.|\\\\/|^)\"+t+\"(?:\\\\.|\\\\/|$)\").test(e):e},x.nts=function(){return g(n)?n:n.split(o)},x.off=x.unbind=function(t,e){if(t){var r=g(t)?g(t[0])?t:[t]:d(t).split(l);if(r.length>1)for(var i=0,n=r.length;i<n;i++)x.off(r[i],e);else {r=g(t)?t:d(t).split(o);var a,h,c,f,p,v=[u];for(i=0,n=r.length;i<n;i++)for(f=0;f<v.length;f+=c.length-2){if(c=[f,1],a=v[f].n,\"*\"!=r[i])a[r[i]]&&c.push(a[r[i]]);else for(h in a)a[s](h)&&c.push(a[h]);v.splice.apply(v,c);}for(i=0,n=v.length;i<n;i++)for(a=v[i];a.n;){if(e){if(a.f){for(f=0,p=a.f.length;f<p;f++)if(a.f[f]==e){a.f.splice(f,1);break}!a.f.length&&delete a.f;}for(h in a.n)if(a.n[s](h)&&a.n[h].f){var y=a.n[h].f;for(f=0,p=y.length;f<p;f++)if(y[f]==e){y.splice(f,1);break}!y.length&&delete a.n[h].f;}}else for(h in delete a.f,a.n)a.n[s](h)&&a.n[h].f&&delete a.n[h].f;a=a.n;}}}else x._events=u={n:{}};},x.once=function(t,e){var r=function(){return x.off(t,r),e.apply(this,arguments)};return x.on(t,r)},x.version=\"0.5.0\",x.toString=function(){return \"You are running Eve 0.5.0\"},t.exports?t.exports=x:void 0===(i=function(){return x}.apply(e,[]))||(t.exports=i);},function(t,e,r){var i,n;i=[r(0)],void 0===(n=function(t){if(!t||t.svg){var e=\"hasOwnProperty\",r=String,i=parseFloat,n=parseInt,a=Math,s=a.max,o=a.abs,l=a.pow,h=/[, ]+/,u=t.eve,c=\"\",f=\" \",p=\"http://www.w3.org/1999/xlink\",d={block:\"M5,0 0,2.5 5,5z\",classic:\"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",diamond:\"M2.5,0 5,2.5 2.5,5 0,2.5z\",open:\"M6,1 1,3.5 6,6\",oval:\"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"},g={};t.toString=function(){return \"Your browser supports SVG.\\nYou are running Rapha├лl \"+this.version};var x=function(i,n){if(n)for(var a in \"string\"==typeof i&&(i=x(i)),n)n[e](a)&&(\"xlink:\"==a.substring(0,6)?i.setAttributeNS(p,a.substring(6),r(n[a])):i.setAttribute(a,r(n[a])));else (i=t._g.doc.createElementNS(\"http://www.w3.org/2000/svg\",i)).style&&(i.style.webkitTapHighlightColor=\"rgba(0,0,0,0)\");return i},v=function(e,n){var h=\"linear\",u=e.id+n,f=.5,p=.5,d=e.node,g=e.paper,v=d.style,m=t._g.doc.getElementById(u);if(!m){if(n=(n=r(n).replace(t._radial_gradient,function(t,e,r){if(h=\"radial\",e&&r){f=i(e);var n=2*((p=i(r))>.5)-1;l(f-.5,2)+l(p-.5,2)>.25&&(p=a.sqrt(.25-l(f-.5,2))*n+.5)&&.5!=p&&(p=p.toFixed(5)-1e-5*n);}return c})).split(/\\s*\\-\\s*/),\"linear\"==h){var b=n.shift();if(b=-i(b),isNaN(b))return null;var _=[0,0,a.cos(t.rad(b)),a.sin(t.rad(b))],w=1/(s(o(_[2]),o(_[3]))||1);_[2]*=w,_[3]*=w,_[2]<0&&(_[0]=-_[2],_[2]=0),_[3]<0&&(_[1]=-_[3],_[3]=0);}var k=t._parseDots(n);if(!k)return null;if(u=u.replace(/[\\(\\)\\s,\\xb0#]/g,\"_\"),e.gradient&&u!=e.gradient.id&&(g.defs.removeChild(e.gradient),delete e.gradient),!e.gradient){m=x(h+\"Gradient\",{id:u}),e.gradient=m,x(m,\"radial\"==h?{fx:f,fy:p}:{x1:_[0],y1:_[1],x2:_[2],y2:_[3],gradientTransform:e.matrix.invert()}),g.defs.appendChild(m);for(var B=0,C=k.length;B<C;B++)m.appendChild(x(\"stop\",{offset:k[B].offset?k[B].offset:B?\"100%\":\"0%\",\"stop-color\":k[B].color||\"#fff\",\"stop-opacity\":isFinite(k[B].opacity)?k[B].opacity:1}));}}return x(d,{fill:y(u),opacity:1,\"fill-opacity\":1}),v.fill=c,v.opacity=1,v.fillOpacity=1,1},y=function(t){if((e=document.documentMode)&&(9===e||10===e))return \"url('#\"+t+\"')\";var e,r=document.location;return \"url('\"+(r.protocol+\"//\"+r.host+r.pathname+r.search)+\"#\"+t+\"')\"},m=function(t){var e=t.getBBox(1);x(t.pattern,{patternTransform:t.matrix.invert()+\" translate(\"+e.x+\",\"+e.y+\")\"});},b=function(i,n,a){if(\"path\"==i.type){for(var s,o,l,h,u,f=r(n).toLowerCase().split(\"-\"),p=i.paper,v=a?\"end\":\"start\",y=i.node,m=i.attrs,b=m[\"stroke-width\"],_=f.length,w=\"classic\",k=3,B=3,C=5;_--;)switch(f[_]){case\"block\":case\"classic\":case\"oval\":case\"diamond\":case\"open\":case\"none\":w=f[_];break;case\"wide\":B=5;break;case\"narrow\":B=2;break;case\"long\":k=5;break;case\"short\":k=2;}if(\"open\"==w?(k+=2,B+=2,C+=2,l=1,h=a?4:1,u={fill:\"none\",stroke:m.stroke}):(h=l=k/2,u={fill:m.stroke,stroke:\"none\"}),i._.arrows?a?(i._.arrows.endPath&&g[i._.arrows.endPath]--,i._.arrows.endMarker&&g[i._.arrows.endMarker]--):(i._.arrows.startPath&&g[i._.arrows.startPath]--,i._.arrows.startMarker&&g[i._.arrows.startMarker]--):i._.arrows={},\"none\"!=w){var S=\"raphael-marker-\"+w,T=\"raphael-marker-\"+v+w+k+B+\"-obj\"+i.id;t._g.doc.getElementById(S)?g[S]++:(p.defs.appendChild(x(x(\"path\"),{\"stroke-linecap\":\"round\",d:d[w],id:S})),g[S]=1);var A,M=t._g.doc.getElementById(T);M?(g[T]++,A=M.getElementsByTagName(\"use\")[0]):(M=x(x(\"marker\"),{id:T,markerHeight:B,markerWidth:k,orient:\"auto\",refX:h,refY:B/2}),A=x(x(\"use\"),{\"xlink:href\":\"#\"+S,transform:(a?\"rotate(180 \"+k/2+\" \"+B/2+\") \":c)+\"scale(\"+k/C+\",\"+B/C+\")\",\"stroke-width\":(1/((k/C+B/C)/2)).toFixed(4)}),M.appendChild(A),p.defs.appendChild(M),g[T]=1),x(A,u);var E=l*(\"diamond\"!=w&&\"oval\"!=w);a?(s=i._.arrows.startdx*b||0,o=t.getTotalLength(m.path)-E*b):(s=E*b,o=t.getTotalLength(m.path)-(i._.arrows.enddx*b||0)),(u={})[\"marker-\"+v]=\"url(#\"+T+\")\",(o||s)&&(u.d=t.getSubpath(m.path,s,o)),x(y,u),i._.arrows[v+\"Path\"]=S,i._.arrows[v+\"Marker\"]=T,i._.arrows[v+\"dx\"]=E,i._.arrows[v+\"Type\"]=w,i._.arrows[v+\"String\"]=n;}else a?(s=i._.arrows.startdx*b||0,o=t.getTotalLength(m.path)-s):(s=0,o=t.getTotalLength(m.path)-(i._.arrows.enddx*b||0)),i._.arrows[v+\"Path\"]&&x(y,{d:t.getSubpath(m.path,s,o)}),delete i._.arrows[v+\"Path\"],delete i._.arrows[v+\"Marker\"],delete i._.arrows[v+\"dx\"],delete i._.arrows[v+\"Type\"],delete i._.arrows[v+\"String\"];for(u in g)if(g[e](u)&&!g[u]){var N=t._g.doc.getElementById(u);N&&N.parentNode.removeChild(N);}}},_={\"-\":[3,1],\".\":[1,1],\"-.\":[3,1,1,1],\"-..\":[3,1,1,1,1,1],\". \":[1,3],\"- \":[4,3],\"--\":[8,3],\"- .\":[4,3,1,3],\"--.\":[8,3,1,3],\"--..\":[8,3,1,3,1,3]},w=function(t,e,i){if(e=_[r(e).toLowerCase()]){for(var n=t.attrs[\"stroke-width\"]||\"1\",a={round:n,square:n,butt:0}[t.attrs[\"stroke-linecap\"]||i[\"stroke-linecap\"]]||0,s=[],o=e.length;o--;)s[o]=e[o]*n+(o%2?1:-1)*a;x(t.node,{\"stroke-dasharray\":s.join(\",\")});}else x(t.node,{\"stroke-dasharray\":\"none\"});},k=function(i,a){var l=i.node,u=i.attrs,f=l.style.visibility;for(var d in l.style.visibility=\"hidden\",a)if(a[e](d)){if(!t._availableAttrs[e](d))continue;var g=a[d];switch(u[d]=g,d){case\"blur\":i.blur(g);break;case\"title\":var y=l.getElementsByTagName(\"title\");if(y.length&&(y=y[0]))y.firstChild.nodeValue=g;else {y=x(\"title\");var _=t._g.doc.createTextNode(g);y.appendChild(_),l.appendChild(y);}break;case\"href\":case\"target\":var k=l.parentNode;if(\"a\"!=k.tagName.toLowerCase()){var C=x(\"a\");k.insertBefore(C,l),C.appendChild(l),k=C;}\"target\"==d?k.setAttributeNS(p,\"show\",\"blank\"==g?\"new\":g):k.setAttributeNS(p,d,g);break;case\"cursor\":l.style.cursor=g;break;case\"transform\":i.transform(g);break;case\"arrow-start\":b(i,g);break;case\"arrow-end\":b(i,g,1);break;case\"clip-rect\":var S=r(g).split(h);if(4==S.length){i.clip&&i.clip.parentNode.parentNode.removeChild(i.clip.parentNode);var T=x(\"clipPath\"),A=x(\"rect\");T.id=t.createUUID(),x(A,{x:S[0],y:S[1],width:S[2],height:S[3]}),T.appendChild(A),i.paper.defs.appendChild(T),x(l,{\"clip-path\":\"url(#\"+T.id+\")\"}),i.clip=A;}if(!g){var M=l.getAttribute(\"clip-path\");if(M){var E=t._g.doc.getElementById(M.replace(/(^url\\(#|\\)$)/g,c));E&&E.parentNode.removeChild(E),x(l,{\"clip-path\":c}),delete i.clip;}}break;case\"path\":\"path\"==i.type&&(x(l,{d:g?u.path=t._pathToAbsolute(g):\"M0,0\"}),i._.dirty=1,i._.arrows&&(\"startString\"in i._.arrows&&b(i,i._.arrows.startString),\"endString\"in i._.arrows&&b(i,i._.arrows.endString,1)));break;case\"width\":if(l.setAttribute(d,g),i._.dirty=1,!u.fx)break;d=\"x\",g=u.x;case\"x\":u.fx&&(g=-u.x-(u.width||0));case\"rx\":if(\"rx\"==d&&\"rect\"==i.type)break;case\"cx\":l.setAttribute(d,g),i.pattern&&m(i),i._.dirty=1;break;case\"height\":if(l.setAttribute(d,g),i._.dirty=1,!u.fy)break;d=\"y\",g=u.y;case\"y\":u.fy&&(g=-u.y-(u.height||0));case\"ry\":if(\"ry\"==d&&\"rect\"==i.type)break;case\"cy\":l.setAttribute(d,g),i.pattern&&m(i),i._.dirty=1;break;case\"r\":\"rect\"==i.type?x(l,{rx:g,ry:g}):l.setAttribute(d,g),i._.dirty=1;break;case\"src\":\"image\"==i.type&&l.setAttributeNS(p,\"href\",g);break;case\"stroke-width\":1==i._.sx&&1==i._.sy||(g/=s(o(i._.sx),o(i._.sy))||1),l.setAttribute(d,g),u[\"stroke-dasharray\"]&&w(i,u[\"stroke-dasharray\"],a),i._.arrows&&(\"startString\"in i._.arrows&&b(i,i._.arrows.startString),\"endString\"in i._.arrows&&b(i,i._.arrows.endString,1));break;case\"stroke-dasharray\":w(i,g,a);break;case\"fill\":var N=r(g).match(t._ISURL);if(N){T=x(\"pattern\");var L=x(\"image\");T.id=t.createUUID(),x(T,{x:0,y:0,patternUnits:\"userSpaceOnUse\",height:1,width:1}),x(L,{x:0,y:0,\"xlink:href\":N[1]}),T.appendChild(L),function(e){t._preload(N[1],function(){var t=this.offsetWidth,r=this.offsetHeight;x(e,{width:t,height:r}),x(L,{width:t,height:r});});}(T),i.paper.defs.appendChild(T),x(l,{fill:\"url(#\"+T.id+\")\"}),i.pattern=T,i.pattern&&m(i);break}var P=t.getRGB(g);if(P.error){if((\"circle\"==i.type||\"ellipse\"==i.type||\"r\"!=r(g).charAt())&&v(i,g)){if(\"opacity\"in u||\"fill-opacity\"in u){var z=t._g.doc.getElementById(l.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g,c));if(z){var F=z.getElementsByTagName(\"stop\");x(F[F.length-1],{\"stop-opacity\":(\"opacity\"in u?u.opacity:1)*(\"fill-opacity\"in u?u[\"fill-opacity\"]:1)});}}u.gradient=g,u.fill=\"none\";break}}else delete a.gradient,delete u.gradient,!t.is(u.opacity,\"undefined\")&&t.is(a.opacity,\"undefined\")&&x(l,{opacity:u.opacity}),!t.is(u[\"fill-opacity\"],\"undefined\")&&t.is(a[\"fill-opacity\"],\"undefined\")&&x(l,{\"fill-opacity\":u[\"fill-opacity\"]});P[e](\"opacity\")&&x(l,{\"fill-opacity\":P.opacity>1?P.opacity/100:P.opacity});case\"stroke\":P=t.getRGB(g),l.setAttribute(d,P.hex),\"stroke\"==d&&P[e](\"opacity\")&&x(l,{\"stroke-opacity\":P.opacity>1?P.opacity/100:P.opacity}),\"stroke\"==d&&i._.arrows&&(\"startString\"in i._.arrows&&b(i,i._.arrows.startString),\"endString\"in i._.arrows&&b(i,i._.arrows.endString,1));break;case\"gradient\":(\"circle\"==i.type||\"ellipse\"==i.type||\"r\"!=r(g).charAt())&&v(i,g);break;case\"opacity\":u.gradient&&!u[e](\"stroke-opacity\")&&x(l,{\"stroke-opacity\":g>1?g/100:g});case\"fill-opacity\":if(u.gradient){(z=t._g.doc.getElementById(l.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g,c)))&&(F=z.getElementsByTagName(\"stop\"),x(F[F.length-1],{\"stop-opacity\":g}));break}default:\"font-size\"==d&&(g=n(g,10)+\"px\");var R=d.replace(/(\\-.)/g,function(t){return t.substring(1).toUpperCase()});l.style[R]=g,i._.dirty=1,l.setAttribute(d,g);}}B(i,a),l.style.visibility=f;},B=function(i,a){if(\"text\"==i.type&&(a[e](\"text\")||a[e](\"font\")||a[e](\"font-size\")||a[e](\"x\")||a[e](\"y\"))){var s=i.attrs,o=i.node,l=o.firstChild?n(t._g.doc.defaultView.getComputedStyle(o.firstChild,c).getPropertyValue(\"font-size\"),10):10;if(a[e](\"text\")){for(s.text=a.text;o.firstChild;)o.removeChild(o.firstChild);for(var h,u=r(a.text).split(\"\\n\"),f=[],p=0,d=u.length;p<d;p++)h=x(\"tspan\"),p&&x(h,{dy:1.2*l,x:s.x}),h.appendChild(t._g.doc.createTextNode(u[p])),o.appendChild(h),f[p]=h;}else for(p=0,d=(f=o.getElementsByTagName(\"tspan\")).length;p<d;p++)p?x(f[p],{dy:1.2*l,x:s.x}):x(f[0],{dy:0});x(o,{x:s.x,y:s.y}),i._.dirty=1;var g=i._getBBox(),v=s.y-(g.y+g.height/2);v&&t.is(v,\"finite\")&&x(f[0],{dy:v});}},C=function(t){return t.parentNode&&\"a\"===t.parentNode.tagName.toLowerCase()?t.parentNode:t},S=function(e,r){this[0]=this.node=e,e.raphael=!0,this.id=(\"0000\"+(Math.random()*Math.pow(36,5)<<0).toString(36)).slice(-5),e.raphaelid=this.id,this.matrix=t.matrix(),this.realPath=null,this.paper=r,this.attrs=this.attrs||{},this._={transform:[],sx:1,sy:1,deg:0,dx:0,dy:0,dirty:1},!r.bottom&&(r.bottom=this),this.prev=r.top,r.top&&(r.top.next=this),r.top=this,this.next=null;},T=t.el;S.prototype=T,T.constructor=S,t._engine.path=function(t,e){var r=x(\"path\");e.canvas&&e.canvas.appendChild(r);var i=new S(r,e);return i.type=\"path\",k(i,{fill:\"none\",stroke:\"#000\",path:t}),i},T.rotate=function(t,e,n){if(this.removed)return this;if((t=r(t).split(h)).length-1&&(e=i(t[1]),n=i(t[2])),t=i(t[0]),null==n&&(e=n),null==e||null==n){var a=this.getBBox(1);e=a.x+a.width/2,n=a.y+a.height/2;}return this.transform(this._.transform.concat([[\"r\",t,e,n]])),this},T.scale=function(t,e,n,a){if(this.removed)return this;if((t=r(t).split(h)).length-1&&(e=i(t[1]),n=i(t[2]),a=i(t[3])),t=i(t[0]),null==e&&(e=t),null==a&&(n=a),null==n||null==a)var s=this.getBBox(1);return n=null==n?s.x+s.width/2:n,a=null==a?s.y+s.height/2:a,this.transform(this._.transform.concat([[\"s\",t,e,n,a]])),this},T.translate=function(t,e){return this.removed?this:((t=r(t).split(h)).length-1&&(e=i(t[1])),t=i(t[0])||0,e=+e||0,this.transform(this._.transform.concat([[\"t\",t,e]])),this)},T.transform=function(r){var i=this._;if(null==r)return i.transform;if(t._extractTransform(this,r),this.clip&&x(this.clip,{transform:this.matrix.invert()}),this.pattern&&m(this),this.node&&x(this.node,{transform:this.matrix}),1!=i.sx||1!=i.sy){var n=this.attrs[e](\"stroke-width\")?this.attrs[\"stroke-width\"]:1;this.attr({\"stroke-width\":n});}return this},T.hide=function(){return this.removed||(this.node.style.display=\"none\"),this},T.show=function(){return this.removed||(this.node.style.display=\"\"),this},T.remove=function(){var e=C(this.node);if(!this.removed&&e.parentNode){var r=this.paper;for(var i in r.__set__&&r.__set__.exclude(this),u.unbind(\"raphael.*.*.\"+this.id),this.gradient&&r.defs.removeChild(this.gradient),t._tear(this,r),e.parentNode.removeChild(e),this.removeData(),this)this[i]=\"function\"==typeof this[i]?t._removedFactory(i):null;this.removed=!0;}},T._getBBox=function(){if(\"none\"==this.node.style.display){this.show();var t=!0;}var e,r=!1;this.paper.canvas.parentElement?e=this.paper.canvas.parentElement.style:this.paper.canvas.parentNode&&(e=this.paper.canvas.parentNode.style),e&&\"none\"==e.display&&(r=!0,e.display=\"\");var i={};try{i=this.node.getBBox();}catch(t){i={x:this.node.clientLeft,y:this.node.clientTop,width:this.node.clientWidth,height:this.node.clientHeight};}finally{i=i||{},r&&(e.display=\"none\");}return t&&this.hide(),i},T.attr=function(r,i){if(this.removed)return this;if(null==r){var n={};for(var a in this.attrs)this.attrs[e](a)&&(n[a]=this.attrs[a]);return n.gradient&&\"none\"==n.fill&&(n.fill=n.gradient)&&delete n.gradient,n.transform=this._.transform,n}if(null==i&&t.is(r,\"string\")){if(\"fill\"==r&&\"none\"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;if(\"transform\"==r)return this._.transform;for(var s=r.split(h),o={},l=0,c=s.length;l<c;l++)(r=s[l])in this.attrs?o[r]=this.attrs[r]:t.is(this.paper.customAttributes[r],\"function\")?o[r]=this.paper.customAttributes[r].def:o[r]=t._availableAttrs[r];return c-1?o:o[s[0]]}if(null==i&&t.is(r,\"array\")){for(o={},l=0,c=r.length;l<c;l++)o[r[l]]=this.attr(r[l]);return o}if(null!=i){var f={};f[r]=i;}else null!=r&&t.is(r,\"object\")&&(f=r);for(var p in f)u(\"raphael.attr.\"+p+\".\"+this.id,this,f[p]);for(p in this.paper.customAttributes)if(this.paper.customAttributes[e](p)&&f[e](p)&&t.is(this.paper.customAttributes[p],\"function\")){var d=this.paper.customAttributes[p].apply(this,[].concat(f[p]));for(var g in this.attrs[p]=f[p],d)d[e](g)&&(f[g]=d[g]);}return k(this,f),this},T.toFront=function(){if(this.removed)return this;var e=C(this.node);e.parentNode.appendChild(e);var r=this.paper;return r.top!=this&&t._tofront(this,r),this},T.toBack=function(){if(this.removed)return this;var e=C(this.node),r=e.parentNode;r.insertBefore(e,r.firstChild),t._toback(this,this.paper);this.paper;return this},T.insertAfter=function(e){if(this.removed||!e)return this;var r=C(this.node),i=C(e.node||e[e.length-1].node);return i.nextSibling?i.parentNode.insertBefore(r,i.nextSibling):i.parentNode.appendChild(r),t._insertafter(this,e,this.paper),this},T.insertBefore=function(e){if(this.removed||!e)return this;var r=C(this.node),i=C(e.node||e[0].node);return i.parentNode.insertBefore(r,i),t._insertbefore(this,e,this.paper),this},T.blur=function(e){var r=this;if(0!=+e){var i=x(\"filter\"),n=x(\"feGaussianBlur\");r.attrs.blur=e,i.id=t.createUUID(),x(n,{stdDeviation:+e||1.5}),i.appendChild(n),r.paper.defs.appendChild(i),r._blur=i,x(r.node,{filter:\"url(#\"+i.id+\")\"});}else r._blur&&(r._blur.parentNode.removeChild(r._blur),delete r._blur,delete r.attrs.blur),r.node.removeAttribute(\"filter\");return r},t._engine.circle=function(t,e,r,i){var n=x(\"circle\");t.canvas&&t.canvas.appendChild(n);var a=new S(n,t);return a.attrs={cx:e,cy:r,r:i,fill:\"none\",stroke:\"#000\"},a.type=\"circle\",x(n,a.attrs),a},t._engine.rect=function(t,e,r,i,n,a){var s=x(\"rect\");t.canvas&&t.canvas.appendChild(s);var o=new S(s,t);return o.attrs={x:e,y:r,width:i,height:n,rx:a||0,ry:a||0,fill:\"none\",stroke:\"#000\"},o.type=\"rect\",x(s,o.attrs),o},t._engine.ellipse=function(t,e,r,i,n){var a=x(\"ellipse\");t.canvas&&t.canvas.appendChild(a);var s=new S(a,t);return s.attrs={cx:e,cy:r,rx:i,ry:n,fill:\"none\",stroke:\"#000\"},s.type=\"ellipse\",x(a,s.attrs),s},t._engine.image=function(t,e,r,i,n,a){var s=x(\"image\");x(s,{x:r,y:i,width:n,height:a,preserveAspectRatio:\"none\"}),s.setAttributeNS(p,\"href\",e),t.canvas&&t.canvas.appendChild(s);var o=new S(s,t);return o.attrs={x:r,y:i,width:n,height:a,src:e},o.type=\"image\",o},t._engine.text=function(e,r,i,n){var a=x(\"text\");e.canvas&&e.canvas.appendChild(a);var s=new S(a,e);return s.attrs={x:r,y:i,\"text-anchor\":\"middle\",text:n,\"font-family\":t._availableAttrs[\"font-family\"],\"font-size\":t._availableAttrs[\"font-size\"],stroke:\"none\",fill:\"#000\"},s.type=\"text\",k(s,s.attrs),s},t._engine.setSize=function(t,e){return this.width=t||this.width,this.height=e||this.height,this.canvas.setAttribute(\"width\",this.width),this.canvas.setAttribute(\"height\",this.height),this._viewBox&&this.setViewBox.apply(this,this._viewBox),this},t._engine.create=function(){var e=t._getContainer.apply(0,arguments),r=e&&e.container;if(!r)throw new Error(\"SVG container not found.\");var i,n=e.x,a=e.y,s=e.width,o=e.height,l=x(\"svg\"),h=\"overflow:hidden;\";return n=n||0,a=a||0,x(l,{height:o=o||342,version:1.1,width:s=s||512,xmlns:\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\"}),1==r?(l.style.cssText=h+\"position:absolute;left:\"+n+\"px;top:\"+a+\"px\",t._g.doc.body.appendChild(l),i=1):(l.style.cssText=h+\"position:relative\",r.firstChild?r.insertBefore(l,r.firstChild):r.appendChild(l)),(r=new t._Paper).width=s,r.height=o,r.canvas=l,r.clear(),r._left=r._top=0,i&&(r.renderfix=function(){}),r.renderfix(),r},t._engine.setViewBox=function(t,e,r,i,n){u(\"raphael.setViewBox\",this,this._viewBox,[t,e,r,i,n]);var a,o,l=this.getSize(),h=s(r/l.width,i/l.height),c=this.top,p=n?\"xMidYMid meet\":\"xMinYMin\";for(null==t?(this._vbSize&&(h=1),delete this._vbSize,a=\"0 0 \"+this.width+f+this.height):(this._vbSize=h,a=t+f+e+f+r+f+i),x(this.canvas,{viewBox:a,preserveAspectRatio:p});h&&c;)o=\"stroke-width\"in c.attrs?c.attrs[\"stroke-width\"]:1,c.attr({\"stroke-width\":o}),c._.dirty=1,c._.dirtyT=1,c=c.prev;return this._viewBox=[t,e,r,i,!!n],this},t.prototype.renderfix=function(){var t,e=this.canvas,r=e.style;try{t=e.getScreenCTM()||e.createSVGMatrix();}catch(r){t=e.createSVGMatrix();}var i=-t.e%1,n=-t.f%1;(i||n)&&(i&&(this._left=(this._left+i)%1,r.left=this._left+\"px\"),n&&(this._top=(this._top+n)%1,r.top=this._top+\"px\"));},t.prototype.clear=function(){t.eve(\"raphael.clear\",this);for(var e=this.canvas;e.firstChild;)e.removeChild(e.firstChild);this.bottom=this.top=null,(this.desc=x(\"desc\")).appendChild(t._g.doc.createTextNode(\"Created with Rapha├лl \"+t.version)),e.appendChild(this.desc),e.appendChild(this.defs=x(\"defs\"));},t.prototype.remove=function(){for(var e in u(\"raphael.remove\",this),this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas),this)this[e]=\"function\"==typeof this[e]?t._removedFactory(e):null;};var A=t.st;for(var M in T)T[e](M)&&!A[e](M)&&(A[M]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t].apply(r,e);})}}(M));}}.apply(e,i))||(t.exports=n);},function(t,e,r){var i,n;i=[r(0)],void 0===(n=function(t){if(!t||t.vml){var e=\"hasOwnProperty\",r=String,i=parseFloat,n=Math,a=n.round,s=n.max,o=n.min,l=n.abs,h=/[, ]+/,u=t.eve,c=\" \",f=\"\",p={M:\"m\",L:\"l\",C:\"c\",Z:\"x\",m:\"t\",l:\"r\",c:\"v\",z:\"x\"},d=/([clmz]),?([^clmz]*)/gi,g=/ progid:\\S+Blur\\([^\\)]+\\)/g,x=/-?[^,\\s-]+/g,v=\"position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)\",y=21600,m={path:1,rect:1,image:1},b={circle:1,ellipse:1},_=function(e,r,i){var n=t.matrix();return n.rotate(-e,.5,.5),{dx:n.x(r,i),dy:n.y(r,i)}},w=function(t,e,r,i,n,a){var s=t._,o=t.matrix,h=s.fillpos,u=t.node,f=u.style,p=1,d=\"\",g=y/e,x=y/r;if(f.visibility=\"hidden\",e&&r){if(u.coordsize=l(g)+c+l(x),f.rotation=a*(e*r<0?-1:1),a){var v=_(a,i,n);i=v.dx,n=v.dy;}if(e<0&&(d+=\"x\"),r<0&&(d+=\" y\")&&(p=-1),f.flip=d,u.coordorigin=i*-g+c+n*-x,h||s.fillsize){var m=u.getElementsByTagName(\"fill\");m=m&&m[0],u.removeChild(m),h&&(v=_(a,o.x(h[0],h[1]),o.y(h[0],h[1])),m.position=v.dx*p+c+v.dy*p),s.fillsize&&(m.size=s.fillsize[0]*l(e)+c+s.fillsize[1]*l(r)),u.appendChild(m);}f.visibility=\"visible\";}};t.toString=function(){return \"Your browser doesnтАЩt support SVG. Falling down to VML.\\nYou are running Rapha├лl \"+this.version};var k,B=function(t,e,i){for(var n=r(e).toLowerCase().split(\"-\"),a=i?\"end\":\"start\",s=n.length,o=\"classic\",l=\"medium\",h=\"medium\";s--;)switch(n[s]){case\"block\":case\"classic\":case\"oval\":case\"diamond\":case\"open\":case\"none\":o=n[s];break;case\"wide\":case\"narrow\":h=n[s];break;case\"long\":case\"short\":l=n[s];}var u=t.node.getElementsByTagName(\"stroke\")[0];u[a+\"arrow\"]=o,u[a+\"arrowlength\"]=l,u[a+\"arrowwidth\"]=h;},C=function(n,l){n.attrs=n.attrs||{};var u=n.node,g=n.attrs,v=u.style,_=m[n.type]&&(l.x!=g.x||l.y!=g.y||l.width!=g.width||l.height!=g.height||l.cx!=g.cx||l.cy!=g.cy||l.rx!=g.rx||l.ry!=g.ry||l.r!=g.r),C=b[n.type]&&(g.cx!=l.cx||g.cy!=l.cy||g.r!=l.r||g.rx!=l.rx||g.ry!=l.ry),T=n;for(var A in l)l[e](A)&&(g[A]=l[A]);if(_&&(g.path=t._getPath[n.type](n),n._.dirty=1),l.href&&(u.href=l.href),l.title&&(u.title=l.title),l.target&&(u.target=l.target),l.cursor&&(v.cursor=l.cursor),\"blur\"in l&&n.blur(l.blur),(l.path&&\"path\"==n.type||_)&&(u.path=function(e){var i=/[ahqstv]/gi,n=t._pathToAbsolute;if(r(e).match(i)&&(n=t._path2curve),i=/[clmz]/g,n==t._pathToAbsolute&&!r(e).match(i)){var s=r(e).replace(d,function(t,e,r){var i=[],n=\"m\"==e.toLowerCase(),s=p[e];return r.replace(x,function(t){n&&2==i.length&&(s+=i+p[\"m\"==e?\"l\":\"L\"],i=[]),i.push(a(t*y));}),s+i});return s}var o,l,h=n(e);s=[];for(var u=0,g=h.length;u<g;u++){o=h[u],\"z\"==(l=h[u][0].toLowerCase())&&(l=\"x\");for(var v=1,m=o.length;v<m;v++)l+=a(o[v]*y)+(v!=m-1?\",\":f);s.push(l);}return s.join(c)}(~r(g.path).toLowerCase().indexOf(\"r\")?t._pathToAbsolute(g.path):g.path),n._.dirty=1,\"image\"==n.type&&(n._.fillpos=[g.x,g.y],n._.fillsize=[g.width,g.height],w(n,1,1,0,0,0))),\"transform\"in l&&n.transform(l.transform),C){var M=+g.cx,E=+g.cy,N=+g.rx||+g.r||0,L=+g.ry||+g.r||0;u.path=t.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\",a((M-N)*y),a((E-L)*y),a((M+N)*y),a((E+L)*y),a(M*y)),n._.dirty=1;}if(\"clip-rect\"in l){var P=r(l[\"clip-rect\"]).split(h);if(4==P.length){P[2]=+P[2]+ +P[0],P[3]=+P[3]+ +P[1];var z=u.clipRect||t._g.doc.createElement(\"div\"),F=z.style;F.clip=t.format(\"rect({1}px {2}px {3}px {0}px)\",P),u.clipRect||(F.position=\"absolute\",F.top=0,F.left=0,F.width=n.paper.width+\"px\",F.height=n.paper.height+\"px\",u.parentNode.insertBefore(z,u),z.appendChild(u),u.clipRect=z);}l[\"clip-rect\"]||u.clipRect&&(u.clipRect.style.clip=\"auto\");}if(n.textpath){var R=n.textpath.style;l.font&&(R.font=l.font),l[\"font-family\"]&&(R.fontFamily='\"'+l[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g,f)+'\"'),l[\"font-size\"]&&(R.fontSize=l[\"font-size\"]),l[\"font-weight\"]&&(R.fontWeight=l[\"font-weight\"]),l[\"font-style\"]&&(R.fontStyle=l[\"font-style\"]);}if(\"arrow-start\"in l&&B(T,l[\"arrow-start\"]),\"arrow-end\"in l&&B(T,l[\"arrow-end\"],1),null!=l.opacity||null!=l.fill||null!=l.src||null!=l.stroke||null!=l[\"stroke-width\"]||null!=l[\"stroke-opacity\"]||null!=l[\"fill-opacity\"]||null!=l[\"stroke-dasharray\"]||null!=l[\"stroke-miterlimit\"]||null!=l[\"stroke-linejoin\"]||null!=l[\"stroke-linecap\"]){var j=u.getElementsByTagName(\"fill\");if(!(j=j&&j[0])&&(j=k(\"fill\")),\"image\"==n.type&&l.src&&(j.src=l.src),l.fill&&(j.on=!0),null!=j.on&&\"none\"!=l.fill&&null!==l.fill||(j.on=!1),j.on&&l.fill){var I=r(l.fill).match(t._ISURL);if(I){j.parentNode==u&&u.removeChild(j),j.rotate=!0,j.src=I[1],j.type=\"tile\";var D=n.getBBox(1);j.position=D.x+c+D.y,n._.fillpos=[D.x,D.y],t._preload(I[1],function(){n._.fillsize=[this.offsetWidth,this.offsetHeight];});}else j.color=t.getRGB(l.fill).hex,j.src=f,j.type=\"solid\",t.getRGB(l.fill).error&&(T.type in{circle:1,ellipse:1}||\"r\"!=r(l.fill).charAt())&&S(T,l.fill,j)&&(g.fill=\"none\",g.gradient=l.fill,j.rotate=!1);}if(\"fill-opacity\"in l||\"opacity\"in l){var q=((+g[\"fill-opacity\"]+1||2)-1)*((+g.opacity+1||2)-1)*((+t.getRGB(l.fill).o+1||2)-1);q=o(s(q,0),1),j.opacity=q,j.src&&(j.color=\"none\");}u.appendChild(j);var O=u.getElementsByTagName(\"stroke\")&&u.getElementsByTagName(\"stroke\")[0],V=!1;!O&&(V=O=k(\"stroke\")),(l.stroke&&\"none\"!=l.stroke||l[\"stroke-width\"]||null!=l[\"stroke-opacity\"]||l[\"stroke-dasharray\"]||l[\"stroke-miterlimit\"]||l[\"stroke-linejoin\"]||l[\"stroke-linecap\"])&&(O.on=!0),(\"none\"==l.stroke||null===l.stroke||null==O.on||0==l.stroke||0==l[\"stroke-width\"])&&(O.on=!1);var W=t.getRGB(l.stroke);O.on&&l.stroke&&(O.color=W.hex),q=((+g[\"stroke-opacity\"]+1||2)-1)*((+g.opacity+1||2)-1)*((+W.o+1||2)-1);var Y=.75*(i(l[\"stroke-width\"])||1);if(q=o(s(q,0),1),null==l[\"stroke-width\"]&&(Y=g[\"stroke-width\"]),l[\"stroke-width\"]&&(O.weight=Y),Y&&Y<1&&(q*=Y)&&(O.weight=1),O.opacity=q,l[\"stroke-linejoin\"]&&(O.joinstyle=l[\"stroke-linejoin\"]||\"miter\"),O.miterlimit=l[\"stroke-miterlimit\"]||8,l[\"stroke-linecap\"]&&(O.endcap=\"butt\"==l[\"stroke-linecap\"]?\"flat\":\"square\"==l[\"stroke-linecap\"]?\"square\":\"round\"),\"stroke-dasharray\"in l){var G={\"-\":\"shortdash\",\".\":\"shortdot\",\"-.\":\"shortdashdot\",\"-..\":\"shortdashdotdot\",\". \":\"dot\",\"- \":\"dash\",\"--\":\"longdash\",\"- .\":\"dashdot\",\"--.\":\"longdashdot\",\"--..\":\"longdashdotdot\"};O.dashstyle=G[e](l[\"stroke-dasharray\"])?G[l[\"stroke-dasharray\"]]:f;}V&&u.appendChild(O);}if(\"text\"==T.type){T.paper.canvas.style.display=f;var H=T.paper.span,X=g.font&&g.font.match(/\\d+(?:\\.\\d*)?(?=px)/);v=H.style,g.font&&(v.font=g.font),g[\"font-family\"]&&(v.fontFamily=g[\"font-family\"]),g[\"font-weight\"]&&(v.fontWeight=g[\"font-weight\"]),g[\"font-style\"]&&(v.fontStyle=g[\"font-style\"]),X=i(g[\"font-size\"]||X&&X[0])||10,v.fontSize=100*X+\"px\",T.textpath.string&&(H.innerHTML=r(T.textpath.string).replace(/</g,\"&#60;\").replace(/&/g,\"&#38;\").replace(/\\n/g,\"<br>\"));var U=H.getBoundingClientRect();T.W=g.w=(U.right-U.left)/100,T.H=g.h=(U.bottom-U.top)/100,T.X=g.x,T.Y=g.y+T.H/2,(\"x\"in l||\"y\"in l)&&(T.path.v=t.format(\"m{0},{1}l{2},{1}\",a(g.x*y),a(g.y*y),a(g.x*y)+1));for(var $=[\"x\",\"y\",\"text\",\"font\",\"font-family\",\"font-weight\",\"font-style\",\"font-size\"],Z=0,Q=$.length;Z<Q;Z++)if($[Z]in l){T._.dirty=1;break}switch(g[\"text-anchor\"]){case\"start\":T.textpath.style[\"v-text-align\"]=\"left\",T.bbx=T.W/2;break;case\"end\":T.textpath.style[\"v-text-align\"]=\"right\",T.bbx=-T.W/2;break;default:T.textpath.style[\"v-text-align\"]=\"center\",T.bbx=0;}T.textpath.style[\"v-text-kern\"]=!0;}},S=function(e,a,s){e.attrs=e.attrs||{};e.attrs;var o=Math.pow,l=\"linear\",h=\".5 .5\";if(e.attrs.gradient=a,a=(a=r(a).replace(t._radial_gradient,function(t,e,r){return l=\"radial\",e&&r&&(e=i(e),r=i(r),o(e-.5,2)+o(r-.5,2)>.25&&(r=n.sqrt(.25-o(e-.5,2))*(2*(r>.5)-1)+.5),h=e+c+r),f})).split(/\\s*\\-\\s*/),\"linear\"==l){var u=a.shift();if(u=-i(u),isNaN(u))return null}var p=t._parseDots(a);if(!p)return null;if(e=e.shape||e.node,p.length){e.removeChild(s),s.on=!0,s.method=\"none\",s.color=p[0].color,s.color2=p[p.length-1].color;for(var d=[],g=0,x=p.length;g<x;g++)p[g].offset&&d.push(p[g].offset+c+p[g].color);s.colors=d.length?d.join():\"0% \"+s.color,\"radial\"==l?(s.type=\"gradientTitle\",s.focus=\"100%\",s.focussize=\"0 0\",s.focusposition=h,s.angle=0):(s.type=\"gradient\",s.angle=(270-u)%360),e.appendChild(s);}return 1},T=function(e,r){this[0]=this.node=e,e.raphael=!0,this.id=t._oid++,e.raphaelid=this.id,this.X=0,this.Y=0,this.attrs={},this.paper=r,this.matrix=t.matrix(),this._={transform:[],sx:1,sy:1,dx:0,dy:0,deg:0,dirty:1,dirtyT:1},!r.bottom&&(r.bottom=this),this.prev=r.top,r.top&&(r.top.next=this),r.top=this,this.next=null;},A=t.el;T.prototype=A,A.constructor=T,A.transform=function(e){if(null==e)return this._.transform;var i,n=this.paper._viewBoxShift,a=n?\"s\"+[n.scale,n.scale]+\"-1-1t\"+[n.dx,n.dy]:f;n&&(i=e=r(e).replace(/\\.{3}|\\u2026/g,this._.transform||f)),t._extractTransform(this,a+e);var s,o=this.matrix.clone(),l=this.skew,h=this.node,u=~r(this.attrs.fill).indexOf(\"-\"),p=!r(this.attrs.fill).indexOf(\"url(\");if(o.translate(1,1),p||u||\"image\"==this.type)if(l.matrix=\"1 0 0 1\",l.offset=\"0 0\",s=o.split(),u&&s.noRotation||!s.isSimple){h.style.filter=o.toFilter();var d=this.getBBox(),g=this.getBBox(1),x=d.x-g.x,v=d.y-g.y;h.coordorigin=x*-y+c+v*-y,w(this,1,1,x,v,0);}else h.style.filter=f,w(this,s.scalex,s.scaley,s.dx,s.dy,s.rotate);else h.style.filter=f,l.matrix=r(o),l.offset=o.offset();return null!==i&&(this._.transform=i,t._extractTransform(this,i)),this},A.rotate=function(t,e,n){if(this.removed)return this;if(null!=t){if((t=r(t).split(h)).length-1&&(e=i(t[1]),n=i(t[2])),t=i(t[0]),null==n&&(e=n),null==e||null==n){var a=this.getBBox(1);e=a.x+a.width/2,n=a.y+a.height/2;}return this._.dirtyT=1,this.transform(this._.transform.concat([[\"r\",t,e,n]])),this}},A.translate=function(t,e){return this.removed?this:((t=r(t).split(h)).length-1&&(e=i(t[1])),t=i(t[0])||0,e=+e||0,this._.bbox&&(this._.bbox.x+=t,this._.bbox.y+=e),this.transform(this._.transform.concat([[\"t\",t,e]])),this)},A.scale=function(t,e,n,a){if(this.removed)return this;if((t=r(t).split(h)).length-1&&(e=i(t[1]),n=i(t[2]),a=i(t[3]),isNaN(n)&&(n=null),isNaN(a)&&(a=null)),t=i(t[0]),null==e&&(e=t),null==a&&(n=a),null==n||null==a)var s=this.getBBox(1);return n=null==n?s.x+s.width/2:n,a=null==a?s.y+s.height/2:a,this.transform(this._.transform.concat([[\"s\",t,e,n,a]])),this._.dirtyT=1,this},A.hide=function(){return !this.removed&&(this.node.style.display=\"none\"),this},A.show=function(){return !this.removed&&(this.node.style.display=f),this},A.auxGetBBox=t.el.getBBox,A.getBBox=function(){var t=this.auxGetBBox();if(this.paper&&this.paper._viewBoxShift){var e={},r=1/this.paper._viewBoxShift.scale;return e.x=t.x-this.paper._viewBoxShift.dx,e.x*=r,e.y=t.y-this.paper._viewBoxShift.dy,e.y*=r,e.width=t.width*r,e.height=t.height*r,e.x2=e.x+e.width,e.y2=e.y+e.height,e}return t},A._getBBox=function(){return this.removed?{}:{x:this.X+(this.bbx||0)-this.W/2,y:this.Y-this.H,width:this.W,height:this.H}},A.remove=function(){if(!this.removed&&this.node.parentNode){for(var e in this.paper.__set__&&this.paper.__set__.exclude(this),t.eve.unbind(\"raphael.*.*.\"+this.id),t._tear(this,this.paper),this.node.parentNode.removeChild(this.node),this.shape&&this.shape.parentNode.removeChild(this.shape),this)this[e]=\"function\"==typeof this[e]?t._removedFactory(e):null;this.removed=!0;}},A.attr=function(r,i){if(this.removed)return this;if(null==r){var n={};for(var a in this.attrs)this.attrs[e](a)&&(n[a]=this.attrs[a]);return n.gradient&&\"none\"==n.fill&&(n.fill=n.gradient)&&delete n.gradient,n.transform=this._.transform,n}if(null==i&&t.is(r,\"string\")){if(\"fill\"==r&&\"none\"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;for(var s=r.split(h),o={},l=0,c=s.length;l<c;l++)(r=s[l])in this.attrs?o[r]=this.attrs[r]:t.is(this.paper.customAttributes[r],\"function\")?o[r]=this.paper.customAttributes[r].def:o[r]=t._availableAttrs[r];return c-1?o:o[s[0]]}if(this.attrs&&null==i&&t.is(r,\"array\")){for(o={},l=0,c=r.length;l<c;l++)o[r[l]]=this.attr(r[l]);return o}var f;for(var p in null!=i&&((f={})[r]=i),null==i&&t.is(r,\"object\")&&(f=r),f)u(\"raphael.attr.\"+p+\".\"+this.id,this,f[p]);if(f){for(p in this.paper.customAttributes)if(this.paper.customAttributes[e](p)&&f[e](p)&&t.is(this.paper.customAttributes[p],\"function\")){var d=this.paper.customAttributes[p].apply(this,[].concat(f[p]));for(var g in this.attrs[p]=f[p],d)d[e](g)&&(f[g]=d[g]);}f.text&&\"text\"==this.type&&(this.textpath.string=f.text),C(this,f);}return this},A.toFront=function(){return !this.removed&&this.node.parentNode.appendChild(this.node),this.paper&&this.paper.top!=this&&t._tofront(this,this.paper),this},A.toBack=function(){return this.removed?this:(this.node.parentNode.firstChild!=this.node&&(this.node.parentNode.insertBefore(this.node,this.node.parentNode.firstChild),t._toback(this,this.paper)),this)},A.insertAfter=function(e){return this.removed?this:(e.constructor==t.st.constructor&&(e=e[e.length-1]),e.node.nextSibling?e.node.parentNode.insertBefore(this.node,e.node.nextSibling):e.node.parentNode.appendChild(this.node),t._insertafter(this,e,this.paper),this)},A.insertBefore=function(e){return this.removed?this:(e.constructor==t.st.constructor&&(e=e[0]),e.node.parentNode.insertBefore(this.node,e.node),t._insertbefore(this,e,this.paper),this)},A.blur=function(e){var r=this.node.runtimeStyle,i=r.filter;return i=i.replace(g,f),0!=+e?(this.attrs.blur=e,r.filter=i+c+\" progid:DXImageTransform.Microsoft.Blur(pixelradius=\"+(+e||1.5)+\")\",r.margin=t.format(\"-{0}px 0 0 -{0}px\",a(+e||1.5))):(r.filter=i,r.margin=0,delete this.attrs.blur),this},t._engine.path=function(t,e){var r=k(\"shape\");r.style.cssText=v,r.coordsize=y+c+y,r.coordorigin=e.coordorigin;var i=new T(r,e),n={fill:\"none\",stroke:\"#000\"};t&&(n.path=t),i.type=\"path\",i.path=[],i.Path=f,C(i,n),e.canvas&&e.canvas.appendChild(r);var a=k(\"skew\");return a.on=!0,r.appendChild(a),i.skew=a,i.transform(f),i},t._engine.rect=function(e,r,i,n,a,s){var o=t._rectPath(r,i,n,a,s),l=e.path(o),h=l.attrs;return l.X=h.x=r,l.Y=h.y=i,l.W=h.width=n,l.H=h.height=a,h.r=s,h.path=o,l.type=\"rect\",l},t._engine.ellipse=function(t,e,r,i,n){var a=t.path();a.attrs;return a.X=e-i,a.Y=r-n,a.W=2*i,a.H=2*n,a.type=\"ellipse\",C(a,{cx:e,cy:r,rx:i,ry:n}),a},t._engine.circle=function(t,e,r,i){var n=t.path();n.attrs;return n.X=e-i,n.Y=r-i,n.W=n.H=2*i,n.type=\"circle\",C(n,{cx:e,cy:r,r:i}),n},t._engine.image=function(e,r,i,n,a,s){var o=t._rectPath(i,n,a,s),l=e.path(o).attr({stroke:\"none\"}),h=l.attrs,u=l.node,c=u.getElementsByTagName(\"fill\")[0];return h.src=r,l.X=h.x=i,l.Y=h.y=n,l.W=h.width=a,l.H=h.height=s,h.path=o,l.type=\"image\",c.parentNode==u&&u.removeChild(c),c.rotate=!0,c.src=r,c.type=\"tile\",l._.fillpos=[i,n],l._.fillsize=[a,s],u.appendChild(c),w(l,1,1,0,0,0),l},t._engine.text=function(e,i,n,s){var o=k(\"shape\"),l=k(\"path\"),h=k(\"textpath\");i=i||0,n=n||0,s=s||\"\",l.v=t.format(\"m{0},{1}l{2},{1}\",a(i*y),a(n*y),a(i*y)+1),l.textpathok=!0,h.string=r(s),h.on=!0,o.style.cssText=v,o.coordsize=y+c+y,o.coordorigin=\"0 0\";var u=new T(o,e),p={fill:\"#000\",stroke:\"none\",font:t._availableAttrs.font,text:s};u.shape=o,u.path=l,u.textpath=h,u.type=\"text\",u.attrs.text=r(s),u.attrs.x=i,u.attrs.y=n,u.attrs.w=1,u.attrs.h=1,C(u,p),o.appendChild(h),o.appendChild(l),e.canvas.appendChild(o);var d=k(\"skew\");return d.on=!0,o.appendChild(d),u.skew=d,u.transform(f),u},t._engine.setSize=function(e,r){var i=this.canvas.style;return this.width=e,this.height=r,e==+e&&(e+=\"px\"),r==+r&&(r+=\"px\"),i.width=e,i.height=r,i.clip=\"rect(0 \"+e+\" \"+r+\" 0)\",this._viewBox&&t._engine.setViewBox.apply(this,this._viewBox),this},t._engine.setViewBox=function(e,r,i,n,a){t.eve(\"raphael.setViewBox\",this,this._viewBox,[e,r,i,n,a]);var s,o,l=this.getSize(),h=l.width,u=l.height;return a&&(i*(s=u/n)<h&&(e-=(h-i*s)/2/s),n*(o=h/i)<u&&(r-=(u-n*o)/2/o)),this._viewBox=[e,r,i,n,!!a],this._viewBoxShift={dx:-e,dy:-r,scale:l},this.forEach(function(t){t.transform(\"...\");}),this},t._engine.initWin=function(t){var e=t.document;e.styleSheets.length<31?e.createStyleSheet().addRule(\".rvml\",\"behavior:url(#default#VML)\"):e.styleSheets[0].addRule(\".rvml\",\"behavior:url(#default#VML)\");try{!e.namespaces.rvml&&e.namespaces.add(\"rvml\",\"urn:schemas-microsoft-com:vml\"),k=function(t){return e.createElement(\"<rvml:\"+t+' class=\"rvml\">')};}catch(t){k=function(t){return e.createElement(\"<\"+t+' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">')};}},t._engine.initWin(t._g.win),t._engine.create=function(){var e=t._getContainer.apply(0,arguments),r=e.container,i=e.height,n=e.width,a=e.x,s=e.y;if(!r)throw new Error(\"VML container not found.\");var o=new t._Paper,l=o.canvas=t._g.doc.createElement(\"div\"),h=l.style;return a=a||0,s=s||0,n=n||512,i=i||342,o.width=n,o.height=i,n==+n&&(n+=\"px\"),i==+i&&(i+=\"px\"),o.coordsize=216e5+c+216e5,o.coordorigin=\"0 0\",o.span=t._g.doc.createElement(\"span\"),o.span.style.cssText=\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\",l.appendChild(o.span),h.cssText=t.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\",n,i),1==r?(t._g.doc.body.appendChild(l),h.left=a+\"px\",h.top=s+\"px\",h.position=\"absolute\"):r.firstChild?r.insertBefore(l,r.firstChild):r.appendChild(l),o.renderfix=function(){},o},t.prototype.clear=function(){t.eve(\"raphael.clear\",this),this.canvas.innerHTML=f,this.span=t._g.doc.createElement(\"span\"),this.span.style.cssText=\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\",this.canvas.appendChild(this.span),this.bottom=this.top=null;},t.prototype.remove=function(){for(var e in t.eve(\"raphael.remove\",this),this.canvas.parentNode.removeChild(this.canvas),this)this[e]=\"function\"==typeof this[e]?t._removedFactory(e):null;return !0};var M=t.st;for(var E in A)A[e](E)&&!M[e](E)&&(M[E]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t].apply(r,e);})}}(E));}}.apply(e,i))||(t.exports=n);}])});\n});\n\nvar __pika_web_default_export_for_treeshaking__ = /*@__PURE__*/getDefaultExportFromCjs(raphael_min);\n\nexport default __pika_web_default_export_for_treeshaking__;\n", "import Raphael from \"../_snowpack/pkg/raphael.js\";\n\"use strict\";\nvar Smits = {};\nSmits.Common = {\n  nodeIdIncrement: 0,\n  activeNode: 0,\n  roundFloat: function(num, digits) {\n    var i = 0, dec = 1;\n    while (i < digits) {\n      dec *= 10;\n      i++;\n    }\n    return Math.round(num * dec) / dec;\n  },\n  apply: function(obj, extObj) {\n    if (obj && typeof extObj == \"object\") {\n      for (var key in extObj) {\n        obj[key] = extObj[key];\n      }\n    }\n    return obj;\n  },\n  addRaphEventHandler: function(el, eventType, fn, paramsObj) {\n    try {\n      el[eventType](function(fn2, paramsObj2) {\n        return function(e, o) {\n          var params = paramsObj2;\n          params.e = e;\n          fn2(params);\n        };\n      }(fn, paramsObj));\n    } catch (err) {\n    }\n  },\n  isInteger: function(s) {\n    return !isNaN(parseInt(s));\n  },\n  isXMLSerializerAvailable: function() {\n    if (typeof XMLSerializer == \"function\") {\n      return true;\n    } else {\n      return false;\n    }\n  },\n  createSvgEl: function(el, attr) {\n    el = document.createElementNS(\"http://www.w3.org/2000/svg\", el);\n    if (attr) {\n      for (var key in attr) {\n        if (attr.hasOwnProperty(key)) {\n          el.setAttribute(key, String(attr[key]));\n        }\n      }\n    }\n    return el;\n  },\n  createGradientEl: function(name, obj, coords) {\n    if (obj.type != \"radialGradient\")\n      return false;\n    var radialEl = Smits.Common.createSvgEl(\"radialGradient\", {\n      id: name,\n      gradientUnits: \"userSpaceOnUse\",\n      cx: coords[0],\n      cy: coords[1],\n      r: coords[2],\n      fx: coords[0],\n      fy: coords[1]\n    });\n    if (obj.stop) {\n      var stop = obj.stop;\n      for (var i = 0; i < stop.length; i++) {\n        var stopObj = stop[i];\n        if (stopObj[\"@attributes\"]) {\n          radialEl.appendChild(Smits.Common.createSvgEl(\"stop\", stopObj[\"@attributes\"]));\n        } else {\n          if (stopObj[\"_attributes\"])\n            delete stopObj[\"_attributes\"];\n          if (stopObj[\"_children\"])\n            delete stopObj[\"_children\"];\n          if (stopObj[\"__proto__\"])\n            delete stopObj[\"__proto__\"];\n          radialEl.appendChild(Smits.Common.createSvgEl(\"stop\", stopObj));\n        }\n      }\n    }\n    return radialEl;\n  },\n  setCssStyle: function(selector, rule) {\n    var stylesheet = document.styleSheets[0];\n    if (stylesheet.addRule) {\n      stylesheet.addRule(selector, rule);\n    } else if (stylesheet.insertRule) {\n      stylesheet.insertRule(selector + \" { \" + rule + \" }\", stylesheet.cssRules.length);\n    }\n  }\n};\nSmits.PhyloCanvas = function() {\n  var phylogram, divId, newickObject, svg, dataObject;\n  return function(inputFormat, sDivId, canvasWidth, canvasHeight, type) {\n    this.getNewickObject = function() {\n      return newickObject;\n    };\n    this.clear = function() {\n    };\n    this.scale = function(multiplier) {\n      svg.svg.scale(multiplier);\n    };\n    this.getSvg = function() {\n      return svg;\n    };\n    this.getPhylogram = function() {\n      return phylogram;\n    };\n    this.getSvgSource = function() {\n      if (Raphael.svg && Smits.Common.isXMLSerializerAvailable()) {\n        var serialize = new XMLSerializer();\n        return serialize.serializeToString(svg.svg.canvas);\n      } else {\n        return false;\n      }\n    };\n    if (typeof inputFormat === \"object\") {\n      if (inputFormat.xml) {\n        if (!inputFormat.fileSource) {\n          var xj = XMLObjectifier.textToXML(inputFormat.xml);\n        } else {\n          var xj = inputFormat.xml;\n        }\n        xj = XMLObjectifier.xmlToJSON(xj);\n        dataObject = new Smits.PhyloCanvas.PhyloxmlParse(xj);\n      } else if (inputFormat.phyloxml) {\n        if (!inputFormat.fileSource) {\n          var xj = XMLObjectifier.textToXML(inputFormat.phyloxml);\n        } else {\n          var xj = inputFormat.phyloxml;\n        }\n        xj = XMLObjectifier.xmlToJSON(xj);\n        dataObject = new Smits.PhyloCanvas.PhyloxmlParse(xj);\n      } else if (inputFormat.nexml) {\n        if (!inputFormat.fileSource) {\n          var xj = XMLObjectifier.textToXML(inputFormat.nexml);\n        } else {\n          var xj = inputFormat.nexml;\n        }\n        xj = XMLObjectifier.xmlToJSON(xj);\n        dataObject = new Smits.PhyloCanvas.NexmlParse(xj, inputFormat);\n      } else if (inputFormat.json) {\n        dataObject = new Smits.PhyloCanvas.PhyloxmlParse(inputFormat.json);\n      } else if (inputFormat.newick) {\n        dataObject = new Smits.PhyloCanvas.NewickParse(inputFormat.newick);\n      } else if (inputFormat.nexmlJson) {\n        dataObject = new Smits.PhyloCanvas.NexmlJsonParse(inputFormat);\n      } else {\n        alert(\"Please set the format of input data\");\n      }\n    } else {\n      dataObject = new Smits.PhyloCanvas.NewickParse(inputFormat);\n    }\n    divId = sDivId;\n    svg = new Smits.PhyloCanvas.Render.SVG(divId, canvasWidth, canvasHeight);\n    if (type == \"circular\") {\n      phylogram = new Smits.PhyloCanvas.Render.CircularPhylogram(svg, dataObject);\n    } else {\n      phylogram = new Smits.PhyloCanvas.Render.Phylogram(svg, dataObject);\n    }\n  };\n}();\nSmits.PhyloCanvas.prototype = {};\nSmits.PhyloCanvas.Node = function() {\n  return function(o, parentInstance) {\n    this.id = Smits.Common.nodeIdIncrement += 1;\n    this.level = 0;\n    this.len = 0;\n    this.newickLen = 0;\n    this.name = \"\";\n    this.type = \"\";\n    this.chart = {};\n    this.img = [];\n    if (o)\n      Smits.Common.apply(this, o);\n    this._countAllChildren = false;\n    this._countImmediateChildren = false;\n    this._midBranchPosition = false;\n    this.children = new Array();\n    if (parentInstance) {\n      parentInstance.children.push(this);\n    }\n  };\n}();\nSmits.PhyloCanvas.Node.prototype = {\n  getCountAllChildren: function() {\n    if (this._countAllChildren !== false)\n      return this._countAllChildren;\n    var nodeCount = 0;\n    for (var key in this.children) {\n      if (Smits.Common.isInteger(key)) {\n        var child = this.children[key];\n        if (child.children && child.children.length > 0) {\n          nodeCount += child.getCountAllChildren();\n        } else {\n          nodeCount++;\n        }\n      }\n    }\n    this._countAllChildren = nodeCount;\n    return nodeCount;\n  },\n  getCountImmediateChildren: function() {\n    if (this._countImmediateChildren !== false)\n      return this._countImmediateChildren;\n    var nodeCount = 0;\n    for (var key in this.children) {\n      var child = this.children[key];\n      nodeCount += child.length;\n    }\n    this._countImmediateChildren = nodeCount;\n    return nodeCount;\n  },\n  getMidbranchPosition: function(firstBranch) {\n    if (this._midBranchPosition !== false)\n      return this._midBranchPosition;\n    var y2 = [0, 0];\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      if (child.children && child.children.length > 0) {\n        if (i == 0 && firstBranch) {\n          y2[0] = child.getMidbranchPosition(true);\n          y2[1] += child.getCountAllChildren() - 1;\n        } else if (i == 0) {\n          y2[0] = child.getMidbranchPosition();\n          y2[1] += child.getCountAllChildren();\n        } else if (i == this.children.length - 1) {\n          y2[1] += child.getMidbranchPosition();\n        } else {\n          y2[1] += child.getCountAllChildren();\n        }\n      } else {\n        if (i == 0 && firstBranch) {\n          y2[0] = 0;\n        } else if (i == 0) {\n          y2[0] = 1;\n          y2[1] += 1;\n        } else if (i == this.children.length - 1) {\n          y2[1] += 1;\n        } else {\n          y2[1] += 1;\n        }\n      }\n    }\n    this._midBranchPosition = y2[1] >= y2[0] ? (y2[1] + y2[0]) / 2 : y2[0];\n    return this._midBranchPosition;\n  }\n};\nSmits.PhyloCanvas.NewickParse = function() {\n  var text, ch, pos, mLevel = 0, mNewickLen = 0, root, validate, object = function(parentNode) {\n    var node = new Smits.PhyloCanvas.Node();\n    while (ch !== \")\" && ch !== \",\") {\n      if (ch === \":\") {\n        next();\n        node.len = Smits.Common.roundFloat(string(), 4);\n        if (node.len == 0) {\n          node.len = 1e-4;\n        }\n      } else if (ch === \"'\" || ch === '\"') {\n        node.type = \"label\";\n        node.name = quotedString(ch);\n      } else {\n        node.type = \"label\";\n        node.name = string();\n      }\n    }\n    node.level = parentNode.level + 1;\n    return node;\n  }, objectIterate = function(parentNode) {\n    var node = new Smits.PhyloCanvas.Node();\n    if (parentNode) {\n      node.level = parentNode.level + 1;\n    }\n    while (ch !== \")\") {\n      next();\n      if (ch === \"(\") {\n        node.children.push(objectIterate(node));\n      } else {\n        node.children.push(object(node));\n      }\n    }\n    next();\n    if (ch !== \":\" && ch !== \")\" && ch !== \",\" && ch !== \";\") {\n      node.type = \"label\";\n      node.name = string();\n    }\n    if (ch === \":\") {\n      next();\n      node.len = Smits.Common.roundFloat(string(), 4);\n      if (node.len == 0) {\n        node.len = 1e-4;\n      }\n      node.type = \"stem\";\n    }\n    return node;\n  }, string = function() {\n    var string2 = \"\";\n    while (ch !== \":\" && ch !== \")\" && ch !== \",\" && ch !== \";\") {\n      string2 += ch;\n      next();\n    }\n    return string2;\n  }, quotedString = function(quoteType) {\n    var string2 = \"\";\n    while (ch !== quoteType) {\n      string2 += ch;\n      next();\n    }\n    return string2;\n  }, next = function() {\n    ch = text.charAt(pos);\n    pos += 1;\n    return ch;\n  }, recursiveProcessRoot = function(node, parentNode) {\n    if (node.children && node.children.length) {\n      for (var i = 0; i < node.children.length; i++) {\n        var child = node.children[i];\n        if (child.len === 0) {\n          child.len = 1;\n        }\n        child.newickLen = Smits.Common.roundFloat(child.len + node.newickLen, 4);\n        if (child.level > mLevel)\n          mLevel = child.level;\n        if (child.newickLen > mNewickLen)\n          mNewickLen = child.newickLen;\n        if (child.children.length > 0) {\n          recursiveProcessRoot(child, node);\n        }\n      }\n    }\n    return node;\n  };\n  return function(parseText) {\n    this.getRoot = function() {\n      return root;\n    };\n    this.getLevels = function() {\n      return mLevel;\n    };\n    this.getNewickLen = function() {\n      return mNewickLen;\n    };\n    this.getValidate = function() {\n      return validate;\n    };\n    mLevel = 0;\n    mNewickLen = 0;\n    text = parseText;\n    pos = 0;\n    next();\n    root = objectIterate();\n    root = recursiveProcessRoot(root);\n  };\n}();\nSmits.PhyloCanvas.NewickParse.prototype = {};\nSmits.PhyloCanvas.PhyloxmlParse = function() {\n  var mLevel = 0, mNewickLen = 0, root, validate, recursiveParse = function(clade, parentNode) {\n    var node = new Smits.PhyloCanvas.Node();\n    if (parentNode) {\n      node.level = parentNode.level + 1;\n    }\n    if (clade.clade && clade.clade.length) {\n      for (var i = 0; i < clade.clade.length; i++) {\n        var thisClade = clade.clade[i];\n        node.children.push(recursiveParse(thisClade, node));\n      }\n    }\n    if (clade.branch_length) {\n      if (typeof clade.branch_length === \"object\") {\n        clade.branch_length = clade.branch_length[0].Text;\n      }\n      node.len = Smits.Common.roundFloat(clade.branch_length, 4);\n      if (node.len == 0) {\n        node.len = 1e-4;\n      }\n    }\n    if (clade.color) {\n      node.red = clade.color[0].red[0].Text;\n      node.green = clade.color[0].green[0].Text;\n      node.blue = clade.color[0].blue[0].Text;\n    } else {\n      node.red = 0;\n      node.green = 0;\n      node.blue = 0;\n    }\n    if (clade.property && clade.property[0].applies_to == \"node\" && clade.property[0].ref == \"style:font_color\") {\n      node.font_color_hex = clade.property[0].Text;\n    }\n    if (clade.name) {\n      node.type = \"label\";\n      node.name = clade.name[0].Text;\n      if (clade.name[0] && clade.name[0].style) {\n        node.style = clade.name[0].style;\n      }\n      if (clade.name[0] && clade.name[0].bgStyle) {\n        node.bgStyle = clade.name[0].bgStyle;\n      }\n    } else if (clade.confidence) {\n      node.name = clade.confidence[0].Text;\n    }\n    if (clade.sequence && clade.sequence[0] && clade.sequence[0].name && clade.sequence[0].name[0] && clade.sequence[0].name[0].Text) {\n      node.sequenceName = clade.sequence[0].name[0].Text;\n    }\n    if (clade.taxonomy && clade.taxonomy[0]) {\n      if (clade.taxonomy[0].scientific_name && clade.taxonomy[0].scientific_name[0] && clade.taxonomy[0].scientific_name[0].Text) {\n        node.taxonomyScientificName = clade.taxonomy[0].scientific_name[0].Text;\n      }\n      if (clade.taxonomy[0].common_name && clade.taxonomy[0].common_name[0] && clade.taxonomy[0].common_name[0].Text) {\n        node.taxonomyCommonName = clade.taxonomy[0].common_name[0].Text;\n      }\n    }\n    if (clade.sequence && clade.sequence[0] && clade.sequence[0].accession && clade.sequence[0].accession[0] && clade.sequence[0].accession[0].Text) {\n      node.sequenceAccession = clade.sequence[0].accession[0].Text;\n    }\n    if (clade.point) {\n      node.LatLong = [clade.point[0].lat[0].Text, clade.point[0][\"long\"][0].Text];\n    }\n    if (!node.name) {\n      if (node.sequenceName) {\n        node.name = node.sequenceName;\n      } else if (node.taxonomyScientificName) {\n        node.name = node.taxonomyScientificName;\n      } else if (node.taxonomyCommonName) {\n        node.name = node.taxonomyCommonName;\n      } else if (node.sequenceAccession) {\n        node.name = node.sequenceAccession;\n      }\n      if (node.name) {\n        node.type = \"label\";\n      }\n    }\n    if (clade.annotation) {\n      if (clade.annotation[0] && clade.annotation[0].desc && clade.annotation[0].desc[0] && clade.annotation[0].desc[0].Text) {\n        node.description = clade.annotation[0].desc[0].Text;\n      }\n      if (clade.annotation[0] && clade.annotation[0].uri && clade.annotation[0].uri[0] && clade.annotation[0].uri[0].Text) {\n        node.uri = clade.annotation[0].uri[0].Text;\n      }\n      if (clade.annotation[0] && clade.annotation[0].img) {\n        for (var i in clade.annotation[0].img) {\n          if (Smits.Common.isInteger(i)) {\n            node.img[i] = clade.annotation[0].img[i].Text;\n          }\n        }\n      }\n    }\n    if (clade.chart) {\n      if (clade.chart[0]) {\n        for (var i in clade.chart[0]) {\n          if (i != \"Text\" && i != \"_children\") {\n            node.chart[i] = clade.chart[0][i][0].Text;\n          }\n        }\n      }\n    }\n    if (node && node.level > 1) {\n      if (!node.len) {\n        validate = \"Error. Please include Branch Lengths - we only draw rooted phylogenetic trees.\";\n      }\n    }\n    return node;\n  }, recursiveProcessRoot = function(node, parentNode) {\n    if (node.children && node.children.length) {\n      for (var i = 0; i < node.children.length; i++) {\n        var child = node.children[i];\n        child.newickLen = Math.round((child.len + node.newickLen) * 1e4) / 1e4;\n        if (child.level > mLevel)\n          mLevel = child.level;\n        if (child.newickLen > mNewickLen)\n          mNewickLen = child.newickLen;\n        if (child.children.length > 0) {\n          recursiveProcessRoot(child, node);\n        }\n      }\n    }\n    return node;\n  }, recursiveProcessParameters = function(parametersEl, treeType) {\n    for (var i in parametersEl) {\n      if (i != \"_children\" && i != \"Text\") {\n        if (i == \"rectangular\" || i == \"circular\") {\n          recursiveProcessParameters(parametersEl[i][0], i);\n        } else {\n          if (!Smits.PhyloCanvas.Render.Parameters[i]) {\n            Smits.PhyloCanvas.Render.Parameters[i] = {};\n          }\n          ;\n          Smits.PhyloCanvas.Render.Parameters.set(i, parametersEl[i][0].Text, treeType);\n        }\n      }\n    }\n    return;\n  };\n  return function(jsonString) {\n    this.getRoot = function() {\n      return root;\n    };\n    this.getLevels = function() {\n      return mLevel;\n    };\n    this.getNewickLen = function() {\n      return mNewickLen;\n    };\n    this.getValidate = function() {\n      return validate;\n    };\n    if (jsonString.phylogeny && jsonString.phylogeny[0] && jsonString.phylogeny[0].clade) {\n      root = recursiveParse(jsonString.phylogeny[0].clade[0]);\n    }\n    if (jsonString.phylogeny && jsonString.phylogeny[0] && jsonString.phylogeny[0].render && jsonString.phylogeny[0].render[0]) {\n      var render = jsonString.phylogeny[0].render[0];\n      if (render && render.styles) {\n        var styles = render.styles[0];\n        for (var i in styles) {\n          if (i != \"_children\" && i != \"Text\") {\n            if (styles[i][0][\"type\"] && styles[i][0][\"type\"] == \"radialGradient\" && Raphael.svg) {\n              styles[i][0][\"name\"] = i;\n              Smits.PhyloCanvas.Render.Style[i] = styles[i][0];\n              if (!Smits.PhyloCanvas.Render.Style[\"jsphylosvgGradientList\"]) {\n                Smits.PhyloCanvas.Render.Style[\"jsphylosvgGradientList\"] = [];\n              }\n              ;\n              Smits.PhyloCanvas.Render.Style[\"jsphylosvgGradientList\"].push(i);\n            } else {\n              if (!Smits.PhyloCanvas.Render.Style[i]) {\n                Smits.PhyloCanvas.Render.Style[i] = {};\n              }\n              ;\n              for (var j in styles[i][0]) {\n                if (j != \"_attributes\" && j != \"_children\" && j != \"type\") {\n                  Smits.PhyloCanvas.Render.Style[i][j.replace(\"_\", \"-\")] = styles[i][0][j];\n                }\n              }\n            }\n          }\n        }\n      }\n      if (render && render.parameters) {\n        recursiveProcessParameters(render.parameters[0]);\n      }\n      if (render && render.charts) {\n        var charts = render.charts[0];\n        for (var i in charts) {\n          if (i != \"_children\" && i != \"Text\") {\n            for (var j in charts[i]) {\n              if (charts[i][j].type == \"binary\") {\n                charts[i][j].chart = i;\n                Smits.PhyloCanvas.Render.Parameters.binaryCharts.push(charts[i][j]);\n              } else if (charts[i][j].type == \"integratedBinary\") {\n                charts[i][j].chart = i;\n                Smits.PhyloCanvas.Render.Parameters.integratedBinaryCharts.push(charts[i][j]);\n              } else if (charts[i][j].type == \"bar\") {\n                charts[i][j].chart = i;\n                if (Smits.PhyloCanvas.Render.Parameters.barCharts.length == 1) {\n                  Smits.PhyloCanvas.Render.Parameters.barCharts.shift();\n                }\n                Smits.PhyloCanvas.Render.Parameters.barCharts.push(charts[i][j]);\n              }\n            }\n          }\n        }\n      }\n    }\n    root = recursiveProcessRoot(root);\n  };\n}();\nSmits.PhyloCanvas.PhyloxmlParse.prototype = {};\nSmits.PhyloCanvas.NexmlParse = function() {\n  var mLevel = 0, mNewickLen = 0, root, validate, nexEdges, nexNodes, recursiveParse = function(nexnode, nexlen, parentNode) {\n    var node = new Smits.PhyloCanvas.Node();\n    if (parentNode) {\n      node.level = parentNode.level + 1;\n    }\n    for (var i = 0; i < nexEdges.length; i++) {\n      if (nexEdges[i].source == nexnode.id) {\n        for (var j = 0; j < nexNodes.length; j++) {\n          if (nexEdges[i].target == nexNodes[j].id) {\n            node.children.push(recursiveParse(nexNodes[j], nexEdges[i].length, node));\n          }\n        }\n      }\n    }\n    if (node && node.level > 0 && !node.len) {\n      node.len = 1;\n    }\n    if (nexlen) {\n      node.len = Smits.Common.roundFloat(nexlen, 4);\n      if (node.len == 0) {\n        node.len = 1e-4;\n      }\n    }\n    if (nexnode.label) {\n      node.type = \"label\";\n      node.name = nexnode.label;\n      if (nexnode.style) {\n        node.style = nexnode.style;\n      }\n    }\n    if (nexnode.color) {\n      const colors = nexnode.color.replace(/[a-z%\\s\\(\\)]/g, \"\").split(\",\");\n      node.red = colors[0];\n      node.green = colors[1];\n      node.blue = colors[2];\n    } else {\n      const colors = Smits.PhyloCanvas.Render.Style.line.stroke.replace(/[a-z%\\s\\(\\)]/g, \"\").split(\",\");\n      node.red = colors[0];\n      node.green = colors[1];\n      node.blue = colors[2];\n    }\n    return node;\n  }, recursiveProcessRoot = function(node, parentNode) {\n    if (node.children && node.children.length) {\n      for (var i = 0; i < node.children.length; i++) {\n        var child = node.children[i];\n        child.newickLen = Math.round((child.len + node.newickLen) * 1e4) / 1e4;\n        if (child.level > mLevel)\n          mLevel = child.level;\n        if (child.newickLen > mNewickLen)\n          mNewickLen = child.newickLen;\n        if (child.children.length > 0) {\n          recursiveProcessRoot(child, node);\n        }\n      }\n    }\n    return node;\n  }, recursiveProcessParameters = function(parametersEl, treeType) {\n    for (var i in parametersEl) {\n      if (i != \"_children\" && i != \"Text\") {\n        if (i == \"rectangular\" || i == \"circular\") {\n          recursiveProcessParameters(parametersEl[i][0], i);\n        } else {\n          if (!Smits.PhyloCanvas.Render.Parameters[i]) {\n            Smits.PhyloCanvas.Render.Parameters[i] = {};\n          }\n          ;\n          Smits.PhyloCanvas.Render.Parameters.set(i, parametersEl[i][0].Text, treeType);\n        }\n      }\n    }\n    return;\n  };\n  return function(jsonString, inputFormat) {\n    this.getRoot = function() {\n      return root;\n    };\n    this.getLevels = function() {\n      return mLevel;\n    };\n    this.getNewickLen = function() {\n      return mNewickLen;\n    };\n    this.getValidate = function() {\n      return validate;\n    };\n    if (inputFormat.tree && jsonString.trees[0] && jsonString.trees[0].tree[inputFormat.tree - 1]) {\n      nexEdges = jsonString.trees[0].tree[inputFormat.tree - 1].edge;\n      nexNodes = jsonString.trees[0].tree[inputFormat.tree - 1].node;\n    } else {\n      nexEdges = jsonString.trees[0].tree[0].edge;\n      nexNodes = jsonString.trees[0].tree[0].node;\n    }\n    for (var i = 0; i < nexNodes.length; i++) {\n      var targetCount = 0;\n      if (nexNodes[i].root && nexNodes[i].root == \"true\") {\n        root = nexNodes[i];\n        break;\n      }\n      for (var j = 0; j < nexEdges.length; j++) {\n        if (nexEdges[j].target == nexNodes[i].id) {\n          targetCount++;\n        }\n      }\n      if (targetCount == 0) {\n        root = nexNodes[i];\n        break;\n      }\n    }\n    if (root) {\n      root = recursiveParse(root);\n      root = recursiveProcessRoot(root);\n    } else {\n      validate = \"Error. Currently, only rooted NeXML trees are supported.\";\n    }\n  };\n}();\nSmits.PhyloCanvas.NexmlParse.prototype = {};\nSmits.PhyloCanvas.NexmlJsonParse = function() {\n  var mLevel = 0, mNewickLen = 0, root, validate, nexEdges = [], nexNodes = [], recursiveParse = function(nexnode, nexlen, parentNode) {\n    var node = new Smits.PhyloCanvas.Node();\n    if (parentNode) {\n      node.level = parentNode.level + 1;\n    }\n    for (var i = 0; i < nexEdges.length; i++) {\n      if (nexEdges[i].source == nexnode.id) {\n        for (var j = 0; j < nexNodes.length; j++) {\n          if (nexEdges[i].target == nexNodes[j].id) {\n            node.children.push(recursiveParse(nexNodes[j], nexEdges[i].length, node));\n          }\n        }\n      }\n    }\n    if (nexlen) {\n      node.len = Smits.Common.roundFloat(nexlen, 4);\n      if (node.len == 0) {\n        node.len = 1e-4;\n      }\n    }\n    if (nexnode.label) {\n      node.type = \"label\";\n      node.name = nexnode.label;\n      if (nexnode.accession) {\n        node.accession = nexnode.accession;\n      }\n      if (nexnode.style) {\n        node.style = nexnode.style;\n      }\n      if (nexnode.bgStyle) {\n        node.bgStyle = nexnode.bgStyle;\n      }\n    }\n    if (nexnode.chart) {\n      node.chart = nexnode.chart;\n    }\n    if (node && node.level > 1) {\n      if (!node.len) {\n        validate = \"Error. Please include Branch Lengths - we only draw rooted phylogenetic trees.\";\n      }\n    }\n    return node;\n  }, recursiveProcessRoot = function(node, parentNode) {\n    if (node.children && node.children.length) {\n      for (var i = 0; i < node.children.length; i++) {\n        var child = node.children[i];\n        child.newickLen = Math.round((child.len + node.newickLen) * 1e4) / 1e4;\n        if (child.level > mLevel)\n          mLevel = child.level;\n        if (child.newickLen > mNewickLen)\n          mNewickLen = child.newickLen;\n        if (child.children.length > 0) {\n          recursiveProcessRoot(child, node);\n        }\n      }\n    }\n    return node;\n  }, recursiveProcessParameters = function(parametersEl, treeType) {\n    for (var i in parametersEl) {\n      if (i != \"_children\" && i != \"Text\") {\n        if (i == \"rectangular\" || i == \"circular\") {\n          recursiveProcessParameters(parametersEl[i], i);\n        } else {\n          if (!Smits.PhyloCanvas.Render.Parameters[i]) {\n            Smits.PhyloCanvas.Render.Parameters[i] = {};\n          }\n          ;\n          Smits.PhyloCanvas.Render.Parameters.set(i, parametersEl[i], treeType);\n        }\n      }\n    }\n    return;\n  };\n  return function(inputFormat) {\n    this.getRoot = function() {\n      return root;\n    };\n    this.getLevels = function() {\n      return mLevel;\n    };\n    this.getNewickLen = function() {\n      return mNewickLen;\n    };\n    this.getValidate = function() {\n      return validate;\n    };\n    var jsonString = inputFormat.nexmlJson.nexml;\n    var render = jsonString.render;\n    if (render && render.styles) {\n      var styles = render.styles;\n      for (var i in styles) {\n        if (i != \"_children\" && i != \"Text\") {\n          if (styles[i][\"@attributes\"][\"type\"] && styles[i][\"@attributes\"][\"type\"] == \"radialGradient\" && Raphael.svg) {\n            styles[i][\"name\"] = i;\n            styles[i][\"type\"] = styles[i][\"@attributes\"][\"type\"];\n            Smits.PhyloCanvas.Render.Style[i] = styles[i];\n            if (!Smits.PhyloCanvas.Render.Style[\"jsphylosvgGradientList\"]) {\n              Smits.PhyloCanvas.Render.Style[\"jsphylosvgGradientList\"] = [];\n            }\n            ;\n            Smits.PhyloCanvas.Render.Style[\"jsphylosvgGradientList\"].push(i);\n          } else {\n            if (!Smits.PhyloCanvas.Render.Style[i]) {\n              Smits.PhyloCanvas.Render.Style[i] = {};\n            }\n            ;\n            for (var j in styles[i][\"@attributes\"]) {\n              if (j != \"_attributes\" && j != \"_children\" && j != \"type\") {\n                Smits.PhyloCanvas.Render.Style[i][j.replace(\"_\", \"-\")] = styles[i][\"@attributes\"][j];\n              }\n            }\n          }\n        }\n      }\n    }\n    if (render && render.parameters) {\n      recursiveProcessParameters(render.parameters);\n    }\n    if (render && render.charts) {\n      var charts = render.charts;\n      for (var i in charts) {\n        charts[i][\"@attributes\"].chart = i;\n        if (charts[i][\"@attributes\"].type == \"binary\") {\n          Smits.PhyloCanvas.Render.Parameters.binaryCharts.push(charts[i][\"@attributes\"]);\n        } else if (charts[i][\"@attributes\"].type == \"integratedBinary\") {\n          Smits.PhyloCanvas.Render.Parameters.integratedBinaryCharts.push(charts[i][\"@attributes\"]);\n        } else if (charts[i][\"@attributes\"].type == \"bar\") {\n          Smits.PhyloCanvas.Render.Parameters.barCharts.push(charts[i][\"@attributes\"]);\n        }\n      }\n    }\n    if (inputFormat.tree && jsonString.trees[0] && jsonString.trees[0].tree[inputFormat.tree - 1]) {\n      nexEdges = jsonString.trees[0].tree[inputFormat.tree - 1].edge;\n      nexNodes = jsonString.trees[0].tree[inputFormat.tree - 1].node;\n    } else {\n      for (var i = 0; i < jsonString.trees.tree.edge.length; i++) {\n        nexEdges.push(jsonString.trees.tree.edge[i][\"@attributes\"]);\n      }\n      for (var i = 0; i < jsonString.trees.tree.node.length; i++) {\n        var node = jsonString.trees.tree.node[i][\"@attributes\"];\n        if (node.label) {\n          node.chart = jsonString.trees.tree.node[i].chart;\n        }\n        nexNodes.push(node);\n      }\n    }\n    for (var i = 0; i < nexNodes.length; i++) {\n      if (nexNodes[i].root && nexNodes[i].root == \"true\") {\n        root = nexNodes[i];\n      }\n    }\n    if (root) {\n      root = recursiveParse(root);\n      root = recursiveProcessRoot(root);\n    } else {\n      validate = \"Error. Currently, only rooted NeXML trees are supported.\";\n    }\n  };\n}();\nSmits.PhyloCanvas.NexmlParse.prototype = {};\nSmits.PhyloCanvas.Render = {};\nSmits.PhyloCanvas.Render.Style = {\n  line: {\n    stroke: \"rgb(0,0,0)\",\n    \"stroke-width\": 1\n  },\n  text: {\n    \"font-family\": \"Verdana\",\n    \"font-size\": 12,\n    \"text-anchor\": \"start\"\n  },\n  path: {\n    stroke: \"rgb(0,0,0)\",\n    \"stroke-width\": 1\n  },\n  connectedDash: {\n    stroke: \"rgb(200,200,200)\",\n    \"stroke-dasharray\": \". \"\n  },\n  textSecantBg: {\n    fill: \"#EEE\",\n    stroke: \"#DDD\"\n  },\n  highlightedEdgeCircle: {\n    fill: \"black\",\n    stroke: \"black\"\n  },\n  barChart: {\n    fill: \"#003300\",\n    stroke: \"#DDD\"\n  },\n  getStyle: function(requestStyle, fallbackStyle) {\n    if (this[requestStyle]) {\n      return this[requestStyle];\n    } else {\n      return this[fallbackStyle];\n    }\n  }\n};\nSmits.PhyloCanvas.Render.Parameters = {\n  jsOverride: 0,\n  Rectangular: {\n    bufferX: 200,\n    paddingX: 10,\n    paddingY: 20,\n    bufferInnerLabels: 10,\n    bufferOuterLabels: 5,\n    minHeightBetweenLeaves: 10,\n    alignPadding: 0,\n    alignRight: false,\n    showScaleBar: false\n  },\n  Circular: {\n    bufferRadius: 0.33,\n    bufferAngle: 20,\n    initStartAngle: 160,\n    innerCircleRadius: 0,\n    minHeightBetweenLeaves: 5,\n    bufferInnerLabels: 2,\n    bufferOuterLabels: 5\n  },\n  binaryCharts: [],\n  integratedBinaryCharts: [],\n  barCharts: [],\n  binaryChartBufferInner: 5,\n  binaryChartBufferSiblings: 0.01,\n  binaryChartThickness: 15,\n  binaryChartDisjointed: false,\n  barChartBufferInner: 3,\n  barChartHeight: 50,\n  barChartWidth: 0.5,\n  set: function(param, value, treeType) {\n    if (!this.jsOverride) {\n      if (treeType) {\n        if (treeType == \"circular\") {\n          this[\"Circular\"][param] = parseFloat(value);\n        } else if (treeType == \"rectangular\") {\n          this[\"Rectangular\"][param] = parseFloat(value);\n        }\n      } else {\n        this[param] = parseFloat(value);\n      }\n    }\n  }\n};\nSmits.PhyloCanvas.Render.Line = function() {\n  return function(x1, x2, y1, y2, r, g, b, params) {\n    this.type = \"line\";\n    this.attr = Smits.PhyloCanvas.Render.Style.line;\n    this.attr.stroke = [\"rgb(\", r, \",\", g, \",\", b, \")\"].join(\"\");\n    this.x1 = x1;\n    this.x2 = x2;\n    this.y1 = y1;\n    this.y2 = y2;\n    if (params) {\n      Smits.Common.apply(this, params);\n      if (params.attr)\n        this.attr = params.attr;\n    }\n  };\n}();\nSmits.PhyloCanvas.Render.Text = function() {\n  return function(x, y2, text, params) {\n    this.type = \"text\";\n    this.attr = Smits.PhyloCanvas.Render.Style.text;\n    this.x = x;\n    this.y = y2;\n    this.text = text;\n    if (params) {\n      Smits.Common.apply(this, params);\n      if (params.attr)\n        this.attr = params.attr;\n    }\n  };\n}();\nSmits.PhyloCanvas.Render.Path = function() {\n  var attr = Smits.PhyloCanvas.Render.Style.path;\n  return function(path, params) {\n    this.type = \"path\";\n    this.attr = Smits.PhyloCanvas.Render.Style.path;\n    this.path = path;\n    if (params) {\n      Smits.Common.apply(this, params);\n      if (params.attr)\n        this.attr = params.attr;\n    }\n  };\n}();\nSmits.PhyloCanvas.Render.Circle = function() {\n  return function(x, y2, radius, params) {\n    this.type = \"circle\";\n    this.x = x;\n    this.y = y2;\n    this.radius = radius;\n    if (params) {\n      Smits.Common.apply(this, params);\n      if (params.attr)\n        this.attr = params.attr;\n    }\n  };\n}();\nSmits.PhyloCanvas.Render.SVG = function() {\n  var divId, canvasSize;\n  return function(sDivId, canvasWidth, canvasHeight) {\n    divId = sDivId;\n    this.canvasSize = [canvasWidth, canvasHeight];\n    this.svg = Raphael(sDivId, this.canvasSize[0], this.canvasSize[1]);\n  };\n}();\nSmits.PhyloCanvas.Render.SVG.prototype = {\n  render: function() {\n    var instructs = this.phylogramObject.getDrawInstructs();\n    for (var i = 0; i < instructs.length; i++) {\n      if (instructs[i].type == \"line\") {\n        var line = this.svg.path([\"M\", instructs[i].x1, instructs[i].y1, \"L\", instructs[i].x2, instructs[i].y2]).attr(Smits.PhyloCanvas.Render.Style.line);\n      } else if (instructs[i].type == \"path\") {\n        var path = this.svg.path(instructs[i].path).attr(instructs[i].attr);\n      } else if (instructs[i].type == \"circle\") {\n        var path = this.svg.circle(instructs[i].x, instructs[i].y, instructs[i].radius).attr({\n          stroke: \"black\",\n          fill: \"black\"\n        });\n      } else {\n        var text = this.svg.text(instructs[i].x, instructs[i].y, instructs[i].text).attr(Smits.PhyloCanvas.Render.Style.text);\n        if (instructs[i].attr) {\n          text.attr(instructs[i].attr);\n        }\n        if (instructs[i].rotate) {\n          text.rotate(instructs[i].rotate);\n        }\n        var bbox = text.getBBox();\n        var hyp = Math.sqrt(bbox.height * bbox.height + bbox.width * bbox.width);\n      }\n    }\n  },\n  draw: function(instruct) {\n    var obj, param;\n    if (instruct.type == \"line\") {\n      obj = this.svg.path([\"M\", instruct.x1, instruct.y1, \"L\", instruct.x2, instruct.y2]).attr(Smits.PhyloCanvas.Render.Style.line);\n    } else if (instruct.type == \"path\") {\n      obj = this.svg.path(instruct.path).attr(instruct.attr);\n    } else if (instruct.type == \"circle\") {\n      obj = this.svg.circle(instruct.x, instruct.y, instruct.radius).attr({\n        stroke: \"black\",\n        fill: \"black\"\n      });\n    } else if (instruct.type == \"text\") {\n      obj = this.svg.text(instruct.x, instruct.y, instruct.text).attr(Smits.PhyloCanvas.Render.Style.text);\n      if (instruct.attr) {\n        obj.attr(instruct.attr);\n      }\n      if (instruct.rotate) {\n        obj.rotate(instruct.rotate);\n      }\n      var bbox = obj.getBBox();\n      param = Math.sqrt(bbox.height * bbox.height + bbox.width * bbox.width);\n    }\n    return [obj, param];\n  }\n};\nSmits.PhyloCanvas.Render.Phylogram = function() {\n  var svg, sParams = Smits.PhyloCanvas.Render.Parameters.Rectangular, canvasX, canvasY, scaleX, scaleY, maxBranch, minHeightBetweenLeaves, firstBranch = true, absoluteY = 0, maxLabelLength = 0, outerX, outerY, outerRadius, x1, x2, y1, y2, positionX, positionY, bufferX, paddingX, paddingY, labelsHold = [], textPadding = function(y3) {\n    return y3 + Math.round(y3 / 4);\n  }, rectLinePathArray = function(x12, y12, x22, y22) {\n    return [\"M\", x12, y12, \"L\", x22, y12, \"L\", x22, y22, \"L\", x12, y22, \"Z\"];\n  }, recursiveCalculateNodePositions = function(node, positionX2) {\n    if (node.len && firstBranch == false && node.children.length == 0) {\n      absoluteY = Smits.Common.roundFloat(absoluteY + scaleY, 4);\n    }\n    if (node.children.length > 0) {\n      var nodeCoords = [], x12, x22, y12, y22, r, g, b;\n      if (node.len) {\n        x12 = positionX2;\n        x22 = positionX2 = Smits.Common.roundFloat(positionX2 + scaleX * node.len, 4);\n        y12 = absoluteY + node.getMidbranchPosition(firstBranch) * scaleY;\n        y22 = y12;\n        r = node.red;\n        g = node.green;\n        b = node.blue;\n        svg.draw(new Smits.PhyloCanvas.Render.Line(x12, x22, y12, y22, r, g, b));\n      }\n      if (node.name) {\n        var attr = {};\n        attr = Smits.PhyloCanvas.Render.Style.getStyle(\"bootstrap\", \"text\");\n        if (node.font_color_hex) {\n          attr.fill = node.font_color_hex;\n        } else {\n          attr.fill = \"#000000\";\n        }\n        if (node.uri) {\n          attr.href = node.uri;\n        }\n        ;\n        if (node.description) {\n          attr.title = node.description;\n        }\n        ;\n        if (node.level == 0) {\n          var innerY2 = absoluteY + node.getMidbranchPosition(firstBranch) * scaleY;\n        } else {\n          var innerY2 = y22;\n        }\n        svg.draw(new Smits.PhyloCanvas.Render.Text((x22 || positionX2) + 5, innerY2, node.name, {\n          attr\n        }));\n      }\n      if (node.children && node.children.length) {\n        for (var i = 0; i < node.children.length; i++) {\n          var child = node.children[i];\n          nodeCoords.push(recursiveCalculateNodePositions(child, positionX2));\n        }\n      }\n      var flatNodeCoords = [];\n      for (var i = 0; i < nodeCoords.length; i++) {\n        if (nodeCoords[i][0])\n          flatNodeCoords.push(nodeCoords[i][0]);\n        if (nodeCoords[i][1])\n          flatNodeCoords.push(nodeCoords[i][1]);\n      }\n      var verticalY1 = Math.min.apply(null, flatNodeCoords);\n      var verticalY2 = Math.max.apply(null, flatNodeCoords);\n      var verticalmid = (verticalY1 + verticalY2) / 2;\n      var cred = \"\";\n      var cgreen = \"\";\n      var cblue = \"\";\n      var all_children_same_color = 0;\n      for (var i = 0; i < node.children.length; ++i) {\n        var this_child = node.children[i];\n        if (i == 0) {\n          cred = this_child.red;\n          cgreen = this_child.green;\n          cblue = this_child.blue;\n        } else if (cred == this_child.red && cgreen == this_child.green && cblue == this_child.blue) {\n          all_children_same_color = 1;\n        } else {\n          all_children_same_color = 0;\n          break;\n        }\n      }\n      if (all_children_same_color == 0) {\n        Smits.PhyloCanvas.Render.Style.line.stroke = \"black\";\n      } else {\n        r = node.children[0].red;\n        g = node.children[0].green;\n        b = node.children[0].blue;\n        Smits.PhyloCanvas.Render.Style.line.stroke = [\"rgb(\", r, \",\", g, \",\", b, \")\"].join(\"\");\n      }\n      if (node.children.length == 2) {\n        r = node.children[0].red;\n        g = node.children[0].green;\n        b = node.children[0].blue;\n        Smits.PhyloCanvas.Render.Style.line.stroke = [\"rgb(\", r, \",\", g, \",\", b, \")\"].join(\"\");\n        svg.draw(new Smits.PhyloCanvas.Render.Path([\n          \"M\",\n          positionX2 + 1e-4,\n          verticalY1,\n          \"L\",\n          positionX2,\n          verticalY1,\n          \"L\",\n          positionX2,\n          verticalmid\n        ], {attr: Smits.PhyloCanvas.Render.Style.line}));\n        r = node.children[1].red;\n        g = node.children[1].green;\n        b = node.children[1].blue;\n        Smits.PhyloCanvas.Render.Style.line.stroke = [\"rgb(\", r, \",\", g, \",\", b, \")\"].join(\"\");\n        svg.draw(new Smits.PhyloCanvas.Render.Path([\n          \"M\",\n          positionX2,\n          verticalmid,\n          \"L\",\n          positionX2,\n          verticalY2,\n          \"L\",\n          positionX2 + 1e-4,\n          verticalY2\n        ], {attr: Smits.PhyloCanvas.Render.Style.line}));\n      } else {\n        svg.draw(new Smits.PhyloCanvas.Render.Path([\n          \"M\",\n          positionX2 + 1e-4,\n          verticalY1,\n          \"L\",\n          positionX2,\n          verticalY1,\n          \"L\",\n          positionX2,\n          verticalY2,\n          \"L\",\n          positionX2 + 1e-4,\n          verticalY2\n        ], {attr: Smits.PhyloCanvas.Render.Style.line}));\n      }\n    } else {\n      x12 = positionX2;\n      x22 = Smits.Common.roundFloat(positionX2 + scaleX * node.len, 2);\n      y12 = absoluteY;\n      y22 = absoluteY;\n      r = node.red;\n      g = node.green;\n      b = node.blue;\n      node.y = absoluteY;\n      labelsHold.push(node);\n      svg.draw(new Smits.PhyloCanvas.Render.Line(x12, x22, y12, y22, r, g, b));\n      if (sParams.alignRight) {\n        svg.draw(new Smits.PhyloCanvas.Render.Path([\"M\", x22, y12, \"L\", sParams.alignPadding + maxBranch, y22], {attr: Smits.PhyloCanvas.Render.Style.connectedDash}));\n      }\n      if (node.name) {\n        var attr = {};\n        if (node.style) {\n          attr = Smits.PhyloCanvas.Render.Style.getStyle(node.style, \"text\");\n        }\n        if (node.font_color_hex) {\n          attr.fill = node.font_color_hex;\n        } else {\n          attr.fill = \"#000000\";\n        }\n        attr[\"text-anchor\"] = \"start\";\n        if (node.uri) {\n          attr.href = node.uri;\n        }\n        ;\n        if (node.description) {\n          attr.title = node.description;\n        }\n        ;\n        var draw = svg.draw(new Smits.PhyloCanvas.Render.Text(sParams.alignRight ? maxBranch + sParams.bufferInnerLabels + sParams.alignPadding : x22 + sParams.bufferInnerLabels, y22, node.name, {\n          attr\n        }));\n        maxLabelLength = Math.max(draw[1], maxLabelLength);\n        if (Smits.PhyloCanvas.Render.Parameters.mouseRollOver) {\n          Smits.Common.addRaphEventHandler(draw[0], \"mouseover\", Smits.PhyloCanvas.Render.Parameters.mouseRollOver, {svg, node, x: x22, y: y22, textEl: draw[0]});\n        }\n        if (Smits.PhyloCanvas.Render.Parameters.mouseRollOut) {\n          Smits.Common.addRaphEventHandler(draw[0], \"mouseout\", Smits.PhyloCanvas.Render.Parameters.mouseRollOut, {svg, node, x: x22, y: y22, textEl: draw[0]});\n        }\n        if (Smits.PhyloCanvas.Render.Parameters.onClickAction) {\n          Smits.Common.addRaphEventHandler(draw[0], \"click\", Smits.PhyloCanvas.Render.Parameters.onClickAction, {svg, node, x: x22, y: y22, textEl: draw[0]});\n        }\n      }\n      if (firstBranch) {\n        firstBranch = false;\n      }\n    }\n    return [y12, y22];\n  }, drawScaleBar = function() {\n    y = absoluteY + scaleY;\n    x1 = 0;\n    x2 = sParams.showScaleBar * scaleX;\n    svg.draw(new Smits.PhyloCanvas.Render.Line(x1, x2, y, y));\n    svg.draw(new Smits.PhyloCanvas.Render.Text((x1 + x2) / 2, y - 8, sParams.showScaleBar));\n  }, renderBinaryChart = function(x, groupName, params) {\n    var bufferInner = (params && params.bufferInner ? params.bufferInner : 0) | Smits.PhyloCanvas.Render.Parameters.binaryChartBufferInner, bufferSiblings = (params && params.bufferSiblings ? params.bufferSiblings * scaleY : 0) | (Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings < 1 ? scaleY * Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings : Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings), thickness = (params && params.thickness ? params.thickness : 0) | Smits.PhyloCanvas.Render.Parameters.binaryChartThickness, beginY;\n    for (var i = 0; i < labelsHold.length; i++) {\n      var node = labelsHold[i];\n      svg.draw(new Smits.PhyloCanvas.Render.Path(rectLinePathArray(x + bufferInner, node.y - scaleY / 2 + bufferSiblings / 2, x + bufferInner + thickness, node.y + scaleY / 2 - bufferSiblings / 2), {attr: Smits.PhyloCanvas.Render.Style.getStyle(node.chart[groupName], \"textSecantBg\")}));\n    }\n    return x + bufferInner + thickness;\n  }, renderBarChart = function(x, groupName, params) {\n    var allValues = [], maxValue, bufferInner = params && params.bufferInner ? params.bufferInner : 0 | Smits.PhyloCanvas.Render.Parameters.barChartBufferInner, height = params && params.height ? params.height : 0 | Smits.PhyloCanvas.Render.Parameters.barChartHeight, width = params && params.width ? params.width < 1 ? scaleY * params.width : params.width : 0 | (Smits.PhyloCanvas.Render.Parameters.barChartWidth < 1 ? scaleY * Smits.PhyloCanvas.Render.Parameters.barChartWidth : Smits.PhyloCanvas.Render.Parameters.barChartWidth), scaleHeight = 0;\n    for (var i = 0; i < labelsHold.length; i++) {\n      allValues.push(labelsHold[i].chart[groupName]);\n    }\n    maxValue = Math.max.apply(null, allValues);\n    scaleHeight = Smits.Common.roundFloat(height / maxValue, 4);\n    for (var i = 0; i < labelsHold.length; i++) {\n      var node = labelsHold[i];\n      svg.draw(new Smits.PhyloCanvas.Render.Path(rectLinePathArray(x + bufferInner, node.y - width / 2, x + bufferInner + scaleHeight * node.chart[groupName], node.y + width / 2), {attr: Smits.PhyloCanvas.Render.Style.getStyle(node.chart[groupName], \"barChart\")}));\n    }\n    return x + bufferInner + height;\n  };\n  return function(sSvg, dataObject) {\n    this.getCanvasSize = function() {\n      return [canvasX, canvasY];\n    };\n    this.getRoot = function() {\n      return dataObject.getRoot();\n    };\n    if (dataObject.getValidate()) {\n      svg.draw(0, 0, dataObject.getValidate());\n    }\n    firstBranch = true;\n    svg = sSvg;\n    var node = dataObject.getRoot();\n    var mNewickLen = dataObject.getNewickLen();\n    canvasX = svg.canvasSize[0];\n    canvasY = svg.canvasSize[1];\n    bufferX = sParams.bufferX;\n    paddingX = sParams.paddingX;\n    paddingY = sParams.paddingY;\n    minHeightBetweenLeaves = sParams.minHeightBetweenLeaves;\n    absoluteY = paddingY;\n    scaleX = Math.round((canvasX - bufferX - paddingX * 2) / mNewickLen);\n    scaleY = Math.round((canvasY - paddingY * 2) / (sParams.showScaleBar ? node.getCountAllChildren() : node.getCountAllChildren() - 1));\n    if (scaleY < minHeightBetweenLeaves) {\n      scaleY = minHeightBetweenLeaves;\n    }\n    maxBranch = Math.round(canvasX - bufferX - paddingX * 2);\n    if (Smits.PhyloCanvas.Render.Parameters.binaryCharts.length || Smits.PhyloCanvas.Render.Parameters.barCharts.length) {\n      sParams.alignRight = true;\n    }\n    recursiveCalculateNodePositions(node, paddingX);\n    if (sParams.showScaleBar) {\n      drawScaleBar();\n    }\n    outerX = maxBranch + maxLabelLength + sParams.bufferInnerLabels;\n    if (Smits.PhyloCanvas.Render.Parameters.binaryCharts.length) {\n      var binaryCharts = Smits.PhyloCanvas.Render.Parameters.binaryCharts;\n      for (var i in binaryCharts) {\n        outerX = renderBinaryChart(outerX, binaryCharts[i].chart, binaryCharts[i]);\n      }\n    }\n    if (Smits.PhyloCanvas.Render.Parameters.barCharts.length) {\n      var barCharts = Smits.PhyloCanvas.Render.Parameters.barCharts;\n      for (var i in barCharts) {\n        outerRadius = renderBarChart(outerX, barCharts[i].chart, barCharts[i]);\n      }\n    }\n    labelsHold = [];\n    if (typeof bgLabelsHold !== \"undefined\")\n      bgLabelsHold = [];\n  };\n}();\nSmits.PhyloCanvas.Render.Phylogram.prototype = {};\nSmits.PhyloCanvas.Render.CircularPhylogram = function() {\n  var svg, sParams = Smits.PhyloCanvas.Render.Parameters.Circular, canvasX, canvasY, canvasMinEdge, scaleRadius, scaleAngle, minHeightBetweenLeaves, innerCircleRadius, firstBranch = true, absoluteY = 0, cx, cy, maxBranch, labelsHold = [], bgLabelsHold2 = [], bufferRadius, bufferAngle, outerRadius, maxLabelLength = 0, initStartAngle, rad = Math.PI / 180;\n  function secPosition(r, deg) {\n    deg += initStartAngle;\n    return [\n      Smits.Common.roundFloat(cx + r * Math.sin(deg * rad), 4),\n      Smits.Common.roundFloat(cy + r * Math.cos(deg * rad), 4)\n    ];\n  }\n  ;\n  function rotateTextByY(yCoord) {\n    var rotateAngle = normalizeAngle(90 - yCoord - initStartAngle);\n    if (rotateAngle > 90 && rotateAngle < 270) {\n      rotateAngle += 180;\n      var alignment = \"end\";\n    } else {\n      var alignment = \"start\";\n    }\n    return [rotateAngle, alignment];\n  }\n  ;\n  function secant(r, startAngle, endAngle, params) {\n    var startPos = secPosition(r, startAngle);\n    var endPos = secPosition(r, endAngle);\n    var arr = [], n, inv = 0;\n    if (Math.abs(normalizeAngle(endAngle - startAngle)) > 180) {\n      n = 1;\n    } else {\n      n = -1;\n    }\n    if (params && params.invertSecant) {\n      n *= -1;\n      inv = 1;\n    }\n    if (params && params.noMove) {\n    } else {\n      arr.push(\"M\");\n    }\n    arr.push(startPos[0], startPos[1], \"A\", r, r, 0, n < 1 ? 0 : 1, inv, endPos[0], endPos[1]);\n    return arr;\n  }\n  ;\n  function secLinePath(deg, x1, x2, params) {\n    var arr = [];\n    var startPos = secPosition(x1, deg);\n    var endPos = secPosition(x2, deg);\n    if (params && params.noMove) {\n    } else {\n      arr.push(\"M\");\n    }\n    arr.push(startPos[0], startPos[1], \"L\", endPos[0], endPos[1]);\n    return arr;\n  }\n  ;\n  function normalizeAngle(ang) {\n    while (ang > 360 || ang < 0) {\n      if (ang > 360) {\n        ang -= 360;\n      } else if (ang < 0) {\n        ang += 360;\n      }\n    }\n    return ang;\n  }\n  ;\n  function sector(r1, r2, y1, y2) {\n    if (!r2 && r1.length > 1) {\n      var y2 = r1[3];\n      var y1 = r1[2];\n      var r2 = r1[1];\n      var r1 = r1[0];\n    }\n    var arr = array_merge(\"M\", secant(r1, y1, y2, {noMove: 1, invertSecant: 0}), \"L\", secant(r2, y2, y1, {noMove: 1, invertSecant: 1}), \"Z\");\n    return arr;\n  }\n  ;\n  function recursiveCalculateNodePositions(node, positionX) {\n    positionX = positionX;\n    if (node.len) {\n      if (firstBranch) {\n        absoluteY = bufferAngle || 1;\n      } else {\n        if (node.children.length == 0)\n          absoluteY = Smits.Common.roundFloat(absoluteY + scaleAngle, 4);\n      }\n    }\n    if (node.children.length > 0) {\n      var nodeCoords = [], x1, x2, y1, y2;\n      x1 = positionX;\n      x2 = positionX += Smits.Common.roundFloat(scaleRadius * node.len, 4);\n      if (node.name) {\n      }\n      if (node.children && node.children.length) {\n        for (var i = 0; i < node.children.length; i++) {\n          var child = node.children[i];\n          var y3 = recursiveCalculateNodePositions(child, positionX);\n          if (y3 > 0)\n            nodeCoords.push(y3);\n        }\n      }\n      var minAngle = Smits.Common.roundFloat(Math.min.apply(null, nodeCoords), 4);\n      var maxAngle = Smits.Common.roundFloat(Math.max.apply(null, nodeCoords), 4);\n      if (node.level != 0) {\n        svg.draw(new Smits.PhyloCanvas.Render.Path(array_merge(\"M\", secPosition(positionX + 0.01, minAngle), \"L\", secant(positionX, minAngle, maxAngle, {noMove: true}), \"L\", secPosition(positionX + 0.01, maxAngle))));\n      }\n      if (node.len) {\n        y1 = Smits.Common.roundFloat(minAngle + (maxAngle - minAngle) / 2, 4);\n        svg.draw(new Smits.PhyloCanvas.Render.Path(secLinePath(y1, x1, x2)));\n      }\n    } else {\n      node.y = absoluteY;\n      labelsHold.push(node);\n      x1 = positionX;\n      x2 = positionX = Smits.Common.roundFloat(positionX + scaleRadius * node.len);\n      y1 = absoluteY;\n      svg.draw(new Smits.PhyloCanvas.Render.Path(secLinePath(y1, x1, x2)));\n      svg.draw(new Smits.PhyloCanvas.Render.Path(secLinePath(y1, x2, maxBranch), {attr: Smits.PhyloCanvas.Render.Style.connectedDash}));\n      if (node.name) {\n        var pos = secPosition(maxBranch + sParams.bufferInnerLabels, y1);\n        var rotateParam = rotateTextByY(y1);\n        var rotateAngle = rotateParam[0];\n        var alignment = rotateParam[1];\n        var attr = {};\n        if (node.style) {\n          Smits.Common.apply(attr, Smits.PhyloCanvas.Render.Style.getStyle(node.style, \"text\"));\n        }\n        if (node.font_color_hex) {\n          attr.fill = node.font_color_hex;\n        } else {\n          attr.fill = \"#000000\";\n        }\n        attr[\"text-anchor\"] = alignment;\n        if (node.uri) {\n          attr.href = node.uri;\n        }\n        ;\n        if (node.description) {\n          attr.title = node.description;\n        }\n        ;\n        var draw = svg.draw(new Smits.PhyloCanvas.Render.Text(pos[0], pos[1], node.name, {\n          attr,\n          rotate: [rotateAngle, pos[0], pos[1]]\n        }));\n        if (node.bgStyle) {\n          bgLabelsHold2.push([node.bgStyle, y1]);\n        }\n        var pos = secPosition(x2, y1);\n        if (Smits.PhyloCanvas.Render.Parameters.mouseRollOver) {\n          Smits.Common.addRaphEventHandler(draw[0], \"mouseover\", Smits.PhyloCanvas.Render.Parameters.mouseRollOver, {svg, node, x: pos[0], y: pos[1], textEl: draw[0]});\n        }\n        if (Smits.PhyloCanvas.Render.Parameters.mouseRollOut) {\n          Smits.Common.addRaphEventHandler(draw[0], \"mouseout\", Smits.PhyloCanvas.Render.Parameters.mouseRollOut, {svg, node, x: pos[0], y: pos[1], textEl: draw[0]});\n        }\n        if (Smits.PhyloCanvas.Render.Parameters.onClickAction) {\n          Smits.Common.addRaphEventHandler(draw[0], \"click\", Smits.PhyloCanvas.Render.Parameters.onClickAction, {svg, node, x: pos[0], y: pos[1], textEl: draw[0]});\n        }\n        maxLabelLength = Math.max(draw[1], maxLabelLength);\n      }\n    }\n    if (firstBranch) {\n      firstBranch = false;\n    }\n    return y1;\n  }\n  ;\n  function array_merge(arr) {\n    var merged = arr;\n    for (var i = 1; i < arguments.length; i++) {\n      merged = merged.concat(arguments[i]);\n    }\n    return merged;\n  }\n  ;\n  function renderBackground() {\n    var arr = [];\n    if (bgLabelsHold2.length > 0) {\n      if (Smits.PhyloCanvas.Render.Style[\"jsphylosvgGradientList\"]) {\n        for (var i = 0; i < Smits.PhyloCanvas.Render.Style[\"jsphylosvgGradientList\"].length; i++) {\n          var gradientName = Smits.PhyloCanvas.Render.Style[\"jsphylosvgGradientList\"][i];\n          var radialEl = Smits.Common.createGradientEl(gradientName, Smits.PhyloCanvas.Render.Style[gradientName], [cx, cy, maxBranch + maxLabelLength + sParams.bufferOuterLabels]);\n          svg.svg.defs.appendChild(radialEl);\n        }\n      }\n      for (var i = 0; i < bgLabelsHold2.length; i++) {\n        if (i != bgLabelsHold2.length - 1 && bgLabelsHold2[i][0] == bgLabelsHold2[i + 1][0]) {\n          bgLabelsHold2[i + 1][2] = bgLabelsHold2[i][2] ? bgLabelsHold2[i][2] : bgLabelsHold2[i][1];\n          continue;\n        }\n        var arr = sector(maxBranch, maxBranch + maxLabelLength + sParams.bufferOuterLabels, bgLabelsHold2[i][2] ? bgLabelsHold2[i][2] - scaleAngle / 2 : bgLabelsHold2[i][1] - scaleAngle / 2, bgLabelsHold2[i][1] + scaleAngle / 2);\n        var attr = Smits.PhyloCanvas.Render.Style.getStyle(bgLabelsHold2[i][0], \"textSecantBg\");\n        var bgObj = svg.draw(new Smits.PhyloCanvas.Render.Path(arr, {attr: attr.type ? {} : attr}));\n        if (attr.type && attr.type == \"radialGradient\") {\n          bgObj[0].node.setAttribute(\"fill\", \"url(#\" + attr.name + \")\");\n        }\n        ;\n        if (attr.type && attr.type == \"radialGradient\") {\n          bgObj[0].node.setAttribute(\"stroke\", \"none\");\n        }\n        ;\n        bgObj[0].toBack();\n      }\n    }\n    var arr = sector(maxBranch, maxBranch + maxLabelLength + sParams.bufferOuterLabels, (bufferAngle || 1) - scaleAngle / 2, 360 - scaleAngle / 2);\n    var bgObj = svg.draw(new Smits.PhyloCanvas.Render.Path(arr, {attr: Smits.PhyloCanvas.Render.Style.textSecantBg}));\n    bgObj[0].toBack();\n    return maxBranch + maxLabelLength + sParams.bufferOuterLabels;\n  }\n  ;\n  function renderBinaryChart(outerRadius2, groupName, params) {\n    var bufferInner = params && params.bufferInner ? parseFloat(params.bufferInner) : Smits.PhyloCanvas.Render.Parameters.binaryChartBufferInner, bufferSiblings = (params && params.bufferSiblings ? params.bufferSiblings * scaleAngle : 0) | (Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings < 1 ? scaleAngle * Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings : Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings), thickness = params && params.thickness ? parseFloat(params.thickness) : Smits.PhyloCanvas.Render.Parameters.binaryChartThickness, disjointed = (params && params.disjointed ? params.disjointed : false) | Smits.PhyloCanvas.Render.Parameters.binaryChartDisjointed, isInternal = params && params.isInternal ? params.isInternal : false, isFirst = true, beginY;\n    for (var i = 0; i < labelsHold.length; i++) {\n      var node = labelsHold[i];\n      if ((!labelsHold[i + 1] || node.chart[groupName] !== labelsHold[i + 1].chart[groupName] || disjointed) && node.chart[groupName] != \"none\") {\n        var attr = Smits.PhyloCanvas.Render.Style.getStyle(node.chart[groupName], \"textSecantBg\");\n        if (isInternal) {\n          var sectorCoords = [\n            maxBranch - bufferInner - thickness,\n            maxBranch - bufferInner,\n            (beginY ? beginY : node.y) - scaleAngle / 2 + (isFirst && !disjointed ? 0 : bufferSiblings / 2),\n            node.y + scaleAngle / 2 - (i == labelsHold.length - 1 && !disjointed ? 0 : bufferSiblings / 2)\n          ];\n        } else {\n          var sectorCoords = [\n            outerRadius2 + bufferInner,\n            outerRadius2 + bufferInner + thickness,\n            (beginY ? beginY : node.y) - scaleAngle / 2 + (isFirst && !disjointed ? 0 : bufferSiblings / 2),\n            node.y + scaleAngle / 2 - (i == labelsHold.length - 1 && !disjointed ? 0 : bufferSiblings / 2)\n          ];\n        }\n        if (attr.label) {\n          var textAttr = Smits.PhyloCanvas.Render.Style.getStyle(attr.labelStyle, \"text\");\n          var pos = secPosition((sectorCoords[0] + sectorCoords[1]) / 2, (sectorCoords[2] + sectorCoords[3]) / 2);\n          var rotateParam = rotateTextByY((sectorCoords[2] + sectorCoords[3]) / 2);\n          var rotateLabelBy = normalizeAngle(rotateParam[0] + (textAttr[\"rotate\"] ? parseFloat(textAttr[\"rotate\"]) : 0));\n          var rotateAngle = normalizeAngle(90 - (sectorCoords[2] + sectorCoords[3]) / 2 - initStartAngle);\n          if (rotateAngle > 90 && rotateAngle < 270) {\n            rotateLabelBy += 180;\n          }\n          if (!textAttr[\"text-anchor\"]) {\n            textAttr[\"text-anchor\"] = \"middle\";\n          }\n          if (node.font_color_hex) {\n            attr.fill = node.font_color_hex;\n          } else {\n            attr.fill = \"#000000\";\n          }\n          var binText = svg.draw(new Smits.PhyloCanvas.Render.Text(pos[0], pos[1], attr.label, {\n            attr: textAttr,\n            rotate: rotateLabelBy\n          }));\n          binText[0].toBack();\n        }\n        if (attr.borderStyle) {\n          var borderAttr = Smits.PhyloCanvas.Render.Style.getStyle(attr.borderStyle, \"textSecantBg\");\n          var borderSectorCoords = [\n            maxBranch,\n            borderAttr.fullsize ? sectorCoords[1] : sectorCoords[0],\n            sectorCoords[2],\n            sectorCoords[3]\n          ];\n          var binBorder = svg.draw(new Smits.PhyloCanvas.Render.Path(sector(borderSectorCoords), {attr: borderAttr}));\n          binBorder[0].toBack();\n        }\n        var binObj = svg.draw(new Smits.PhyloCanvas.Render.Path(sector(sectorCoords), {attr}));\n        binObj[0].toBack();\n        beginY = 0;\n        isFirst = false;\n      } else {\n        if (!beginY) {\n          beginY = node.y;\n        }\n        if (node.chart[groupName] == \"none\") {\n          beginY = 0;\n        }\n      }\n      isFirst = false;\n    }\n    return isInternal ? outerRadius2 : outerRadius2 + bufferInner + thickness;\n  }\n  ;\n  function renderBarChart(outerRadius2, groupName, params) {\n    var allValues = [], maxValue, bufferInner = params && params.bufferInner ? parseFloat(params.bufferInner) : Smits.PhyloCanvas.Render.Parameters.barChartBufferInner, height = params && params.height ? parseFloat(params.height) : Smits.PhyloCanvas.Render.Parameters.barChartHeight ? Smits.PhyloCanvas.Render.Parameters.barChartHeight : 0, width = params && params.width ? parseFloat(params.width) < 1 ? scaleAngle * parseFloat(params.width) : parseFloat(params.width) : 0 | (Smits.PhyloCanvas.Render.Parameters.barChartWidth < 1 ? scaleAngle * Smits.PhyloCanvas.Render.Parameters.barChartWidth : Smits.PhyloCanvas.Render.Parameters.barChartWidth), scaleHeight = 0;\n    for (var i = 0; i < labelsHold.length; i++) {\n      allValues.push(labelsHold[i].chart[groupName]);\n    }\n    maxValue = Math.max.apply(null, allValues);\n    scaleHeight = Smits.Common.roundFloat(height / maxValue, 4);\n    for (var i = 0; i < labelsHold.length; i++) {\n      var node = labelsHold[i];\n      if (node.chart[groupName] > 0) {\n        svg.draw(new Smits.PhyloCanvas.Render.Path(sector(outerRadius2 + bufferInner, outerRadius2 + bufferInner + scaleHeight * node.chart[groupName], node.y - width / 2, node.y + width / 2), {attr: Smits.PhyloCanvas.Render.Style.getStyle(node.chart[groupName], \"barChart\")}));\n      }\n    }\n    return outerRadius2 + bufferInner + height;\n  }\n  ;\n  return function(sSvg, dataObject, bufferRadius2) {\n    this.getCanvasSize = function() {\n      return [canvasX, canvasY];\n    };\n    this.getRoot = function() {\n      return dataObject.getRoot();\n    };\n    if (dataObject.getValidate()) {\n      sSvg.draw({type: \"text\", x: 0, y: sSvg.canvasSize[1] / 3, text: dataObject.getValidate()});\n      return;\n    }\n    svg = sSvg;\n    var node = dataObject.getRoot();\n    var mNewickLen = dataObject.getNewickLen();\n    canvasX = svg.canvasSize[0];\n    canvasY = svg.canvasSize[1];\n    cx = canvasX / 2;\n    cy = canvasY / 2;\n    canvasMinEdge = Math.min.apply(null, [canvasX, canvasY]);\n    bufferRadius2 = sParams.bufferRadius > 1 ? sParams.bufferRadius : Smits.Common.roundFloat(canvasMinEdge * sParams.bufferRadius, 4);\n    bufferAngle = sParams.bufferAngle;\n    innerCircleRadius = sParams.innerCircleRadius;\n    minHeightBetweenLeaves = sParams.minHeightBetweenLeaves;\n    initStartAngle = sParams.initStartAngle;\n    maxBranch = Math.round((canvasMinEdge - bufferRadius2 - innerCircleRadius) / 2);\n    scaleRadius = (maxBranch - innerCircleRadius) / mNewickLen;\n    scaleAngle = Smits.Common.roundFloat((360 - bufferAngle) / node.getCountAllChildren(), 4);\n    recursiveCalculateNodePositions(node, innerCircleRadius);\n    outerRadius = maxBranch + maxLabelLength + sParams.bufferOuterLabels;\n    if (Smits.PhyloCanvas.Render.Parameters.integratedBinaryCharts.length) {\n      var integratedBinaryCharts = Smits.PhyloCanvas.Render.Parameters.integratedBinaryCharts;\n      for (var i in integratedBinaryCharts) {\n        var bufferInner = integratedBinaryCharts[i].bufferInner ? integratedBinaryCharts[i].bufferInner : Smits.PhyloCanvas.Render.Parameters.binaryChartBufferInner;\n        var thickness = integratedBinaryCharts[i].thickness ? integratedBinaryCharts[i].thickness : Smits.PhyloCanvas.Render.Parameters.binaryChartThickness;\n        outerRadius = renderBinaryChart(outerRadius - thickness - bufferInner, integratedBinaryCharts[i].chart, integratedBinaryCharts[i]);\n      }\n    }\n    outerRadius = renderBackground();\n    if (Smits.PhyloCanvas.Render.Parameters.binaryCharts.length) {\n      var binaryCharts = Smits.PhyloCanvas.Render.Parameters.binaryCharts;\n      for (var i in binaryCharts) {\n        outerRadius = renderBinaryChart(outerRadius, binaryCharts[i].chart, binaryCharts[i]);\n      }\n    }\n    if (Smits.PhyloCanvas.Render.Parameters.barCharts.length) {\n      var barCharts = Smits.PhyloCanvas.Render.Parameters.barCharts;\n      for (var i in barCharts) {\n        outerRadius = renderBarChart(outerRadius, barCharts[i].chart, barCharts[i]);\n      }\n    }\n    labelsHold = [];\n    bgLabelsHold2 = [];\n  };\n}();\nSmits.PhyloCanvas.Render.CircularPhylogram.prototype = {};\nvar XMLObjectifier = function() {\n  var _clone = function(obj) {\n    if (!!obj && typeof obj === \"object\") {\n      let F = function() {\n      };\n      F.prototype = obj;\n      return new F();\n    }\n  };\n  var isNumeric = function(s) {\n    var testStr = \"\";\n    if (!!s && typeof s === \"string\") {\n      testStr = s;\n    }\n    var pattern = /^((-)?([0-9]*)((\\.{0,1})([0-9]+))?$)/;\n    return pattern.test(testStr);\n  };\n  var _self = {\n    xmlToJSON: function(xdoc) {\n      try {\n        let trim = function(s) {\n          return s.replace(/^\\s+|\\s+$/gm, \"\");\n        }, formatName = function(name) {\n          var regEx = /-/g;\n          var tName = String(name).replace(regEx, \"_\");\n          return tName;\n        }, setAttributes = function(obj, node) {\n          if (node.attributes.length > 0) {\n            var a = node.attributes.length - 1;\n            var attName;\n            obj._attributes = [];\n            do {\n              attName = String(formatName(node.attributes[a].name));\n              obj._attributes.push(attName);\n              obj[attName] = trim(node.attributes[a].value);\n            } while (a--);\n          }\n        }, setHelpers = function(grpObj) {\n          grpObj.getNodeByAttribute = function(attr, obj) {\n            if (this.length > 0) {\n              var cNode;\n              var maxLen = this.length - 1;\n              try {\n                do {\n                  cNode = this[maxLen];\n                  if (cNode[attr] == obj) {\n                    return cNode;\n                  }\n                } while (maxLen--);\n              } catch (e) {\n                return false;\n              }\n              return false;\n            }\n          };\n          grpObj.contains = function(attr, obj) {\n            if (this.length > 0) {\n              var maxLen = this.length - 1;\n              try {\n                do {\n                  if (this[maxLen][attr] == obj) {\n                    return true;\n                  }\n                } while (maxLen--);\n              } catch (e) {\n                return false;\n              }\n              return false;\n            }\n          };\n          grpObj.indexOf = function(attr, obj) {\n            var pos = -1;\n            if (this.length > 0) {\n              var maxLen = this.length - 1;\n              try {\n                do {\n                  if (this[maxLen][attr] == obj) {\n                    pos = maxLen;\n                  }\n                } while (maxLen--);\n              } catch (e) {\n                return -1;\n              }\n              return pos;\n            }\n          };\n          grpObj.SortByAttribute = function(col, dir) {\n            if (this.length) {\n              let getValue = function(pair, idx) {\n                var out = pair[idx];\n                out = isNumeric(out) ? parseFloat(out) : out;\n                return out;\n              }, sortFn = function(a, b) {\n                var res = 0;\n                var tA, tB;\n                tA = getValue(a, col);\n                tB = getValue(b, col);\n                if (tA < tB) {\n                  res = -1;\n                } else if (tB < tA) {\n                  res = 1;\n                }\n                if (dir) {\n                  res = dir.toUpperCase() == \"DESC\" ? 0 - res : res;\n                }\n                return res;\n              };\n              this.sort(sortFn);\n            }\n          };\n          grpObj.SortByValue = function(dir) {\n            if (this.length) {\n              let getValue = function(pair) {\n                var out = pair.Text;\n                out = isNumeric(out) ? parseFloat(out) : out;\n                return out;\n              }, sortFn = function(a, b) {\n                var res = 0;\n                var tA, tB;\n                tA = getValue(a);\n                tB = getValue(b);\n                if (tA < tB) {\n                  res = -1;\n                } else if (tB < tA) {\n                  res = 1;\n                }\n                if (dir) {\n                  res = dir.toUpperCase() == \"DESC\" ? 0 - res : res;\n                }\n                return res;\n              };\n              this.sort(sortFn);\n            }\n          };\n          grpObj.SortByNode = function(node, dir) {\n            if (this.length) {\n              let getValue = function(pair, node2) {\n                var out = pair[node2][0].Text;\n                out = isNumeric(out) ? parseFloat(out) : out;\n                return out;\n              }, sortFn = function(a, b) {\n                var res = 0;\n                var tA, tB;\n                tA = getValue(a, node);\n                tB = getValue(b, node);\n                if (tA < tB) {\n                  res = -1;\n                } else if (tB < tA) {\n                  res = 1;\n                }\n                if (dir) {\n                  res = dir.toUpperCase() == \"DESC\" ? 0 - res : res;\n                }\n                return res;\n              };\n              this.sort(sortFn);\n            }\n          };\n        }, setObjects = function(obj, node) {\n          var elemName;\n          var cnode;\n          var tObj;\n          var cName = \"\";\n          if (!node) {\n            return null;\n          }\n          if (node.attributes.length > 0) {\n            setAttributes(obj, node);\n          }\n          obj.Text = \"\";\n          if (node.hasChildNodes()) {\n            var nodeCount = node.childNodes.length - 1;\n            var n = 0;\n            do {\n              cnode = node.childNodes[n];\n              switch (cnode.nodeType) {\n                case 1:\n                  obj._children = [];\n                  elemName = cnode.localName ? cnode.localName : cnode.baseName;\n                  elemName = formatName(elemName);\n                  if (cName != elemName) {\n                    obj._children.push(elemName);\n                  }\n                  if (!obj[elemName]) {\n                    obj[elemName] = [];\n                  }\n                  tObj = {};\n                  obj[elemName].push(tObj);\n                  if (cnode.attributes.length > 0) {\n                    setAttributes(tObj, cnode);\n                  }\n                  if (!obj[elemName].contains) {\n                    setHelpers(obj[elemName]);\n                  }\n                  cName = elemName;\n                  if (cnode.hasChildNodes()) {\n                    setObjects(tObj, cnode);\n                  }\n                  break;\n                case 3:\n                  obj.Text += trim(cnode.nodeValue);\n                  break;\n                case 4:\n                  obj.Text += cnode.text ? trim(cnode.text) : trim(cnode.nodeValue);\n                  break;\n              }\n            } while (n++ < nodeCount);\n          }\n        };\n        if (!xdoc) {\n          return null;\n        }\n        var tmpObj = {};\n        tmpObj.typeOf = \"JSXBObject\";\n        var xroot = xdoc.nodeType == 9 ? xdoc.documentElement : xdoc;\n        tmpObj.RootName = xroot.nodeName || \"\";\n        if (xdoc.nodeType == 3 || xdoc.nodeType == 4) {\n          return xdoc.nodeValue;\n        }\n        var _node = function() {\n          var _self2 = {\n            activate: function() {\n              var nodes = [];\n              if (!!nodes) {\n                nodes.getNodesByAttribute = function(attr, obj) {\n                  if (!!nodes && nodes.length > 0) {\n                    var out = [];\n                    var cNode;\n                    var maxLen = nodes.length - 1;\n                    try {\n                      do {\n                        cNode = nodes[maxLen];\n                        if (cNode[attr] === obj) {\n                          out.push(cNode);\n                        }\n                      } while (maxLen--);\n                      out.reverse();\n                      return out;\n                    } catch (e) {\n                      return null;\n                    }\n                    return null;\n                  }\n                };\n                nodes.getNodeByAttribute = function(attr, obj) {\n                  if (!!nodes && nodes.length > 0) {\n                    var cNode;\n                    var maxLen = nodes.length - 1;\n                    try {\n                      do {\n                        cNode = nodes[maxLen];\n                        if (cNode[attr] === obj) {\n                          return cNode;\n                        }\n                      } while (maxLen--);\n                    } catch (e) {\n                      return null;\n                    }\n                    return null;\n                  }\n                };\n                nodes.getNodesByValue = function(obj) {\n                  if (!!nodes && nodes.length > 0) {\n                    var out = [];\n                    var cNode;\n                    var maxLen = nodes.length - 1;\n                    try {\n                      do {\n                        cNode = nodes[maxLen];\n                        if (!!cNode.Text && cNode.Text === obj) {\n                          out.push(cNode);\n                        }\n                      } while (maxLen--);\n                      return out;\n                    } catch (e) {\n                      return null;\n                    }\n                    return null;\n                  }\n                };\n                nodes.contains = function(attr, obj) {\n                  if (!!nodes && nodes.length > 0) {\n                    var maxLen = nodes.length - 1;\n                    try {\n                      do {\n                        if (nodes[maxLen][attr] === obj) {\n                          return true;\n                        }\n                      } while (maxLen--);\n                    } catch (e) {\n                      return false;\n                    }\n                    return false;\n                  }\n                };\n                nodes.indexOf = function(attr, obj) {\n                  var pos = -1;\n                  if (!!nodes && nodes.length > 0) {\n                    var maxLen = nodes.length - 1;\n                    try {\n                      do {\n                        if (nodes[maxLen][attr] === obj) {\n                          pos = maxLen;\n                        }\n                      } while (maxLen--);\n                    } catch (e) {\n                      return -1;\n                    }\n                    return pos;\n                  }\n                };\n                nodes.SortByAttribute = function(col, dir) {\n                  if (!!nodes && nodes.length > 0) {\n                    let getValue = function(pair, idx) {\n                      var out = pair[idx];\n                      out = bam.validation.isNumeric(out) ? parseFloat(out) : out;\n                      return out;\n                    }, sortFn = function(a, b) {\n                      var tA, tB;\n                      tA = getValue(a, col);\n                      tB = getValue(b, col);\n                      var res = tA < tB ? -1 : tB < tA ? 1 : 0;\n                      if (!!dir) {\n                        res = dir.toUpperCase() === \"DESC\" ? 0 - res : res;\n                      }\n                      return res;\n                    };\n                    nodes.sort(sortFn);\n                  }\n                };\n                nodes.SortByValue = function(dir) {\n                  if (!!nodes && nodes.length > 0) {\n                    let getValue = function(pair) {\n                      var out = pair.Text;\n                      out = bam.validation.isNumeric(out) ? parseFloat(out) : out;\n                      return out;\n                    }, sortFn = function(a, b) {\n                      var tA, tB;\n                      tA = getValue(a);\n                      tB = getValue(b);\n                      var res = tA < tB ? -1 : tB < tA ? 1 : 0;\n                      if (!!dir) {\n                        res = dir.toUpperCase() === \"DESC\" ? 0 - res : res;\n                      }\n                      return res;\n                    };\n                    nodes.sort(sortFn);\n                  }\n                };\n                nodes.SortByNode = function(node, dir) {\n                  if (!!nodes && nodes.length > 0) {\n                    let getValue = function(pair, node2) {\n                      var out = pair[node2][0].Text;\n                      out = bam.validation.isNumeric(out) ? parseFloat(out) : out;\n                      return out;\n                    }, sortFn = function(a, b) {\n                      var tA, tB;\n                      tA = getValue(a, node);\n                      tB = getValue(b, node);\n                      var res = tA < tB ? -1 : tB < tA ? 1 : 0;\n                      if (!!dir) {\n                        res = dir.toUpperCase() === \"DESC\" ? 0 - res : res;\n                      }\n                      return res;\n                    };\n                    nodes.sort(sortFn);\n                  }\n                };\n              }\n              return nodes;\n            }\n          };\n          return _self2;\n        }();\n        var makeNode = function() {\n          var _fn = _clone(_node);\n          return _fn.activate();\n        };\n        setObjects(tmpObj, xroot);\n        xdoc = null;\n        xroot = null;\n        return tmpObj;\n      } catch (e) {\n        return null;\n      }\n    },\n    textToXML: function(strXML) {\n      var xmlDoc = null;\n      try {\n        xmlDoc = document.all ? new ActiveXObject(\"Microsoft.XMLDOM\") : new DOMParser();\n        xmlDoc.async = false;\n      } catch (e) {\n        throw new Error(\"XML Parser could not be instantiated\");\n      }\n      var out;\n      try {\n        if (document.all) {\n          out = xmlDoc.loadXML(strXML) ? xmlDoc : false;\n        } else {\n          out = xmlDoc.parseFromString(strXML, \"text/xml\");\n        }\n      } catch (e) {\n        throw new Error(\"Error parsing XML string\");\n      }\n      return out;\n    }\n  };\n  return _self;\n}();\nexport {Smits};\n", "import { Sanscript } from './lib/sanscript.js';\nimport { CSV } from './lib/csv.js';\nimport { Smits } from './lib/jsphylosvg-custom.js';\n\n//import { lemmaXSLT, prettyXSLT, csvXSLT, matrixXSLT } from './lib/xsltsheet.mjs';\n//import { treeXSLT, lgXSLT } from './lib/xsltsheet-tree.mjs';\n\nimport { showSaveFilePicker } from 'https://cdn.jsdelivr.net/npm/native-file-system-adapter/mod.js';\n//import { showSaveFilePicker } from 'native-file-system-adapter';\n\nimport { Normalizer } from './lib/normalize.js';\nimport { to, changeScript } from './lib/transliterate.js';\nimport { xslt as _xslt } from './lib/xslt.js';\n\nimport Hypher from './_snowpack/pkg/hypher.js';\nimport { hyphenation_sa } from './lib/hypher-sa.js';\n\n'use strict';\n\nwindow.comboView = (function() {\n    \n    const _const = {\n        teins: 'http://www.tei-c.org/ns/1.0',\n        scripts: ['iast','devanagari','telugu','grantha','malayalam']\n    };\n\n    const _state = {\n        filename: null,\n        xml: null,\n        treelist: new Map(),\n        trees: [],\n        textboxes: [],\n        matrix: null,\n        viewdiv: null,\n        descs: null,\n        maxlemma: null,\n        windows: [window],\n        dragged: null,\n        undo: [],\n        redo: [],\n        editing: false\n    };\n\n    const Hyphenator = new Hypher(hyphenation_sa);\n    const xslt = new _xslt(_state, _const);\n\n    /*** Pure functions ***/\n\n    const pickColour = function(fadeFraction, rgbColor1, rgbColor2, rgbColor3) {\n    // from https://gist.github.com/gskema/2f56dc2e087894ffc756c11e6de1b5ed\n        var color1 = rgbColor1;\n        var color2 = rgbColor2;\n        var fade = fadeFraction;\n\n        // Do we have 3 colors for the gradient? Need to adjust the params.\n        if (rgbColor3) {\n            fade = fade * 2;\n\n            // Find which interval to use and adjust the fade percentage\n            if (fade >= 1) {\n                fade -= 1;\n                color1 = rgbColor2;\n                color2 = rgbColor3;\n            }\n        }\n\n        const diffRed = color2.red - color1.red;\n        const diffGreen = color2.green - color1.green;\n        const diffBlue = color2.blue - color1.blue;\n\n        const gradient = {\n            red: parseInt(Math.floor(color1.red + (diffRed * fade)), 10),\n            green: parseInt(Math.floor(color1.green + (diffGreen * fade)), 10),\n            blue: parseInt(Math.floor(color1.blue + (diffBlue * fade)), 10),\n        };\n\n        return 'rgb(' + gradient.red + ',' + gradient.green + ',' + gradient.blue + ')';\n    };\n\n    const findSelection = function() {    \n        const sel = window.getSelection();\n        if(sel.isCollapsed) return false;\n    \n        const range = (sel.rangeCount > 1) ? // firefox returns multiple ranges, chrome doesn't\n            sel.getRangeAt(1).cloneContents() :\n            sel.getRangeAt(0).cloneContents();\n        if(!range) return false;\n\n        const nums = new Set();\n        const lemmata = range.querySelectorAll('.lemma');\n        for(const lemma of lemmata) {\n            nums.add(lemma.dataset.n);\n        }\n        return nums;\n    };\n\n    const removeBox = function() {\n        const box = document.getElementById('tooltip');\n        if(box) box.remove();\n    };\n\n    const fillSelector = function() {\n        const menudiv = document.getElementById('left_menu'); \n        menudiv.innerHTML =\n `<div id=\"matrixmenu\" class=\"menubox\">\n    <div class=\"heading\">Matrix</div>\n      <ul>\n        <li>select CSV/XML file(s): <input type=\"file\" id=\"file\" name=\"file\" accept=\".xml,.csv\" multiple/></li>\n      </ul>\n</div>\n<div style=\"display: none\" id=\"mssmenu\" class=\"menubox\">\n    <div class=\"heading\">Texts</div>\n    <ul class=\"ms\">\n    </ul>\n</div>\n<div style=\"display: none\" id=\"treemenu\" class=\"menubox\">\n    <div class=\"heading\">Trees</div>\n        <ul class=\"tree\">\n            <li>select NeXML file: <input type=\"file\" id=\"treefile\" name=\"treefile\" accept=\".xml\"/></li>\n        </ul>\n    </div>\n`;\n        /*\n    var mss = Array.from(_texts.keys());\n    mss.sort();\n    var msshtml = '';\n    for(const ms of mss)\n        msshtml += `<li data-name=\"${ms}\">${_texts.get(ms).desc}</li>`;\n    menudiv.querySelector('.ms').innerHTML = msshtml;\n*/\n        const menu = document.getElementById('menu');\n        menu.addEventListener('mouseover', events.menuMouseover);\n        menu.addEventListener('mouseout', events.menuMouseout);\n        menu.addEventListener('click',events.menuClick);\n        // }\n        menu.querySelector('#file').addEventListener('change',fileSelect.bind(null,csvOrXml),false);\n        menu.querySelector('#treefile').addEventListener('change',fileSelect.bind(null,treeFileLoad),false);\n    };\n\n    const newBox = {\n        matrix: function() {\n            _state.matrix = new MatrixBox();\n            _state.matrix.init();\n            _state.matrix.show();\n            document.getElementById('matrixmenu').style.display = 'none';\n            drawTrees();\n            multi.rehighlight();\n            return _state.matrix;\n        },\n\n        text: function(name,/*map*/) {\n            const newEd = new EdBox(name);\n            //const newEd = new EdBox(name,map);\n            _state.textboxes.push(newEd);\n            newEd.init();\n            newEd.show();\n            //underlineVariants();\n            drawTrees();\n            multi.rehighlight();\n            if(!document.querySelector('.highlit'))\n                events.textClick({target: newEd.boxdiv.querySelector('.lemma:not(.invisible)')});\n            return newEd;\n        },\n\n        tree: function(stemmaid,id) {\n            const newTree = new TreeBox(stemmaid,id);\n            _state.trees.push(newTree);\n            newTree.init();\n            newTree.show();\n            drawTrees();\n            multi.rehighlight();\n            return newTree;\n        },\n    };\n\n    const drawTrees = function() {\n        for(const tree of _state.trees) {\n        //if(!tree.closed)\n            tree.draw();\n        }\n    };\n\n    const clearSelection = function() {\n        const sel = window.getSelection ? window.getSelection() : document.selection;\n        if (sel) {\n            if (sel.removeAllRanges) {\n                sel.removeAllRanges();\n            } else if (sel.empty) {\n                sel.empty();\n            }\n        }\n    };\n\n    const touchUpNode = function(node) {\n        const walker = document.createTreeWalker(node,NodeFilter.SHOW_TEXT);\n        while(walker.nextNode()) {\n            const txt = touchUpText(walker.currentNode.nodeValue);\n            walker.currentNode.nodeValue = txt;\n        }\n        // hyphenate(node,'sa');\n    };\n\n    const touchUpText = function(str) {\n        return Hyphenator.hyphenateText(\n            str\n                .replace(/ \\|/g,'\\u00a0|')\n                .replace(/\\| (?=\\d)/g,'|\\u00a0')\n                .replace(/\\|\\|/g,'рее')\n                .replace(/\\|/g,'ред')\n        );\n    };\n\n    /*** Multi-window updating functions ***/\n\n    const multi = {\n        getAllWindows: function() {\n            return window.mainWindow ?\n                window.mainWindow.comboView.getWindows() :\n                _state.windows;\n        },\n    \n        forEachWindow: function(fn) {\n            const windows = multi.getAllWindows();\n            for(const win of windows) {\n                if(win.closed) continue;\n                if(fn(win) === false) break;\n            }\n        },\n\n        highlightLemma: function(n,h) {\n            var hide_invisibles = h ? true : false;\n            multi.forEachWindow(win => {\n                const to_highlight = win.comboView.getViewdiv().querySelectorAll('[data-n=\"'+n+'\"]');\n                for(const th of to_highlight) {\n                    if(!hide_invisibles || !th.classList.contains('invisible'))\n                        th.classList.add('highlit');\n                }\n                const trans_highlight = win.comboView.getViewdiv().querySelectorAll('[data-n-trans=\"'+n+'\"]');\n                for(const trh of trans_highlight) {\n                    trh.classList.add('translit');\n                }\n            });\n        },\n        \n        highlightRange: function(nums) {\n            if(!nums || nums.size === 0) return;\n            multi.unHighlightAll();\n        \n            const [low,high] = find.lowhigh(nums);\n            if(high !== undefined) {\n                for(let n=low;n<=high;n++) multi.highlightLemma(n,true);\n            }\n            else\n                multi.highlightLemma(low);\n            multi.repopulateTrees(low,high);\n            for(const box of _state.viewdiv.querySelectorAll('.text-box'))\n                if(!box.querySelector('.highlit'))\n                    box.querySelector('[data-n=\"'+low+'\"]').classList.add('highlit');      \n            view.xScroll(low);\n        },\n\n        highlightAll: function() {\n            if(check.anyhighlit()) multi.unHighlightAll();\n            else multi.highlightRange(new Set([0,find.maxlemma()]));\n        },\n\n        unHighlightAll: function() {\n            multi.forEachWindow(win => {\n                const unlight = win.comboView.getViewdiv().querySelectorAll('.highlit');\n                for(const ul of unlight) {\n                    ul.classList.remove('highlit');\n                }\n                const untranslight = win.comboView.getViewdiv().querySelectorAll('.translit');\n                for(const utl of untranslight) {\n                    utl.classList.remove('translit');\n                }\n                multi.unCelllightAll();\n            });\n        },\n        unCelllightAll: function() {\n            multi.forEachWindow(win => {\n                const uncelllight = win.comboView.getViewdiv().querySelectorAll('.highlitcell');\n                for(const ucl of uncelllight) {\n                    ucl.classList.remove('highlitcell');\n                }\n            });\n        },\n\n        rehighlight: function() {\n            var highlit;\n            multi.forEachWindow(win => {\n                highlit = win.document.querySelectorAll('.highlit');\n                if(highlit.length > 0) return false;\n            });\n            if(highlit.length > 0) {\n                var nums = new Set();\n                for(const lit of highlit)\n                    nums.add(lit.dataset.n);\n                multi.highlightRange(nums);\n            }\n        },\n\n        clearTrees: function() {\n            multi.forEachWindow(win => {\n                const trees = win.comboView.getTrees();\n                for(const tree of trees) {\n                    tree.clearlemmata();\n                }\n            });\n        },\n\n        repopulateTrees: function(n,m) {\n            multi.forEachWindow(win => {\n                const trees = win.comboView.getTrees();\n                for(const tree of trees) {\n                //if(!tree.closed) {\n                    tree.populate(n,m);\n                    tree.colourizeVariants(n,m);\n                    /*if(tree.script !== 0 )*/ tree.updatescript();\n                //}\n                }\n                // ugly hack\n                /*    for(const el of document.getElementsByClassName('tree-lemma'))\n            if(el.textContent === '')\n                el.innerHTML = '&nbsp;&nbsp;&nbsp;';\n    */\n            });\n        },\n        highlightTreeLemma: function(id) {\n            multi.forEachWindow(win => {\n                const trees = win.comboView.getTrees();\n                for(const tree of trees) {\n                //if(tree.closed) continue;\n                    const targ = tree.boxdiv.querySelector('.tree-lemma[data-id=\"'+id+'\"]');\n                    const lemmata = tree.boxdiv.querySelectorAll('.tree-lemma');\n                    for(const lemma of lemmata) {\n                        if(targ.dataset.nodes && lemma.dataset.nodes === targ.dataset.nodes)\n                            lemma.classList.add('highlit');\n                        else if(!targ.dataset.nodes && lemma.dataset.id === targ.dataset.id)\n                            lemma.classList.add('highlit');\n                    }\n                    //tree.clearsvg();\n                    //tree.drawlines(targ.dataset.nodes,targ.style.color);\n                    tree.clearLabels();\n                }\n            });\n        },\n        unhighlightTrees: function() {\n            multi.forEachWindow(win => {\n                const highlit = win.comboView.getViewdiv().querySelectorAll('.tree-lemma.highlit');\n                for(const el of highlit) el.classList.remove('highlit');\n                const trees = win.comboView.getTrees();\n                for(const tree of trees) {\n                //tree.clearsvg();\n                //tree.drawlines();\n                    tree.clearLabels();\n                }\n            });\n        },\n\n    };\n\n    /*** Event listeners ***/\n\n    const fileSelect = function(func,e) {\n        const f = e.target.files[0];\n        const fs = [...e.target.files].slice(1);\n        const reader = new FileReader();\n        reader.onload = func.bind(null,f,fs);\n        reader.readAsText(f);\n    };\n    \n    const csvOrXml = function(f,fs,e) {\n        _state.filename = f.name;\n        document.title = document.title + `: ${_state.filename}`;\n        const ext = _state.filename.split('.').pop();\n        if(ext === 'csv') csvLoad(f,fs,e);\n        else matrixLoad(f,fs,e);\n    };\n\n    const treeFileLoad = function(f,fs,e) {\n        const treestr = e.target.result;\n        const parser = new DOMParser();\n        const nexml = parser.parseFromString(treestr,'text/xml');\n        const xenoData = _state.xml.querySelector('teiHeader > xenoData') || (function() {\n            const header = _state.xml.querySelector('teiHeader') || (function() {\n                const h = _state.xml.createElementNS(_const.teins,'teiHeader');\n                _state.xml.documentElement.appendChild(h);\n                return h;})();\n            const newel = _state.xml.createElementNS(_const.teins,'xenoData');\n            header.appendChild(newel);\n            return newel;\n        })();\n        const stemmael = _state.xml.createElementNS(_const.teins,'stemma');\n        stemmael.setAttribute('format','nexml');\n        stemmael.id = 'stemma' + [...xenoData.querySelectorAll('stemma')].length;\n        stemmael.appendChild(nexml.firstChild.cloneNode(true));\n        xenoData.appendChild(stemmael);\n\n        // labels are correct with new version of SplitsTree5\n        /*\n        const otunodes = nexml.querySelectorAll('node[otu]');\n        for(const otunode of otunodes) {\n            const label = otunode.getAttribute('label');\n            const otu = otunode.getAttribute('otu');\n            if(label !== otu) otunode.setAttribute('label',otu);\n        }\n        */\n        treeXMLLoad(nexml,stemmael.id);\n    };\n\n    const treeXMLLoad = function(nexml,stemmaid,show=true) {\n        const trees = nexml.querySelectorAll('tree');\n        const treemenu = document.querySelector('#treemenu ul');\n        for(const tree of trees) {\n            const id = tree.id;\n            const xclone = nexml.cloneNode(true);\n            for(const tclone of xclone.querySelectorAll('tree')) {\n                if(tclone.id !== id)\n                    tclone.parentNode.removeChild(tclone);\n            }\n            const label = tree.getAttribute('label') || 'New Tree ' + _state.treelist.size;\n            _state.treelist.set(`#${stemmaid} #${id}`,xclone);\n            const li = document.createElement('li');\n            li.dataset.name = label;\n            li.dataset.treeid = id;\n            li.dataset.stemmaid = stemmaid;\n            li.appendChild(document.createTextNode(label));\n            treemenu.insertBefore(li,treemenu.lastElementChild);\n\n            if(show) newBox.tree(stemmaid,id);\n        }\n    };\n    /*\n    const csvLoad = function(f,fs,e) {\n        _state.filename = f.name;\n        const ext = _state.filename.split('.').pop();\n        var csvarr = [];\n        if(ext === 'csv') {\n            _state.xml = document.implementation.createDocument(_const.teins,'',null);\n            const teicorpus = _state.xml.createElementNS(_const.teins,'teiCorpus');\n            const teiheader = _state.xml.createElementNS(_const.teins,'teiHeader');\n            teicorpus.appendChild(teiheader);\n            _state.xml.appendChild(teicorpus);\n            const csvstr = e.target.result;\n            csvarr = csvstr.trim().split(/\\n+/)\n                .map(s => s.replace(/\"\"/g,'').split(','))\n                .map(a => {\n                    const name = a.shift();\n                    const tei = _state.xml.createElementNS(_const.teins,'TEI');\n                    //tei.setAttribute('xmlns','http://www.tei-c.org/ns/1.0');\n                    tei.setAttribute('n',name);\n                    const text = _state.xml.createElementNS(_const.teins,'text');\n                    //text.setAttribute('xmlns','http://www.tei-c.org/ns/1.0');\n                    //const root = document.createElementNS('http://www.w3.org/1999/xhtml','text');\n                    //root.setAttribute('n',name);\n                    for(let n=0;n<a.length;n++) {\n                        const word = a[n];\n                        //const newEl = document.createElementNS('http://www.tei-c.org/ns/1.0','w');\n                        //newEl.setAttribute('xmlns','http://www.tei-c.org/ns/1.0');\n                        const newEl = _state.xml.createElementNS(_const.teins,'w');\n                        //newEl.setAttribute('xmlns','http://www.w3.org/1999/xhtml');\n                        if(word !== '')\n                            newEl.appendChild(document.createTextNode(word));\n                        newEl.setAttribute('n',n);\n                        text.appendChild(newEl);\n                    //root.appendChild(newEl);\n                    }\n                    tei.appendChild(text);\n                    //_state.xml.appendChild(text);\n                    teicorpus.appendChild(tei);\n                    //_state.xml.appendChild(root);\n                    return [name, {desc: name, text: a}];\n                });\n            _state.xml.normalize();\n        }\n        else if(ext === 'xml') {\n            const xParser = new DOMParser();\n            _state.xml = xParser.parseFromString(e.target.result,'text/xml');\n            const teis = _state.xml.querySelectorAll('TEI');\n            for(const tei of teis) {\n                const name = tei.getAttribute('n');\n                const words = tei.querySelectorAll('w');\n                const wordarr = [...words].map(el => el.textContent);\n                csvarr.push([name,{desc: name, text: wordarr}]);\n            }\n            const trees = _state.xml.querySelectorAll('teiHeader xenoData stemma nexml');\n            for(const tree of trees) {\n                const nexml = document.implementation.createDocument('http://www.nexml.org/2009','',null);\n                nexml.appendChild(tree.cloneNode(true));\n                treeXMLLoad(nexml,tree.closest('stemma').id,false);\n            }\n        }\n        //_texts = new Map(csvarr);\n        //_state.maxlemma = _texts.get(_texts.keys().next().value).text.length;\n        //_state.maxlemma = find.firsttext().lastElementChild.getAttribute('n');\n        _state.maxlemma = find.maxlemma();\n\n        //var mss = Array.from(_texts.keys());\n        //mss.sort();\n        var msshtml = '';\n        const mss = [...find.teis()].map(el => el.getAttribute('n'));\n        for(const ms of mss)\n        //    msshtml += `<li data-name=\"${ms}\">${_texts.get(ms).desc}</li>`;\n            msshtml += `<li data-name=\"${ms}\">${ms}</li>`;\n        document.getElementById('menu').querySelector('.ms').innerHTML = msshtml;\n        const expbox = new menuBox('Export');\n        expbox.populate([\n            {text: 'TEI XML', func: exp.xml},\n            {text: 'CSV', func: exp.showOptions.bind(null,exp.csv)},\n            {text: 'NEXUS', func: exp.showOptions.bind(null,exp.nexus)}\n        ]);\n        const editbox = new menuBox('Edit');\n        editbox.populate([\n            {text: 'Undo', greyout: check.undo, func: edit.undo},\n            {text: 'Redo', greyout: check.redo, func: edit.redo},\n            {text: 'Delete',\n                greyout: check.anyhighlit,\n                func: edit.startRemoveCol.bind(null,false)\n            },\n            {text: 'Delete empty lemmata',\n                func: edit.startRemoveEmptyewBox.matrix);\n        matrixmenu.removeChild(matrixmenu.querySelector('ul'));\n        document.getElementById('mssmenu').style.display = 'block';\n        document.getElementById('treemenu').style.display = 'block';\n\n    };\n*\n            },\n            {text: 'Merge',\n                greyout: check.manyhighlit,\n                func: edit.startMerge.bind(null,false)\n            },\n            {text: 'Group',\n                alt: 'Ungroup',\n                greyout: check.oneGrouped,\n                toggle: check.grouped,\n                func: edit.startGroup.bind(null,false),\n            },\n            {text: 'Edit reading',\n                greyout: check.highlitcell,\n                func: edit.startEditCell.bind(null,false),\n            },\n            {text: 'Insert row',\n                func: edit.startNewRow,\n            },\n            {text: 'Insignificant',\n                checkbox: check.checkbox.bind(null,'insignificant',false),\n                greyout: check.anyhighlit,\n                func: edit.startMarkAs.bind(null,'insignificant',false)\n            },\n            {text: 'Binary',\n                checkbox: check.checkbox.bind(null,'binary',false),\n                greyout: check.anyhighlit,\n                func: edit.startMarkAs.bind(null,'binary',false)\n            },\n        ]);\n\n        const viewbox = new menuBox('View');\n        viewbox.populate([\n            {text: 'Header',\n                checkbox: check.headerView,\n                func: view.toggleHeader,\n            },\n            {text: 'Normalize',\n                checkbox: check.normalizedView,\n                func: view.toggleNormalize,\n            },\n        ]);\n\n        const left_menu = document.getElementById('left_menu');\n        left_menu.appendChild(viewbox.box);\n        left_menu.appendChild(editbox.box);\n        left_menu.appendChild(expbox.box);\n   \n        const views = document.getElementById('views');\n        views.style.justifyContent = 'flex-start';\n        views.removeChild(views.querySelector('#splash'));\n\n        newBox.matrix();\n        const matrixmenu = document.getElementById('matrixmenu');\n        matrixmenu.addEventListener('click',newBox.matrix);\n        matrixmenu.removeChild(matrixmenu.querySelector('ul'));\n        document.getElementById('mssmenu').style.display = 'block';\n        document.getElementById('treemenu').style.display = 'block';\n\n    };\n*/\n    const csvLoad = function(f,fs,e) {\n        const csvarr = CSV.parse(e.target.result,{delimiter: ','});\n        _state.xml = document.implementation.createDocument(_const.teins,'',null);\n        const teicorpus = _state.xml.createElementNS(_const.teins,'teiCorpus');\n        const teiheader = _state.xml.createElementNS(_const.teins,'teiHeader');\n        teicorpus.appendChild(teiheader);\n        _state.xml.appendChild(teicorpus);\n\n        for(const c of csvarr) {\n            const name = c[0];\n            const arr = c.slice(1);\n            const tei = _state.xml.createElementNS(_const.teins,'TEI');\n            tei.setAttribute('n',name);\n            const text = _state.xml.createElementNS(_const.teins,'text');\n            for(let n=0;n<arr.length;n++) {\n                const word = arr[n];\n                const newEl = _state.xml.createElementNS(_const.teins,'w');\n                if(word)\n                    newEl.appendChild(document.createTextNode(word));\n                newEl.setAttribute('n',n);\n                text.appendChild(newEl);\n            }\n            tei.appendChild(text);\n            teicorpus.appendChild(tei);\n        }\n        _state.xml.normalize();\n\n        _state.maxlemma = find.maxlemma();\n        \n        //if(fs.length > 0) csvLoadAdditional(fs);\n\n        menuPopulate();\n    };\n\n    const matrixLoad = function(f,fs,e) {\n        const xParser = new DOMParser();\n        _state.xml = xParser.parseFromString(e.target.result,'text/xml');\n        \n        const trees = _state.xml.querySelectorAll('teiHeader xenoData stemma nexml');\n        for(const tree of trees) {\n            const nexml = document.implementation.createDocument('http://www.nexml.org/2009','',null);\n            nexml.appendChild(tree.cloneNode(true));\n            treeXMLLoad(nexml,tree.closest('stemma').id,false);\n        }\n\n        _state.maxlemma = find.maxlemma();\n        \n        if(fs.length > 0) matrixLoadAdditional(fs);\n\n        else menuPopulate();\n\n    };\n\n    const matrixLoadAdditional = function(fs) {\n        const f = fs[0];\n        const fss = fs.slice(1);\n        const setDiff = function(setA,setB) {\n            const ret = new Set(setA);\n            for(const el of setB) ret.delete(el);\n            return ret;\n        };\n\n        const go = function(add,e) {\n            const xParser = new DOMParser();\n            const newxml = xParser.parseFromString(e.target.result,'text/xml');\n            \n            const oldteis = new Map();\n            for(const tei of find.teis()) {\n                const siglum = tei.getAttribute('n');\n                oldteis.set(siglum,tei);\n            }\n            const oldsigla = new Set(oldteis.keys());\n\n            const newteis = new Map();\n            for(const tei of newxml.querySelectorAll('TEI')) {\n                const siglum = tei.getAttribute('n');\n                newteis.set(siglum,tei);\n            }\n            const newsigla = new Set(newteis.keys());\n\n            const tofill = setDiff(oldsigla,newsigla);\n            const toadd  = setDiff(newsigla,oldsigla);\n\n            \n            for(const el of toadd) make.tei(el);\n\n            const addlemma = [...newxml.querySelector('text').querySelectorAll('w[n]')].length;\n            const lastlemma = _state.maxlemma + addlemma;\n            for(const [key,val] of newteis) {\n                if(!oldteis.has(key)) {\n                    const newtei = _state.xml.createElementNS(_const.teins,'TEI');\n                    newtei.setAttribute('n',key);\n                    const newtext = _state.xml.createElementNS(_const.teins,'text');\n                    make.emptywords(newtext,lastlemma,0);\n                    newtei.appendChild(newtext);\n                    _state.xml.documentElement.appendChild(newtei);\n                }\n                else {\n                    const oldtext = oldteis.get(key).querySelector('text');\n                    const newtext = val.querySelector('text');\n                    const newwords = newtext.querySelectorAll('w[n]');\n                    var cur_n = _state.maxlemma + 1;\n                    for(const word of newwords) {\n                        word.setAttribute('n',cur_n);\n                        oldtext.appendChild(word);\n                        cur_n = cur_n + 1;\n                    }\n                }\n            }\n\n            for(const el of tofill) {\n                //const oldtext = oldteis.get(el).querySelector('text');\n                const text = oldteis.get(el).querySelector('text');\n                make.emptywords(text,lastlemma,_state.maxlemma + 1);\n            }\n\n            _state.maxlemma = find.maxlemma(); // can probably change this\n            if(add.length > 0) matrixLoadAdditional(add);\n            else menuPopulate();\n        };\n\n        const reader = new FileReader();\n        reader.onload = go.bind(null,fss);\n        reader.readAsText(f);\n        \n    };\n\n    const mssMenuPopulate = function() {\n        var msshtml = '';\n        const mss = [...find.teis()].map(el => el.getAttribute('n'));\n        for(const ms of mss) {\n        //    msshtml += `<li data-name=\"${ms}\">${_texts.get(ms).desc}</li>`;\n            msshtml += `<li data-name=\"${ms}\">${ms}</li>`;\n        }\n        document.getElementById('menu').querySelector('.ms').innerHTML = msshtml;\n    };\n\n    const menuPopulate = function() {\n        mssMenuPopulate();\n        const expbox = new menuBox('Export');\n        expbox.populate([\n            {text: 'TEI corpus', func: exp.showOptions.bind(null,exp.xml,exp.options)},\n            {text: 'TEI apparatus', func: exp.showOptions.bind(null,exp.xml,exp.appOptions)},\n            {text: 'CSV', func: exp.showOptions.bind(null,exp.csv,exp.options)},\n            {text: 'NEXUS', func: exp.showOptions.bind(null,exp.nexus,exp.options)}\n        ]);\n        const editbox = new menuBox('Edit');\n        editbox.populate([\n            {text: 'Undo', greyout: check.undo, func: edit.undo},\n            {text: 'Redo', greyout: check.redo, func: edit.redo},\n            {text: 'Select all',\n                alt: 'Deselect all',\n                toggle: check.anyhighlit,\n                func: multi.highlightAll\n            },\n            {text: '(Re)normalize columns',\n                greyout: check.anyhighlit,\n                func: edit.startRenormalize.bind(null,false)\n            },\n            {text: 'Delete column',\n                greyout: check.anyhighlit,\n                func: edit.startRemoveCol.bind(null,false)\n            },\n            {text: 'Delete empty columns',\n                func: edit.startRemoveEmpty\n            },\n            {text: 'Merge columns',\n                greyout: check.manyhighlit,\n                func: edit.startMerge.bind(null,false)\n            },\n            {text: 'Group columns',\n                alt: 'Ungroup columns',\n                greyout: check.oneGrouped,\n                toggle: check.grouped,\n                func: edit.startGroup.bind(null,false),\n            },\n            {text: 'Group words',\n                func: edit.doGroupWords\n            },\n            {text: 'Edit cell',\n                greyout: check.highlitcell,\n                func: edit.startEditCell.bind(null,false),\n            },\n            {text: 'Insert row',\n                func: edit.startNewRow,\n            },\n            {text: 'Insert column',\n                greyout: check.anyhighlit,\n                func: edit.startInsertCol\n            },\n            {text: 'Mark insignificant',\n                checkbox: check.checkbox.bind(null,'insignificant',false),\n                greyout: check.anyhighlit,\n                func: edit.startMarkAs.bind(null,'insignificant',false)\n            },\n            {text: 'Mark binary',\n                checkbox: check.checkbox.bind(null,'binary',false),\n                greyout: check.anyhighlit,\n                func: edit.startMarkAs.bind(null,'binary',false)\n            },\n        ]);\n\n        const viewbox = new menuBox('View');\n        viewbox.populate([\n            {text: 'Header',\n                checkbox: check.headerView,\n                func: view.toggleHeader,\n            },\n            {text: 'Normalized',\n                checkbox: check.normalizedView,\n                greyout: check.anyNormalized,\n                func: view.toggleNormalize,\n            },\n        ]);\n\n        const left_menu = document.getElementById('left_menu');\n        left_menu.appendChild(viewbox.box);\n        left_menu.appendChild(editbox.box);\n        left_menu.appendChild(expbox.box);\n   \n        const views = document.getElementById('views');\n        views.style.justifyContent = 'flex-start';\n        views.removeChild(views.querySelector('#splash'));\n\n        newBox.matrix();\n        const matrixmenu = document.getElementById('matrixmenu');\n        matrixmenu.addEventListener('click',newBox.matrix);\n        matrixmenu.removeChild(matrixmenu.querySelector('ul'));\n        document.getElementById('mssmenu').style.display = 'block';\n        document.getElementById('treemenu').style.display = 'block';\n\n    };\n\n    const exp = {\n        write: async function(file,handle) {\n            const writer = await handle.createWritable();\n            writer.write(file);\n            writer.close();\n        },\n\n        xml: async function(doc) {\n            const str = new XMLSerializer().serializeToString(\n                //  XSLTransformElement(_state.xml,xslt_proc)\n                xslt.sheets['xml'].transformToDocument(doc)\n            );\n            const file = new Blob([str], {type: 'text/xml;charset=utf-8'});\n            const fileURL = find.basename() + '.xml';\n            const fileHandle = await showSaveFilePicker({\n                _preferPolyfill: false,\n                suggestedName: fileURL,\n                types: [ {description: 'TEI XML', accept: {'text/xml': ['.xml']} } ],\n            });\n            exp.write(file,fileHandle);\n        },\n\n        csv: async function(doc) {\n            //const str = new XMLSerializer().serializeToString(XSLTransformElement(doc,xslt_proc));\n            //const str = new XMLSerializer().serializeToString(xslt_proc.transformToDocument(_state.xml));\n            //const str = xslt_proc.transformToDocument(_state.xml).documentElement.textContent;\n            const str = xslt.sheets['csv'].transformToDocument(doc).documentElement.textContent;\n            const file = new Blob([str], {type: 'text/csv;charset=utf-8'});\n            const fileURL = find.basename() + '.csv';\n            const fileHandle = await showSaveFilePicker({\n                _preferPolyfill: false,\n                suggestedName: fileURL,\n                types: [ {description: 'CSV file', accept: {'text/csv': ['.csv']} } ],\n            });\n            exp.write(file,fileHandle);\n        },\n  \n        nexus: async function(doc) {\n            const texts = [...find.texts(doc)];\n            const ntax = texts.length;\n            const symbols = '0 1 2 3 4 5 6 7 8 9 A B C D E F G H K L M N P Q R S T U V W X Y Z a b c d e f g h k l m n p q r s t u v w x y z';\n            const [siggap,...symbolarr] = symbols.split(' ');\n            const gap = '-';\n            const taxlabels = texts.map(el => '\\''+el.parentElement.getAttribute('n')+'\\'');\n            const textWalkers = texts.map(el => find.textWalker(el));\n            const nchar = texts[0].querySelectorAll('w').length;\n            const charstatelabels = [];\n            const matrix = taxlabels.map(s => [s + ' ']);\n            for(let n=0;n<nchar;n++) {\n                const statelabels = new Set();\n                const readings = [];\n                for(let m=0;m<textWalkers.length;m++) {\n                    const walker = textWalkers[m];\n                    const node = walker.nextNode();\n                    const reading = Sanscript.t(node.textContent.trim().toLowerCase(),'iast','hk')\n                        .replace(/'/g,'()');\n                    readings.push(reading);\n                    if(reading !== '' && reading !== '[]')\n                        statelabels.add(reading);\n                }\n                charstatelabels.push(['[]',...statelabels]);\n                const statesymbols = new Map([...statelabels].map((x,i) => [x,symbolarr[i]]));\n                for(let p=0;p<readings.length;p++) {\n                    const r = ((p) => {\n                        switch (readings[p]) {\n                        case '':\n                            return gap;\n                        case '[]':\n                            return siggap;\n                        default:\n                            return statesymbols.get(readings[p]);\n                        }\n                    })(p);\n\n                    matrix[p].push(r);\n                }\n            }\n            const charstatestr = charstatelabels.map((x,i) => (i+1) +' / '+ [...x].map(s => `'${s}'`).join(' ')).join(',\\n');\n            const flatmatrix = matrix.map(arr => arr.join(''))\n                // ignore long gaps, even if \"gaps are significant\" is selected\n                .map(str => str.replace(/0{8,}/g, match => match.replace(/0/g,'-')))\n                .reduce((acc,cur) => acc + '\\n'+cur);\n            const str =\n`#NEXUS\n\nBEGIN TAXA;\n  DIMENSIONS NTAX=${ntax};\n  TAXLABELS ${taxlabels.join(' ')};\nEND;\n\nBEGIN CHARACTERS;\n  DIMENSIONS\n    NCHAR=${nchar};\n  FORMAT \n    DATATYPE=STANDARD \n    RESPECTCASE \n    GAP=${gap} \n    MISSING=? \n    SYMBOLS=\"${symbols}\";\n  CHARSTATELABELS\n${charstatestr}\n;\nMATRIX\n${flatmatrix}\n;\nEND;\n`;\n            const file = new Blob([str], {type: 'text/nexus;charset=iso8859-1'});\n            const fileURL = find.basename() + '.nex';\n            const fileHandle = await showSaveFilePicker({\n                _preferPolyfill: false,\n                suggestedName: fileURL,\n                types: [ {description: 'NEXUS file', accept: {'text/nexus': ['.nex']} } ],\n            });\n            exp.write(file,fileHandle);\n        },\n\n        processOptions: function(opts) {\n            const doc = _state.xml.cloneNode(true);\n\n            if(opts.get('option_normalize')) {\n                const els = doc.querySelectorAll('w[lemma]');\n                for(const el of els)\n                    el.textContent = el.getAttribute('lemma');\n            }\n\n            if(opts.get('option_mergegroups')) {\n                const els = doc.querySelectorAll('cl');\n                for(const el of els) {\n                    const firstw = el.removeChild(el.firstChild);\n                    while(el.firstChild) {\n                        const norm1 = firstw.getAttribute('lemma') || firstw.textContent;\n                        const norm2 = el.firstChild.getAttribute('lemma') || el.firstChild.textContent;\n                        firstw.setAttribute('lemma',norm1 + norm2);\n                        while(el.firstChild.firstChild)\n                            firstw.appendChild(el.firstChild.firstChild);\n                        el.firstChild.remove();\n                    }\n                    if(firstw.getAttribute('lemma') === firstw.textContent)\n                        firstw.removeAttribute('lemma');\n                    el.parentNode.insertBefore(firstw,el);\n                    el.parentNode.removeChild(el);\n                }\n            }\n\n            if(opts.get('option_insignificant')) {\n                const els = doc.querySelectorAll('w[insignificant=\"true\"]');\n                for(const el of els)\n                    el.parentNode.removeChild(el);\n            }\n            if(opts.get('option_binary')) {\n                /*\n                const els = doc.querySelectorAll('w[binary=\"true\"]');\n                const nonempty = [...els].filter(el => el.textContent !== '');\n                if(!nonempty) return;\n                \n                const placeholder = '['+nonempty[0].textContent+']';\n                for(const el of nonempty)\n                    el.textContent = placeholder;\n                */\n                const firstrow = find.firsttext().querySelectorAll('w[binary=\"true\"]');\n                //const allels = [...doc.querySelectorAll('w[binary=\"true\"]')];\n                const nums = [...firstrow].map(el => el.getAttribute('n'));\n                for(const num of nums) {\n                    const nonempty = doc.querySelectorAll(`w[n=\"${num}\"]:not(:empty)`);\n                    //const nonempty = [...els].filter(el => el.childNodes.length !== 0);\n                    /*\n                    const nonempty = allels.filter(el => {\n                        return (el.getAttribute('n') === num &&\n                                el.childNodes.length === 0);\n                    });\n                    */\n                    if(nonempty.length === 0) continue;\n                    // Element nodes have no nodeValue\n                    const placeholder = `[${nonempty[0].textContent}]`;\n                    for(const el of nonempty)\n                        el.textContent = placeholder;\n                }\n            }\n            if(opts.get('option_noempty')) {\n                const els = doc.querySelectorAll('w:empty');\n                for(const el of els)\n                    el.textContent = '[]';\n            }\n\n            // early return for no apparatus\n            if(!opts.get('option_basetext')) \n                return doc;\n            else\n                return exp.makeApp(opts,doc);\n        },\n        makeHeader(newdoc,doc) {\n            const teiheader = newdoc.createElementNS(_const.teins,'teiHeader');\n            const filedesc = newdoc.createElementNS(_const.teins,'fileDesc');\n            const sourcedesc = newdoc.createElementNS(_const.teins,'sourceDesc');\n            const listwit = newdoc.createElementNS(_const.teins,'listWit');\n            for(const text of find.teis(doc)) {\n                const n = text.getAttribute('n');\n                const wit = newdoc.createElementNS(_const.teins,'witness');\n                wit.setAttribute('xml:id',n);\n                const idno = newdoc.createElementNS(_const.teins,'idno');\n                idno.setAttribute('type','siglum');\n                idno.append(n);\n                wit.appendChild(idno);\n                listwit.appendChild(wit);\n            }\n            sourcedesc.appendChild(listwit);\n            filedesc.appendChild(sourcedesc);\n            teiheader.appendChild(filedesc);\n            return teiheader;\n        },\n        makeApp(opts,doc) {\n            const baselabel = opts.get('option_basetext');\n            const basetext = find.tei(baselabel,doc);\n            const normlem = opts.get('option_app_normalize');\n\n            const newdoc = document.implementation.createDocument(_const.teins,'',null);\n            newdoc.appendChild(basetext);\n            const teiheader = exp.makeHeader(newdoc,doc);\n            basetext.insertBefore(teiheader,basetext.firstChild);\n            const words = find.words(false,basetext);\n            for(const word of words) {\n                const dataN = word.getAttribute('n');\n                const lemma = normlem ? \n                    (word.getAttribute('lemma') || word.textContent) :\n                    word.textContent;\n                const posapp = [];\n                const negapp = new Map();\n                const otherwords = find.words(dataN,doc);\n                for(const otherword of otherwords) {\n                    const id = otherword.closest('TEI').getAttribute('n');\n                    if(normlem && otherword.getAttribute('lemma') === lemma)\n                        posapp.push(id);\n                    else if(otherword.textContent === lemma)\n                        posapp.push(id);\n                    else {\n                        const newstr = otherword.textContent === '' ? \n                            '[om.]' : \n                            otherword.textContent;\n                        const negwits = negapp.get(newstr) || [];\n                        negwits.push(id);\n                        negapp.set(newstr,negwits);\n                    }\n                }\n                \n                if(negapp.size === 0) {\n                    while(word.firstChild)\n                        word.parentElement.insertBefore(word.firstChild,word);\n                }\n                else {\n                    const app = newdoc.createElementNS(_const.teins,'app');\n                    app.setAttribute('n',dataN);\n                    const lem = newdoc.createElementNS(_const.teins,'lem');\n                    const poswits = posapp.map(s => `#${s}`).join(' ');\n                    if(poswits !== '') lem.setAttribute('wit',poswits);\n                    while(word.firstChild)\n                        lem.appendChild(word.firstChild);\n                    app.appendChild(lem);\n                    for(const [str,wits] of negapp) {\n                        const rdg = newdoc.createElementNS(_const.teins,'rdg');\n                        const negwits = wits.map(s => `#${s}`).join(' ');\n                        rdg.setAttribute('wit',negwits);\n                        rdg.append(str);\n                        app.appendChild(rdg);\n                    }\n                    word.parentElement.insertBefore(app,word);\n                    if(lem.textContent.match(/\\s$/)) {\n                        word.parentElement.insertBefore(\n                            newdoc.createTextNode(' '),\n                            word);\n                    }\n                }\n\n                word.remove();\n            }\n            return newdoc;\n        },\n\n        options() {\n            return document.createRange().createContextualFragment(\n                `<div id=\"exportoptions\" class=\"popup\">\n    <form id=\"exportform\">\n      <div style=\"font-weight: bold\">Export</div>\n      <div>\n        <input type=\"checkbox\" id=\"option_insignificant\" name=\"option_insignificant\"><label for=\"option_insignificant\">Remove insignifiant lemmata</label>\n      </div>\n      <div>\n        <input type=\"checkbox\" id=\"option_binary\" name=\"option_binary\"><label for=\"option_binary\">Binarize marked lemmata</label>\n      </div>\n      <div>\n        <input type=\"checkbox\" id=\"option_noempty\" name=\"option_noempty\"><label for=\"option_noempty\">Gaps are significant</label>\n      </div>\n      <div>\n        <input type=\"checkbox\" id=\"option_mergegroups\" name=\"option_mergegroups\"><label for=\"option_mergegroups\">Merge groups</label>\n      </div>\n      <div>\n        <input type=\"checkbox\" id=\"option_normalize\" name=\"option_normalize\"><label for=\"option_normalize\">Normalize spellings</label>\n      </div>\n      <div>\n        <button type=\"submit\">Export</button>\n      </div>\n    </form>\n</div>`);\n        },\n        appOptions() {\n            const frag = document.createRange().createContextualFragment(\n                `<div id=\"exportoptions\" class=\"popup\">\n    <form id=\"exportform\">\n      <div style=\"font-weight: bold\">Export</div>\n      <div>\n        <label for=\"option__basetext\">Base text</label>\n        <select id=\"option__basetext\" name=\"option_basetext\"></select>\n      </div>\n      <div>\n        <input type=\"checkbox\" id=\"option__app_insignificant\" name=\"option_app_insignificant\"><label for=\"option_app_insignificant\">Ignore insignifiant lemmata</label>\n      </div>\n      <div>\n        <input type=\"checkbox\" id=\"option_mergegroups\" name=\"option_mergegroups\" checked><label for=\"option_mergegroups\">Merge groups</label>\n      </div>\n      <div>\n        <input type=\"checkbox\" id=\"option_app_normalize\" name=\"option_app_normalize\" checked><label for=\"option_app_normalize\">Normalized spellings in positive apparatus</label>\n      </div>\n      <div>\n        <input type=\"checkbox\" id=\"option_normalize\" name=\"option_normalize\"><label for=\"option_normalize\">Normalize spellings in negative apparatus</label>\n      </div>\n      <div>\n        <button type=\"submit\">Export</button>\n      </div>\n    </form>\n</div>`);\n            const select = frag.getElementById('option__basetext');\n            const sigla = [...find.trs()].map(el => el.dataset.n);\n            for(const siglum of sigla) {\n                const el = document.createElement('option');\n                el.value = siglum;\n                el.append(siglum);\n                select.appendChild(el);\n            }\n            return frag;\n        },\n\n        showOptions: function(func,optfunc) {\n            const htmlfrag = optfunc();\n            const blackout = document.createElement('div');\n            blackout.id = 'blackout';\n            blackout.appendChild(htmlfrag);\n            document.body.appendChild(blackout);\n            const submitfunction = function(e) {\n                e.preventDefault();\n                var opts = [];\n                const inputs = document.getElementById('exportform').elements;\n                for(const i of inputs) {\n                    if(i.type === 'checkbox')\n                        opts.push([i.name,i.checked]);\n                    else\n                        opts.push([i.name,i.value]);\n                }\n                const doc = exp.processOptions(new Map(opts));\n                func(doc);\n                document.body.removeChild(blackout);\n            };\n            const submit = blackout.querySelector('button');\n            submit.addEventListener('click',submitfunction);\n            blackout.addEventListener('click',exp.blackoutClick);\n            return blackout;\n        },\n\n        blackoutClick: function(e) {\n            const targ = e.target.closest('.popup');\n            if(!targ) {\n                const blackout = document.querySelector('#blackout');\n                blackout.parentNode.removeChild(blackout);\n            }\n        }\n    };\n    \n    /*\n    const fullTreeMouseover = function(e) {\n        const targ = e.target.classList.contains('littletree') ?\n            e.target :\n            e.target.closest('.littletree');\n        if(targ) {\n            const littlelines = document.getElementById('full-tree').querySelectorAll('line.littletree');\n            for(const line of littlelines) {\n                line.style.stroke = 'rgb(179,18,125)';\n            }\n            const littletext = document.getElementById('full-tree').querySelectorAll('text.littletree');\n            for(const text of littletext) {\n                text.style.fill = 'rgb(179,18,125)';\n            }\n        }\n    };\n    \n    const fullTreeMouseout = function(e) {\n        const targ = e.target.classList.contains('littletree') ?\n            e.target :\n            e.target.closest('.littletree');\n        if(targ) {\n            const littlelines = document.getElementById('full-tree').querySelectorAll('line.littletree');\n            for(const line of littlelines) {\n                line.style.stroke = '#80a0ff';\n            }\n            const littletext = document.getElementById('full-tree').querySelectorAll('text.littletree');\n            for(const text of littletext) {\n                text.style.fill = 'black';\n            }\n        }\n    };\n    */\n    /*\nconst fullTreeClick = function(e) {\n    const targ = e.target.classList.contains('littletree') ?\n        e.target :\n        e.target.closest('.littletree');\n    if(targ) {\n        document.getElementById('full-tree').style.display = 'none';\n        comboView.maininit();\n        newBox.tree(document.querySelector('.tree li').dataset.name);\n    }\n}\n*/\n    const events = {\n        selectAll(el) {\n            const range = document.createRange();\n            range.selectNodeContents(el);\n            const sel = window.getSelection();\n            sel.removeAllRanges();\n            sel.addRange(range);\n        },\n\n        deselect() {\n            const sel = window.getSelection();\n            if(sel.removeAllRanges) sel.removeAllRanges();\n            else if(sel.empty) sel.empty();\n        },\n\n        treeMouseover(e) {\n            const targ = e.target.classList.contains('tree-lemma') ?\n                e.target :\n                e.target.closest('.tree-lemma');\n\n            if(targ) {\n                multi.highlightTreeLemma(targ.dataset.id);\n                targ.addEventListener('mouseout',multi.unhighlightTrees);\n            }\n        \n            const title = e.target.dataset.reconstructed;\n            if(!title) return;\n\n            const box = document.createElement('div');\n            box.id = 'tooltip';\n            box.style.top = e.pageY + 'px';//(e.clientY + 10) + 'px';\n            box.style.left = e.pageX + 'px';//e.clientX + 'px';\n            box.style.opacity = 0;\n            box.style.transition = 'opacity 0.2s ease-in';\n            _state.viewdiv.parentElement.appendChild(box);\n\n            const textbox = document.createElement('div');\n            textbox.appendChild(document.createTextNode(title));\n            this.script !== 0 ? // this is bound to the TreeBox \n                box.appendChild(changeScript(textbox,_const.scripts[this.script])) :\n                box.appendChild(textbox);\n\n            if(e.target.classList.contains('reconstructed')) {\n                const treelemma = e.target.parentNode.querySelector('span.tree-lemma');\n                if(treelemma && treelemma.dataset.hasOwnProperty('emended')) {\n                    const emendbox = document.createElement('div');\n                    emendbox.classList.add('emphasis');\n                    emendbox.appendChild(document.createTextNode(treelemma.textContent));\n                    this.script !== 0 ?\n                        box.prepend(changeScript(emendbox,_const.scripts[this.script])) :\n                        box.prepend(emendbox);\n                }\n            }\n\n            window.getComputedStyle(box).opacity;\n            box.style.opacity = 1;\n        \n            e.target.addEventListener('mouseout', removeBox);\n        },\n\n        treeClick(e) {\n            if(e.target.classList.contains('witness'))\n                newBox.text(e.target.dataset.key);\n            //newBox.text(e.target.dataset.key,_texts);\n            else if(e.target.classList.contains('reconstructed'))\n                newBox.text(e.target.dataset.label);\n            //newBox.text(e.target.dataset.label,_texts);\n            else if(e.target.classList.contains('internal'))\n                edit.startReconstruction(e);\n        \n            removeBox();\n        },\n\n        keyDown(e) {\n            if(!_state.editing && e.key.substring(0,5) === 'Arrow') events.cycleVariant(e);\n            else if(e.ctrlKey || e.metaKey) {\n                if(e.key === 'Z')\n                    edit.redo();\n                else if(e.key === 'z')\n                    edit.undo();\n            }\n            else if(!_state.editing &&\n                    _state.matrix && !_state.matrix.closed &\n                    e.key === 'Enter') {\n                const td = find.highlitcell();\n                if(td) {\n                    e.preventDefault();\n                    edit.startEditCell(td);\n                }\n            }\n        },\n\n        cycleVariant(e) {\n            const highlitcell = find.highlitcell() || \n                _state.viewdiv.querySelector('td.highlit') ||\n                _state.viewdiv.querySelector('td[data-n=\"0\"]');\n\n            switch (e.key) {\n\n            case 'ArrowRight': {\n                if(!_state.matrix.closed && highlitcell) {\n                    const next = highlitcell.nextElementSibling;\n                    if(next) events.textClick({target: next});\n                } \n                else {\n                    const highlit = _state.viewdiv.querySelector('.highlit');\n                    const cur = highlit ? highlit.dataset.n : 0;\n                    let next = parseInt(cur)+1;\n                    while(next <= _state.maxlemma) {\n                        const nextlemmata = _state.viewdiv.querySelectorAll('[data-n=\"'+next+'\"]');\n                        for(const nextlemma of nextlemmata) {\n                            if(nextlemma && !nextlemma.classList.contains('invisible')) {\n                                events.textClick({target: nextlemma});\n                                return;\n                            }\n                        }\n                        next++;\n                    }\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if(!_state.matrix.closed && highlitcell) {\n                    const prev = highlitcell.previousElementSibling;\n                    if(prev) events.textClick({target: prev});\n                }\n                else {\n                    const highlit = _state.viewdiv.querySelector('.highlit');\n                    const cur = highlit ? highlit.dataset.n : 0;\n                    let prev = parseInt(cur) -1;\n                    while(prev >= 0) {\n                        const prevlemmata = _state.viewdiv.querySelectorAll('[data-n=\"'+prev+'\"]');\n                        for(const prevlemma of prevlemmata) {\n                            if(prevlemma && !prevlemma.classList.contains('invisible')) {\n                                events.textClick({target: prevlemma});\n                                return;\n                            }\n                        }\n                        prev--;                        if(highlitcell) {\n                            events.textClick({target: highlitcell.previousElementSibling});\n                            return;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if(_state.matrix.closed || !highlitcell) return;\n\n                const tr = highlitcell.closest('tr'); \n                const prevtr = tr.previousElementSibling;\n                if(!prevtr || !prevtr.dataset.n) return;\n                const newtd = prevtr.querySelector(`td[data-n=\"${highlitcell.dataset.n}\"]`);\n                events.textClick({target: newtd});\n                \n                break;\n            }\n            case 'ArrowDown': {\n                if(_state.matrix.closed || !highlitcell) return;\n                const tr = highlitcell.closest('tr'); \n                const nexttr = tr.nextElementSibling;\n                if(!nexttr || nexttr.tagName !== 'TR') return;\n                const newtd = nexttr.querySelector(`td[data-n=\"${highlitcell.dataset.n}\"]`);\n                events.textClick({target: newtd});\n            }\n            } // end switch\n        },\n\n        textClick(e,skipRight = false) {\n            if(e.target.closest('tr.header')) {\n                events.matrixHeaderClick(e);\n                return;\n            }\n            const targ = e.target.classList.contains('lemma') ? \n                e.target :\n                e.target.closest('.lemma');\n\n            if(targ) {\n                if(!skipRight && e.ctrlKey) {\n                    events.rightClick(e);\n                    return;\n                }\n                const n = targ.dataset.n;\n                const matrixrow = find.highlitrow();\n                multi.unHighlightAll();\n                multi.highlightLemma(n);\n                multi.repopulateTrees(n);\n                view.xScroll(n,matrixrow);\n                if(targ.tagName === 'TD')\n                    targ.classList.add('highlitcell');\n                else {\n                    const textbox = targ.closest('.text-box');\n                    if(textbox) {\n                        const textid = textbox.dataset.id;\n                        const td = find.tr(textid).querySelector(`td[data-n=\"${n}\"]`);\n                        td.classList.add('highlitcell');\n                    }\n                }\n\n            }\n        },\n\n        textMouseup() {\n            const nums = findSelection();\n            multi.highlightRange(nums);\n            clearSelection();\n        },\n\n        /*const lemmaMouseover = function(e) {\n        \n        const title = e.target.dataset.title;\n        if(!title) return;\n\n        const box = document.createElement('div');\n        box.id = 'tooltip';\n        box.style.top = e.pageY + 'px';//(e.clientY + 10) + 'px';\n        box.style.left = e.pageX + 'px';//e.clientX + 'px';\n        box.style.opacity = 0;\n        box.style.transition = 'opacity 0.2s ease-in';\n        _state.viewdiv.parentElement.appendChild(box);\n\n        const textbox = document.createElement('div');\n        textbox.appendChild(document.createTextNode(title));\n        box.appendChild(textbox);\n        window.getComputedStyle(box).opacity;\n        box.style.opacity = 1;\n        \n        e.target.addEventListener('mouseout', removeBox);\n    };\n    */\n\n        menuMouseover(e) {\n            const targ = e.target.classList.contains('menubox') ?\n                e.target :\n                e.target.closest('.menubox');\n            if(targ) {\n                const ul = targ.querySelector('ul');\n                if(ul) ul.style.display = 'block';\n                targ.classList.add('open');\n            }\n        },\n        menuMouseout(e) {\n            const targ = e.target.classList.contains('menubox') ?\n                e.target :\n                e.target.closest('.menubox');\n            if(targ) {\n                const ul = targ.querySelector('ul');\n                if(ul) ul.style.display = 'none';\n                targ.classList.remove('open');\n            }\n        },\n        menuClick(e) {\n            if(!e.target.parentElement) return;\n            /*\n        if(e.target.parentElement.className === 'ed') {\n            events.menuMouseout(e);\n            newBox.text(e.target.dataset.name,_editions);\n        }\n    */\n            if(e.target.parentElement.className === 'ms') {\n                events.menuMouseout(e);\n                newBox.text(e.target.dataset.name);\n            //newBox.text(e.target.dataset.name,_texts);\n            }\n            if(e.target.parentElement.className === 'tree') {\n                events.menuMouseout(e);\n                if(e.target.closest('li[data-name]'))\n                    newBox.tree(e.target.dataset.stemmaid,e.target.dataset.treeid);\n            }\n        },\n\n        thDragStart(e) {\n            e.dataTransfer.setData('text/plain',e.target.textContent);\n            //    _state.dragged.parentNode.classList.add('dragging');\n            edit.startMoveRow(e.target.parentNode,e);\n        },\n        trDragEnter(e) {\n            const tr = e.target.nodeType === 1 ? \n                e.target.closest('tr') :\n                e.target.parentElement.closest('tr');\n            if(tr)\n                tr.classList.add('dragenter');\n        },\n        trDragLeave(e) {\n            const tr = e.target.nodeType === 1 ?\n                e.target.closest('tr') :\n                e.target.parentElement.closest('tr'); \n            if(tr)\n                tr.classList.remove('dragenter');\n        },\n\n        trDragDrop(e) {\n            e.preventDefault();\n            /*    _state.dragged.parentNode.classList.remove('dragging');\n        const tr = e.target.nodeType === 1 ?\n                e.target.closest('tr') :\n                e.target.parentElement.closest('tr');\n        if(tr) {\n            tr.classList.remove('dragenter');\n            edit.doMoveRow(_state.dragged.parentNode,tr);\n            _state.dragged = null;\n        }\n        */\n            edit.finishMoveRow(e);\n        },\n\n        matrixMousedown(e) {\n            if(e.button !== 0) return;\n            if(e.ctrlKey) {events.rightClick(e); return;}\n            const lemma = e.target.nodeType === 1 ?\n                e.target.closest('.lemma') :\n                e.target.parentElement.closest('.lemma');\n            if(lemma) {\n            \n                if(lemma.isContentEditable) return;\n\n                multi.unHighlightAll();\n                multi.highlightLemma(lemma.dataset.n);\n                const tabl = _state.matrix.boxdiv.querySelector('table');\n                tabl.addEventListener('mouseover',events.matrixMouseover);\n                tabl.addEventListener('mouseup',events.matrixMouseup);\n            }\n        },\n        matrixMouseup(/*e*/) {\n            const nums = find.highlit();\n            multi.highlightRange(nums);\n            const tabl = _state.matrix.boxdiv.querySelector('table');\n            tabl.removeEventListener('mouseover',events.matrixMouseover);\n            tabl.removeEventListener('mouseup',events.matrixMouseup);\n        },\n        matrixMouseover(e) {\n            const lemma = e.target.nodeType === 1 ?\n                e.target.closest('.lemma') :\n                e.target.parentElement.closest('.lemma');\n            if(lemma)\n                multi.highlightLemma(lemma.dataset.n);\n        },\n        matrixHeaderClick(e) {\n            if(e.target.tagName !== 'INPUT') return;\n            const type = e.target.className;\n            if(type !== 'insignificant' && type !== 'binary') return;\n            const num = e.target.closest('th').dataset.ref;\n            const state = find.firsttd(num).dataset[type] === 'true' ? false : true;\n            const states = new Map([[num,state]]);\n            //if(find.firsttd(num).dataset[type] === 'true') e.target.checked = true;\n            //else e.target.checked = false;\n            //edit.startMarkAs(e.target.className,nums,e);\n            edit.doMarkAs(type,states);\n        },\n\n        rightClick(e) {\n            const th = e.target.nodeType === 1 ?\n                e.target.closest('tr[data-n] th') :\n                e.target.parentElement.closest('tr[data-n] th');\n            if(th) {\n                e.preventDefault();\n                contextMenu.remove();\n                const menu = contextMenu.create(e);\n                const items = [\n                    {text: 'move row',\n                        func: edit.startMoveRow.bind(null,th.parentNode),\n                    },\n                    {\n                        text: 'delete row',\n                        func: edit.doDeleteRow.bind(null,th.parentNode.dataset.n),\n                    }\n                ];\n                contextMenu.populate(menu,items);\n                contextMenu.show(menu);\n                return;\n            }\n\n            const td = e.target.nodeType === 1 ?\n                e.target.closest('td.lemma') :\n                e.target.parentElement.closest('td.lemma');\n            if(td) {\n                e.preventDefault();\n                const nums = !td.classList.contains('highlit') ?\n                    (events.textClick(e,true), new Set([td.dataset.n])) :\n                    (function() {\n                        const ret = find.highlit();\n                        if(ret.size === 1 && \n                       !td.classList.contains('highlitcell')) {\n                            multi.unCelllightAll(); \n                            td.classList.add('highlitcell');\n                        }\n                        return ret;\n                    })();\n                const items = nums.size > 1 ? \n                    [\n                        {text: 'merge columns',\n                            func: edit.startMerge.bind(null,nums)\n                        },\n                        {text: 'ungroup columns',\n                            alt: 'group columns',\n                            toggle: check.grouped,\n                            func: edit.startGroup.bind(null,false)\n                        },\n                        {text: 'delete columns',\n                            func: edit.startRemoveCol.bind(null,nums)\n                        },\n                        /*                {text: 'insignificant',\n                     cond: check.checkbox.bind(null,'insignificant',nums),\n                     func: edit.startMarkAs.bind(null,'insignificant',nums),\n                    },\n                    {text: 'binary',\n                     cond: check.checkbox.bind(null,'binary',nums),\n                     func: edit.startMarkAs.bind(null,'binary',nums),\n                    }, */\n                    ] : \n                    [\n                        {text: 'edit cell',\n                            func: edit.startEditCell.bind(null,td)\n                        },\n                        {text: 'delete column',\n                            func: edit.startRemoveCol.bind(null,nums)\n                        },\n                        {text: 'insert column',\n                            func: edit.startInsertCol\n                        },\n                        /*                {text: 'insignificant',\n                     cond: check.checkbox.bind(null,'insignificant',nums),\n                     func: edit.startMarkAs.bind(null,'insignificant',nums),\n                    },\n                    {text: 'binary',\n                     cond: check.checkbox.bind(null,'binary',nums),\n                     func: edit.startMarkAs.bind(null,'binary',nums),\n                    }, */\n                    ];\n                contextMenu.remove();\n                const menu = contextMenu.create(e);\n                contextMenu.populate(menu,items);\n                contextMenu.show(menu);\n            }\n        },\n        \n    };\n\n    const edit = {\n        undo: function() {\n            const action = _state.undo.pop();\n            if(action)\n                action[0](...action[1]);\n        },\n        redo: function() {\n            const action = _state.redo.pop();\n            if(action)\n                action[0](...action[1]);\n        },\n        doStack: function(entry,doing = 'do') {\n            if(doing === 'undo') {\n                entry[1].push('redo');\n                _state.redo.push(entry);\n            }\n            else if(doing === 'redo') {\n                entry[1].push('undo');\n                _state.undo.push(entry);\n            }\n            else {\n                entry[1].push('undo');\n                _state.undo.push(entry);\n                _state.redo = [];\n            }\n        },\n    \n        doMulti: function(dolist,doing) {\n            const undolist = [];\n            for(const item of dolist) {\n                const ret = item[0](...item[1],'multido');\n                undolist.unshift(ret);\n            }\n            edit.doStack([edit.doMulti,[undolist]],doing);\n        },\n\n\n        startMoveRow: function(targ,e) {\n            _state.dragged = targ;\n            _state.dragged.classList.add('dragging');\n            if(e.type !== 'dragstart') {\n                for(const tr of find.trs())\n                    tr.classList.add('moveinprogress');\n                _state.matrix.boxdiv.querySelector('table').addEventListener('mousedown',edit.finishMoveRow);\n            }\n        },\n\n        startMerge: function(nums,/*e*/) {\n            const numss = nums === false ?\n                find.highlit() :\n                nums;\n            const clgroups = find.clauses(numss,true);\n            if(!clgroups) {\n                edit.doMerge(numss,'do');\n            }\n            else if(clgroups[0] === null) {\n                const args = clgroups.filter(s => s!== null)\n                    .map(s => [edit.doUngroup,[s]])\n                    .concat([[edit.doMerge,[numss]]]);\n                edit.doMulti(args,'do');\n            }\n            else {\n                const toremove = find.clausesToRemove(clgroups,numss);\n                if(!toremove)\n                    edit.doMerge(numss,'do');\n                else {\n                    const args = toremove.map(s => [edit.doUngroup,[s]])\n                        .concat([[edit.doMerge,[numss]]]);\n                    edit.doMulti(args,'do');\n                }\n\n            }\n        },\n\n        startGroup: function(nums,/*e*/) {\n            const numss = nums === false ?\n                find.highlit() :\n                nums;\n            if(check.grouped())\n                edit.startUngroup(numss);\n            else\n                edit.doGroup(numss,'do');\n        },\n\n        startUngroup: function(nums) {\n            /*        const firstrow = _state.xml.querySelector('text');\n\n        // make a list of clauses\n        const cls = new Set();\n        for(const num of nums) {\n            const word = firstrow.querySelector('w[n=\"'+num+'\"]');\n            const cl = word.closest('cl');\n            if(cl) cls.add(cl);\n        }\n        const args = [...cls].map(function(cl) {\n            const words = cl.querySelectorAll('w');\n            return [edit.doUngroup,\n                    [new Set([...words].map(w => w.getAttribute('n')))]\n                   ];\n        }); */\n            const clgroups = find.clauses(nums);\n            const args = [...clgroups].map(s => [edit.doUngroup,[s]]);\n            edit.doMulti(args,'do');\n        },\n        \n        startInsertCol: function() {\n            const insertafter = Math.max([...find.highlit()]) || _state.maxlemma;\n            edit.doInsertCol(insertafter);\n        },\n\n        startRemoveCol: function(nums,/*e*/) {\n            const numss = nums === false ?\n                find.highlit() :\n                nums;\n\n            const clgroups = find.clauses(numss);\n            if(!clgroups) {\n                edit.doRemoveCol(numss,'do');\n            }\n            else {\n                const toremove = find.clausesToRemove(clgroups,numss,1);\n                if(!toremove)\n                    edit.doRemoveCol(numss,'do');\n                else {\n                    const args = toremove.map(s => [edit.doUngroup,[s]])\n                        .concat([[edit.doRemoveCol,[numss]]]);\n                    edit.doMulti(args,'do');\n                }\n            }\n        },\n\n        startRemoveEmpty: function() {\n            const nums = find.empty();\n            const clgroups = find.clauses(nums);\n            if(!clgroups) {\n                edit.doRemoveCol(nums,'do');\n            }\n            else {\n                const toremove = find.clausesToRemove(clgroups,nums,1);\n                if(!toremove)\n                    edit.doRemoveCol(nums,'do');\n                else {\n                    const args = toremove.map(s => [edit.doUngroup,[s]])\n                        .concat([[edit.doRemoveCol,[nums]]]);\n                    edit.doMulti(args,'do');\n                }\n            }\n        },\n\n        startEditCell: function(el) {\n        //const cell = el || document.querySelector('.matrix td.highlitcell');\n            const cell = el || find.highlitcell();\n            if(!cell) return;\n            //cell.classList.add('highlitcell');\n            edit.unnormalize(cell);\n            cell.dataset.oldContent = cell.textContent;\n        \n            cell.contentEditable = 'true';\n            cell.focus();\n            _state.editing = true;\n            events.selectAll(cell);\n            cell.addEventListener('blur',edit.finishEditCell);\n            cell.addEventListener('keydown',edit.cellKeyDown);\n        },\n\n        cellKeyDown: function(e) {\n            switch(e.key) {\n            case 'Enter':\n                edit.finishEditCell(e);\n                break;\n            case 'Escape':\n                edit.finishEditCell(e,true);\n                break;\n            case 'ArrowRight': {\n                const pos = find.cursorPos(e.target);\n                if(pos[0] === pos[1]) {\n                    e.preventDefault();\n                    edit.finishEditCell(e);\n                    events.cycleVariant({key: 'ArrowRight'});\n                    edit.startEditCell(find.highlitcell()); \n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                const pos = find.cursorPos(e.target);\n                if(pos[0] === 0) {\n                    e.preventDefault();\n                    edit.finishEditCell(e);\n                    events.cycleVariant({key: 'ArrowLeft'});\n                    edit.startEditCell(find.highlitcell()); \n                }\n                break;\n            }\n            \n            }\n        },\n     \n        startMarkAs: function(type,nums,e) {\n            const targ = e.target.tagName === 'INPUT' ?\n                e.target :\n                e.target.querySelector('input');\n            const numss = nums === false ?\n                find.highlit() :\n                nums;\n            const states = new Map([...numss].map(num => [num,!targ.checked]));\n            edit.doMarkAs(type,states);\n            /*        const cells = [...nums].reduce((acc,num) =>\n            acc.concat([...document.querySelectorAll('.matrix table [data-n=\"'+num+'\"]')]),\n            []);\n        if(targ.checked === true)\n            for(const cell of cells)\n                delete cell.dataset.insignificant;\n        else\n            for(const cell of cells)\n                cell.dataset.insignificant = 'true';\n        _state.undo.push([edit.unmarkSignificance,[oldstates,true]]); */\n        },\n    \n        startNewRow: function() {\n            const tr = make.row('new row');\n            const th = tr.querySelector('th');\n            th.contentEditable = true;\n            th.addEventListener('blur',edit.finishNewRow);\n            th.addEventListener('keydown',edit.thKeyDown);\n\n            _state.matrix.boxdiv.querySelector('tbody').appendChild(tr);\n            th.scrollIntoView();\n            th.focus();\n            document.execCommand('selectAll',false,null);\n            _state.editing = true;\n        },\n\n        startRenameRow: function(/*n*/) {\n        // TODO\n        },\n\n        startReconstruction: function(e) {\n            const key = e.target.dataset.key;\n            const tree = e.target.closest('.tree-box').myTree;\n            const treename = tree.desc;\n            const blackout = document.createElement('div');\n            blackout.id = 'blackout';\n            const frag = document.createRange().createContextualFragment(\n                `<div id=\"reconstructionoptions\" class=\"popup\">\n    <form id=\"reconstructionform\">\n      <div>\n        <label for=\"reconstructed_node_name\">Label for node:</label>\n        <input type=\"text\" id=\"reconstructed_node_name\" name=\"reconstructed_node_name\" placeholder=\"${treename}-${key}\" size=\"15\">\n      </div>\n      <div style=\"width: 100%; display: flex; justify-content: center;padding-top: 1em;\">\n        <button type=\"submit\">Add to matrix</button>\n      </div>\n    </form>\n</div>`);\n            blackout.appendChild(frag);\n            document.body.appendChild(blackout);\n            const submitfunction = function(e) {\n                e.preventDefault();\n                const input = blackout.querySelector('input');\n                const label = input.value ? input.value : input.placeholder;\n                edit.doReconstruction(tree,key,label);\n                document.body.removeChild(blackout);\n            };\n            const submit = blackout.querySelector('button');\n            submit.addEventListener('click',submitfunction);\n            blackout.addEventListener('click',exp.blackoutClick);\n        },\n\n        thKeyDown: function(e) {\n            if(e.key === 'Enter')\n                edit.finishNewRow(e);\n        },\n\n        finishNewRow: function(e) {\n            const th = e.target;\n            const label = th.textContent;\n            th.closest('tr').dataset.n = label;\n        \n            const tei = make.tei(label);\n\n            _state.xml.documentElement.appendChild(tei);\n        \n            _state.editing = false;\n            th.contentEditable = false;\n            th.removeEventListener('blur',edit.finishNewRow);\n            th.removeEventListener('keydown',edit.thKeyDown);\n            // view.updateAllHeaders(); // new row is empty\n            edit.doStack([edit.doDeleteRow,[label]],'do');\n        },\n\n        finishEditCell: function(e,cancel = false) {\n            const cell = e.target;\n            //cell.classList.remove('highlitcell');\n            _state.editing = false;\n            cell.contentEditable = 'false';\n            cell.removeEventListener('blur',edit.finishEditCell);\n            cell.removeEventListener('keydown',edit.cellKeyDown);\n            cell.blur();\n            events.deselect();\n            const content = cell.textContent;\n            \n            if(content === '') {\n                const br = cell.querySelector('br');\n                if(br) br.remove();\n            }\n\n            if(cancel || content === cell.dataset.oldContent) return;\n        \n            if(!cell.hasOwnProperty('IAST'))\n                cell.IAST = cell.cloneNode(true);\n            cell.IAST.textContent = content;\n\n            const cellnum = parseInt(cell.dataset.n);\n            const tr = cell.closest('tr');\n            const rownum = tr.dataset.n;\n            edit.xmlChangeCell(cellnum,rownum,content);\n\n            /*\n            const row = cell.closest('tr');\n            //const table = row.parentNode;\n            const trs = [...find.trs()];\n            const rownum = trs.indexOf(row);\n            edit.xmlChangeCell(cellnum,rownum,content);\n            */\n            if(tr.dataset.hasOwnProperty('treename') && !cell.dataset.hasOwnProperty('emended')) {\n                const emendaction = edit.doEmend(cellnum,rownum,'multido');\n                const dolist = [];\n                dolist.push([edit.doChangeCell,[cellnum,rownum,cell.dataset.oldContent]]);\n                dolist.push(emendaction);\n                edit.doStack([edit.doMulti,[dolist]],'do');\n            }\n            else\n                edit.doStack([edit.doChangeCell,[cellnum,rownum,cell.dataset.oldContent]],'do');\n            delete cell.dataset.oldContent;\n\n            //view.renormalize(cellnum-1,cellnum+1,rownum);\n            edit.refresh();\n            //view.updateHeaders([cellnum]);\n            view.updateAllHeaders(true);\n            cell.classList.add('highlitcell');\n        },\n\n        finishMoveRow: function(e) {\n            const tr = e.target.nodeType === 1 ?\n                e.target.closest('tr') :\n                e.target.parentElement.closest('tr');\n            if(tr)\n                edit.doMoveRow(_state.dragged,tr,'do');\n            if(e.type !== 'drop') {\n                for(const tr of find.trs())\n                    tr.classList.remove('moveinprogress');\n                _state.matrix.boxdiv.querySelector('table').removeEventListener('mousedown',edit.finishMoveRow);\n            }\n            else {\n                for(const tr of find.trs())\n                    tr.classList.remove('dragenter');\n            }\n            _state.dragged.classList.remove('dragging');\n            _state.dragged = null;\n        },\n    \n        doReconstruction: function(tree,key,label) {\n \n            const tr = make.row(label,'pending');\n            tr.dataset.treename = tree.name;\n            tr.dataset.nodename = key;\n            const th = tr.querySelector('th');\n            const spinner = document.createElement('div');\n            spinner.id = 'spinner';\n            th.prepend(spinner);\n\n            const tei = make.tei(label);\n            tei.setAttribute('type','reconstructed');\n            tei.setAttribute('corresp',tree.name);\n            tei.setAttribute('select',`#${key}`);\n        \n            const tds = [...find.tds(false,tr)];\n            const words = [...find.words(false,tei)];\n        \n            _state.matrix.boxdiv.querySelector('tbody').appendChild(tr);\n            th.scrollIntoView();\n\n            const workerblob = new Blob(['('+worker.fitch.toString()+')()'],{type: 'application/javascript'});\n            const fitchWorker = new Worker(window.URL.createObjectURL(workerblob));\n            const serialreadings = find.serializedtexts(tree.nexml);\n            const seriallevels = find.serializedlevels(tree.levels);\n\n            fitchWorker.postMessage({readings:serialreadings,levels:seriallevels,num:0,id:key});\n            fitchWorker.onmessage = function(e) {\n                const n = e.data.n;\n                const reading = e.data.result;\n                tds[n].textContent = reading;\n                tds[n].IAST = tds[n].cloneNode(true);\n                tds[n].classList.remove('pending');\n                words[n].textContent = reading;\n                if(n < _state.maxlemma)\n                    fitchWorker.postMessage({readings:serialreadings,levels:seriallevels,num:n+1,id:key});\n                else {\n                    th.removeChild(spinner);\n                    _state.xml.documentElement.appendChild(tei);\n                    view.updateAllHeaders();\n                    tree.draw();\n                    const hl = find.highlit();\n                    if(hl.size > 0) multi.repopulateTrees(...find.lowhigh(hl));\n\n                    const mslist = document.getElementById('menu').querySelector('.ms');\n                    const liel = document.createElement('li');\n                    liel.setAttribute('data-name',label);\n                    liel.appendChild(document.createTextNode(label));\n                    mslist.appendChild(liel);\n                    \n                    edit.doStack([edit.doDeleteRow,[label]],'do');\n\n                }\n            };\n        },\n\n        doDeleteRow: function(label,doing = 'do') {\n            const htmlrow = find.tr(label);\n            const xmlrow = find.tei(label);\n            const teis = [...find.teis()];\n            const index = teis.indexOf(xmlrow);\n\n            htmlrow.parentNode.removeChild(htmlrow);\n            xmlrow.parentNode.removeChild(xmlrow);\n            view.updateAllHeaders();\n            mssMenuPopulate();\n            drawTrees();\n            edit.doStack([edit.doUndeleteRow,[htmlrow,xmlrow,index]],doing);\n        },\n\n        doUndeleteRow: function(htmlrow,xmlrow,index,doing = 'do') {\n            const label = xmlrow.getAttribute('n');\n            const teis = [...find.teis()];\n            if(index === teis.length) {\n                _state.xml.documentElement.appendChild(xmlrow);\n                _state.matrix.boxdiv.querySelector('tbody').appendChild(htmlrow);\n            }\n            else {\n                const trs = [...find.trs()];\n                _state.xml.documentElement.insertBefore(xmlrow,teis[index]);\n                trs[index].parentNode.insertBefore(htmlrow,trs[index]);\n            }\n            view.updateAllHeaders();\n            mssMenuPopulate();\n            drawTrees();\n            edit.doStack([edit.doDeleteRow,[label]],doing);\n        },\n\n        doMoveRow: function(movetr,appendafter,doing = 'do') {\n            const table = movetr.parentNode;\n            //const trs = [...table.children];\n            const trs = [...find.trs()];\n            const oldsib = movetr.previousElementSibling;\n            const previndex = trs.indexOf(movetr);\n            const appendindex = appendafter !== null ?\n                trs.indexOf(appendafter) :\n                null;\n            const HTMLMove = function() {\n                if(appendafter === null)\n                    table.insertBefore(movetr,table.firstChild);\n                else if(appendafter.nextElementSibling)\n                    table.insertBefore(movetr,appendafter.nextElementSibling);\n                else\n                    table.appendChild(movetr);\n            };\n            const XMLMove = function() {\n                const root = _state.xml.documentElement;\n                const teis = [...find.teis()];\n                const moverow = teis[previndex];\n                if(appendindex === null)\n                    root.insertBefore(moverow,teis[0]);\n                else {\n                    const appendxml = teis[appendindex];\n                    if(appendxml.nextElementSibling)\n                        root.insertBefore(moverow,appendxml.nextElementSibling);\n                    else\n                        root.appendChild(moverow);\n                }\n            };\n            HTMLMove();\n            XMLMove();\n            if(doing === 'multido')\n                return [edit.doMoveRow,[movetr,oldsib]];\n            else\n                edit.doStack([edit.doMoveRow,[movetr,oldsib]],doing);\n        },\n\n        doMerge: function(nums,doing = 'do') {\n            /*        const merge = function(doc,selector,tag,attribute,nums) {\n            const rows = doc.querySelectorAll(selector);\n            var rowsclone = [];\n            for(const row of rows) {\n                const arr = [...nums].map(n => {\n                        const cell = row.querySelector(tag+'['+attribute+'=\"'+n+'\"]');\n                        edit.unnormalize(cell);\n                        return cell;\n                    });\n                const arrclone = arr.map(el => el.cloneNode(true));\n                rowsclone.push(arrclone);\n                const reduced = arr.reduce(function(acc,cur) {\n                    if(cur.hasChildNodes()) {\n                        const targ = cur.IAST ? cur.IAST : cur;\n                        if(acc.hasChildNodes())\n                            acc.appendChild(document.createTextNode(' '));\n                        while(targ.firstChild)\n                            acc.appendChild(targ.firstChild)\n                    }\n                    cur.parentNode.removeChild(cur);\n                    return acc;\n                    });\n                reduced.normalize();\n                reduced.IAST = reduced.cloneNode(true);\n            }\n            return [doc,selector,tag,attribute,rowsclone];\n        } */\n            const merge = function(rowfunc,cellfunc,nums) {\n                const rows = rowfunc();\n                var rowsclone = [];\n                for(const row of rows) {\n                    /*\n                    const arr = [...nums].map(n => {\n                        const cell = cellfunc(n,row);\n                        edit.unnormalize(cell);\n                        return cell;\n                    });\n                    */\n                    const arr = [...nums].map(n => cellfunc(n,row));\n                    const arrclone = arr.map(el => el.cloneNode(true));\n                    rowsclone.push(arrclone);\n                    for(const a of arr) edit.unnormalize(a);\n                    const reduced = arr.reduce(function(acc,cur) {\n                        if(cur.hasChildNodes()) {\n                            while(cur.firstChild)\n                                acc.appendChild(cur.firstChild);\n                        }\n                        cur.parentNode.removeChild(cur);\n                        return acc;\n                    });\n                    reduced.normalize();\n                    if(reduced.dataset) {\n                        delete reduced.dataset.normal;\n                        reduced.IAST = reduced.cloneNode(true);\n                    }\n                    else \n                        reduced.removeAttribute('lemma');\n                }\n                return [rowfunc,cellfunc,rowsclone];\n            };\n            //const oldhtml = merge(document,'.matrix tr','td','data-n',nums);\n            //const oldxml = merge(_state.xml,'text','w','n',nums);\n            const oldhtml = merge(find.trs,find.firsttd,nums);\n            const oldxml = merge(find.texts,find.firstword,nums);\n            const start = parseInt([...nums][0]);\n            edit.renumber(start);\n            //edit.renumber(document,'.matrix tr','td','data-n',start);\n            //edit.renumber(_state.xml,'text','w','n',start);\n            edit.restyleGroups(nums);\n            //view.renormalize(start,start+1);\n            edit.refresh();\n            view.updateAllHeaders();\n            //view.updateHeaders(nums);\n\n            if(doing === 'multido')\n                return [edit.doUnmerge,[oldhtml,oldxml]];\n            else\n                edit.doStack([edit.doUnmerge,[oldhtml,oldxml]],doing);\n        },\n    \n        doUnmerge: function(oldhtml,oldxml,doing = 'undo') {\n            /*        const unmerge = function(doc,parents,childs,attribute,oldels) {\n            const nums = oldels[0].map(el => el.getAttribute(attribute));\n            const firstn = nums[0];\n            const rows = doc.querySelectorAll(parents);\n            for(var n=0;n<rows.length;n++) {\n                const lastchild = oldels[n].pop();\n                const anchor = rows[n].querySelector(childs+'['+attribute+'=\"'+firstn+'\"]');\n                anchor.parentNode.replaceChild(lastchild,anchor);\n                for(const cell of oldels[n]) \n                    lastchild.parentNode.insertBefore(cell,lastchild);\n            }\n            edit.renumber(doc,parents,childs,attribute,firstn);\n            return nums;\n        } */\n            const unmerge = function(rowfunc,cellfunc,oldels) {\n                const attr = find.whichattr(oldels[0][0]);\n                const nums = oldels[0].map(el => el.getAttribute(attr));\n                const firstn = nums[0];\n                const rows = rowfunc();\n                for(var n=0;n<rows.length;n++) {\n                    const lastchild = oldels[n].pop();\n                    const anchor = cellfunc(firstn,rows[n]);\n                    anchor.parentNode.replaceChild(lastchild,anchor);\n                    for(const cell of oldels[n]) \n                        lastchild.parentNode.insertBefore(cell,lastchild);\n                }\n                return nums;\n            };\n            unmerge(...oldhtml);\n            const nums = unmerge(...oldxml);\n            const sortednums = [...nums].sort((a,b) => parseInt(a)-parseInt(b));\n            const start = sortednums[0];\n            edit.renumber(start);\n            edit.reIAST(nums);\n            //const end = parseInt(sortednums[sortednums.length-1])+1;\n            //view.renormalize(start,end);\n            edit.refresh();\n            edit.restyleGroups(nums);\n            view.updateAllHeaders();\n\n            if(doing === 'multido')\n                return [edit.doMerge,[nums]];\n            else \n                edit.doStack([edit.doMerge,[nums]],doing);\n        },\n   \n        doGroup: function(nums,doing = 'do') {\n            const numarr = [...nums];\n            const firstnum = numarr.shift();\n        \n            const texts = find.texts();\n            for(const text of texts) {\n                //const cl = document.createElementNS('http://www.w3.org/1999/xhtml','cl');\n                const cl = document.createElementNS('http://www.tei-c.org/ns/1.0','cl');\n                const firstw = find.firstword(firstnum,text);\n                //const firstw = text.querySelector('w[n=\"'+firstnum+'\"]');\n                firstw.parentNode.insertBefore(cl,firstw);\n                cl.appendChild(firstw);\n                for(const num of nums)\n                    cl.appendChild(find.firstword(num,text));\n                //cl.appendChild(text.querySelector('w[n=\"'+num+'\"]'));\n            }\n\n            const lastnum = numarr.pop();\n        \n            for(const td of find.tds(firstnum)) {\n                td.classList.add('group-start');\n            }\n            for(const td of find.tds(lastnum)) {\n                td.classList.add('group-end');\n            }\n            for(const num of numarr) {\n                for(const td of find.tds(num)) {\n                    td.classList.add('group-internal');\n                }\n            }\n            \n            for(const textbox of _state.textboxes)\n                textbox.refresh();\n\n            if(doing === 'multido')\n                return [edit.doUngroup,[nums]];\n            else edit.doStack([edit.doUngroup,[nums]],doing);\n        },\n   \n        doUngroup: function(nums,doing = 'do') {\n        //const texts = _state.xml.querySelectorAll('text');\n            const texts = find.texts();\n\n            // ungroup xml\n            for(const text of texts) {\n                let cl;\n                for(const num of nums) {\n                    const word = find.firstword(num,text);\n                    //const word = text.querySelector('w[n=\"'+num+'\"]');\n                    if(!cl) cl = word.closest('cl');\n                    cl.parentNode.insertBefore(word,cl);\n                }\n                cl.parentNode.removeChild(cl);\n            }\n        \n            // ungroup html\n            const tds = [...nums].map(\n                n => [...find.tds(n)]\n            ).reduce((a,b) => a.concat(b),[]);\n            for(const td of tds)\n                td.classList.remove('group-start','group-internal','group-end');\n        \n            for(const textbox of _state.textboxes)\n                textbox.refresh();\n\n            if(doing === 'multido')\n                return [edit.doGroup,[nums]];\n            else\n                edit.doStack([edit.doGroup,[nums]],doing);\n        },\n        \n        doGroupWords: function() {\n            let groupstart = 0;\n            const todo = [];\n            for(let n=0;n<=_state.maxlemma;n++) {\n                const tds = find.tds(n);\n                const classtest = tds[0].classList; \n                if(classtest.contains('group-start') ||\n                   classtest.contains('group-internal') ||\n                   classtest.contains('group-end')) {\n                    \n                    groupstart = n+1;\n                    continue;\n                }\n\n                let total = tds.length;\n                let spaced = 0;\n                if(n === _state.maxlemma) spaced = total;\n                else {\n                    for(const td of tds) {\n\n                        const txt = td.IAST ? td.IAST.textContent : td.textContent;\n                        //if(txt === '')\n                        //    total--;\n                        //else \n                        if(txt.slice(-1) === ' ')\n                            spaced++;\n                    }\n                }\n\n                if(spaced / total >= 0.5) {\n                    if(groupstart === n) {\n                        groupstart++;\n                        continue;\n                    }\n                    else {\n                        const range = find.range(groupstart,n);\n                        todo.push([edit.doGroup,[range]]);\n                        groupstart = n+1;\n                    }\n                }\n            }\n\n            edit.doMulti(todo);\n        },\n\n        doRemoveCol: function(nums,doing = 'do') {\n            const remove = function(rowfunc,cellfunc,nums) {\n                const rows = rowfunc();\n                var rowsclone = [];\n                for(const row of rows) {\n                    const arr = [...nums].map(n => {\n                        const cell = cellfunc(n,row);\n                        edit.unnormalize(cell);\n                        return cell;\n                    });\n                    const arrclone = arr.map(el => el.cloneNode(true));\n                    rowsclone.push(arrclone);\n                    for(const td of arr)\n                        td.parentNode.removeChild(td);\n                }\n                return [rowfunc,cellfunc,rowsclone];\n            };\n            //const oldhtml = remove(document,'.matrix tr','td','data-n',nums);\n            //const oldxml = remove(_state.xml,'text','w','n',nums);\n            const oldhtml = remove(find.trs,find.firsttd,nums);\n            const oldxml = remove(find.texts,find.firstword,nums);\n            const sortednums = [...nums].sort((a,b) => parseInt(a)-parseInt(b));\n            const start = parseInt([...sortednums][0])-1;\n            edit.renumber(start);\n            //edit.renumber(document,'.matrix tr','td','data-n',start);\n            //edit.renumber(_state.xml,'text','w','n',start);\n            //view.renormalize(start-1,start);\n            edit.refresh();\n            edit.restyleGroups(nums,true);\n            view.updateAllHeaders();\n\n            if(doing === 'multido')\n                return [edit.doUnremoveCol,[oldhtml,oldxml]];\n            else\n                edit.doStack([edit.doUnremoveCol,[oldhtml,oldxml]],doing);\n\n        },\n\n        doUnremoveCol: function(oldhtml,oldxml,doing) {\n            const unremove = function(rowfunc,cellfunc,oldels) {\n                const attr = find.whichattr(oldels[0][0]);\n                const nums = oldels[0].map(el => el.getAttribute(attr));\n                const firstn = nums[0];\n                const rows = rowfunc();\n                for(var n=0;n<rows.length;n++) {\n                    const anchor = cellfunc(firstn,rows[n]);\n                    for(const cell of oldels[n])\n                        anchor.parentNode.insertBefore(cell,anchor);\n                }\n                //edit.renumber(doc,parents,childs,attribute,firstn);\n                return nums;\n            };\n            unremove(...oldhtml);\n            const nums = unremove(...oldxml);\n            const sortednums = [...nums].sort((a,b) => parseInt(a)-parseInt(b));\n            const start = parseInt(sortednums[0])-1;\n            edit.renumber(start);\n            const highlitcells = document.querySelectorAll('.highlitcell');\n            for(const cell of highlitcells)\n                cell.classList.remove('highlitcell');\n            edit.reIAST(nums);\n            //const end = parseInt(sortednums[sortednums.length-1])+1;\n            //view.renormalize(start,end);\n            edit.refresh();\n            edit.restyleGroups(nums,true);\n            view.updateAllHeaders();\n\n            if(doing === 'multido')\n                return [edit.doRemoveCol,[nums]];\n            else\n                edit.doStack([edit.doRemoveCol,[nums]],doing);\n        },\n\n        doInsertCol: function(aftern,doing = 'do') {\n            const insert = function(rowfunc,cellfunc,newfunc,aftern) {\n                const rows = rowfunc();\n                for(const row of rows) {\n                    const cell = cellfunc(aftern,row);\n                    const newcell = newfunc(aftern + 1);\n                    cell.insertAdjacentElement('afterend',newcell);\n                }\n            };\n            insert(find.trs,find.firsttd,make.emptycell,aftern);\n            insert(find.texts,find.firstword,make.emptyword,aftern);\n            edit.renumber(aftern);\n            //view.renormalize(aftern,aftern+2);\n            edit.refresh();\n            edit.restyleGroups([aftern,aftern+1],true);\n            view.updateAllHeaders();\n            \n            const arg = [aftern+1];\n            if(doing === 'multido')\n                return [edit.doRemoveCol,[arg]];\n            else\n                edit.doStack([edit.doRemoveCol,[arg]],doing);\n        },\n\n        doEmend: function(cellnum,rownum,doing = 'do') {\n            const tr = [...find.trs()][rownum];\n            const td = find.firsttd(cellnum,tr);\n            td.dataset.emended = true;\n\n            const text = find.tei(rownum).querySelector('text');\n            //const text = [...find.texts()][rownum];\n            const word = find.firstword(cellnum,text);\n            word.setAttribute('emended','true');\n            if(doing === 'multido')\n                return [edit.doUnemend,[cellnum,rownum]];\n            else\n                edit.doStack([edit.doUnemend,[cellnum,rownum]],doing);\n\n        },\n\n        doUnemend: function(cellnum,rownum,doing = 'do') {\n            const tr = [...find.trs()][rownum];\n            const td = find.firsttd(cellnum,tr);\n            delete td.dataset.emended;\n\n            const text = find.tei(rownum).querySelector('text');\n            //const text = [...find.texts()][rownum];\n            const word = find.firstword(cellnum,text);\n            word.removeAttribute('emended');\n            if(doing === 'multido')\n                return [edit.doEmend,[cellnum,rownum]];\n            else\n                edit.doStack([edit.doEmend,[cellnum,rownum]],doing);\n        },\n\n        doChangeCell: function(cellnum,rownum,content,doing = 'do') {\n            const oldcontent = edit.xmlChangeCell(cellnum,rownum,content);\n            const cell = edit.htmlChangeCell(cellnum,rownum,content);\n            //view.renormalize(cellnum-1,cellnum+1,rownum);    \n            edit.refresh();\n            view.updateAllHeaders(true);\n            events.textClick({target: cell});\n\n            if(doing === 'multido')\n                return [edit.doChangeCell,[cellnum,rownum,oldcontent]];\n            else\n                edit.doStack([edit.doChangeCell,[cellnum,rownum,oldcontent]],doing);\n        },\n\n        htmlChangeCell: function(cellnum,rownum,content) { // returns cell\n            const row = find.tr(rownum);\n            //const row = [...find.trs()][rownum];\n            const cell = find.firsttd(cellnum,row);\n            //const row = document.querySelector('.matrix table')\n            //                    .querySelectorAll('tr')[rownum];\n            //const cell = row.querySelector('td[data-n=\"'+cellnum+'\"]');\n            edit.unnormalize(cell);\n            cell.textContent = content;\n            if(cell.IAST) cell.IAST = cell.cloneNode(true);\n            return cell;\n        },\n    \n        xmlChangeCell: function(cellnum,rownum,content) { // returns oldcontent\n            const row = find.tei(rownum).querySelector('text');\n            //const row = [...find.texts()][rownum];\n            const cell = find.firstword(cellnum,row);\n            //const row = _state.xml.querySelectorAll('text')[rownum];\n            //const cell = row.querySelector('w[n=\"'+cellnum+'\"]');\n            edit.unnormalize(cell);\n            const oldcontent = cell.textContent;\n            if(cell.childNodes.length === 0)\n                cell.appendChild(document.createTextNode(content));\n            else\n                cell.textContent = content;\n            return oldcontent;\n        },\n\n        doMarkAs: function(type,states,doing = 'do') {\n            const nums = [...states.keys()];\n            const oldstates = find.attr(type,nums);\n            for(const num of nums) {\n                const cells = find.tds(num);\n                const words = find.words(num);\n                //const cells = document.querySelectorAll('.matrix table td[data-n=\"'+num+'\"]');\n                //const words = _state.xml.querySelectorAll('w[n=\"'+num+'\"]');\n                if(states.get(num) === true) {\n                    for(const cell of cells) \n                        cell.dataset[type] = 'true';\n                    for(const word of words)\n                        word.setAttribute(type,'true');\n                }\n                else {\n                    for(const cell of cells)\n                        delete cell.dataset[type];\n                    for(const word of words)\n                        word.removeAttribute(type);\n                }\n                const checkbox = find.checkbox(num,type);\n                checkbox.checked = states.get(num);\n            }\n            if(doing === 'multido')\n                return [edit.doMarkAs,[type,oldstates]];\n            edit.doStack([edit.doMarkAs,[type,oldstates]],doing);\n        }, \n\n        refresh: function() {\n            /*\n        var newcsvarr = [];\n        for(const [key,value] of _texts) {\n            const par = _state.xml.querySelector('[n=\"'+key+'\"] text');\n            const text = [...par.querySelectorAll('w')].map(w => w.innerHTML);\n            newcsvarr.push([key,{desc: value.desc, text: text}]);\n        }\n        _texts = new Map(newcsvarr);\n        for(const box of _state.textboxes)\n            box.refresh();\n*/\n            for(const textbox of _state.textboxes)\n                textbox.refresh();\n            multi.rehighlight();\n            if(!check.anyhighlit())\n                multi.clearTrees();\n            else\n                multi.repopulateTrees(...find.lowhigh(find.highlit()));\n        },\n\n        /*    renumber: function(doc,parents,childs,attribute,start=0) {\n        const rows = doc.querySelectorAll(parents);\n        for(const row of rows) {\n            const els = row.querySelectorAll(childs);\n            for(var n=parseInt(start)+1;n < els.length;n++)\n                els[n].setAttribute(attribute,n);\n        }\n    },*/\n        renumber: function(start=0) {\n            const dorenumber = function(rowfunc,cellfunc,start) {\n                const rows = rowfunc();\n                for(const row of rows) {\n                    const els = [...cellfunc(false,row)];\n                    const attr = find.whichattr(els[0]);\n                    for(var n=parseInt(start)+1;n < els.length;n++)\n                        els[n].setAttribute(attr,n);\n                }\n            };\n            dorenumber(find.trs,find.tds,start);\n            dorenumber(() => [true],find.ths,start);\n            dorenumber(find.texts,find.words,start);\n            _state.maxlemma = find.maxlemma();\n        //_state.maxlemma = find.firsttext().lastElementChild.getAttribute('n');\n        },\n    \n        reIAST: function(nums) {\n            const lemmata = [...nums].map(n => [...find.lemmata(n)]).flat();\n            for(const lemma of lemmata)\n                lemma.IAST = lemma.cloneNode(true);\n        },\n\n        restyleGroups: function(ns,extend = false) {\n            const pend = function(arr) {\n                var newarr = [...arr];\n                const prepend = parseInt(ns[0]) - 1;\n                const postpend = parseInt(ns[ns.length-1]) + 1;\n                newarr.unshift(prepend);\n                newarr.push(postpend);\n                return newarr;\n            };        \n\n            const nums = extend ? pend(ns) : ns;\n\n            const changeClass = function(els,c_lass = false) {\n                const classes = new Set(['group-start','group-internal','group-end']);\n                if(c_lass) classes.delete(c_lass);\n\n                for(const el of els) {\n                    for(const c of classes)\n                        el.classList.remove(c);\n                    if(c_lass)\n                        el.classList.add(c_lass);\n                }\n            };\n\n            for(const num of nums) {\n                const word = find.firstword(num);\n                const tds = find.tds(num);\n                if(tds.length === 0) continue;\n                const cl = word.closest('cl');\n                if(cl) {\n                    if(word === cl.firstElementChild)\n                        changeClass(tds,'group-start');\n                    else if(word === cl.lastElementChild) {\n                        changeClass(tds,'group-end');\n                    }\n                    else\n                        changeClass(tds,'group-internal');\n                }\n                else\n                    changeClass(tds);\n            }\n        },\n        \n        startRenormalize: function(nums) {\n            const numss = nums === false ?\n                find.highlit() :\n                nums;\n            edit.doRenormalize(Math.min(...numss),Math.max(...numss));\n        },\n\n        doRenormalize: function(startnum, endnum, rownum=false, doing='do') {\n            const showNormalized = check.normalizedView();\n            \n            const changedrows = new Map();\n\n            const htmlrows = [...find.trs()];\n            const xmlrows = [...find.texts()];\n            const rownums = rownum ? [rownum] : [...htmlrows.keys()];\n\n            for(const r of rownums) {\n                const changedrow = new Map();\n                const xmlrow = xmlrows[r];\n                const allwords = [...find.words(false,xmlrow)];\n                const firstword = find.firstword(startnum,xmlrow);\n                const lastword = find.firstword(endnum,xmlrow);\n                const startn = allwords.indexOf(firstword);\n                const endn = allwords.indexOf(lastword);\n                const words = allwords.slice(startn, endn + 1);\n\n                const htmlrow = htmlrows[r];\n                const alltds = [...find.tds(false,htmlrow)];\n                const tds = alltds.slice(startn, endn + 1);\n\n                const unnormwords = words.map(w => w.textContent);\n                const normwords = Normalizer(unnormwords);\n                \n                for(let n=0;n<normwords.length;n++) {\n                    const word = words[n];\n                    const normword = normwords[n];\n                    const unnormword = unnormwords[n];\n                    const td = tds[n];\n\n                    const oldlemma = word.hasAttribute('lemma') ?\n                        word.getAttribute('lemma') :\n                        false;\n                    if(oldlemma !== false) {\n                        if(oldlemma === normword) continue;\n                        else {\n                            changedrow.set(td.dataset.n,oldlemma);\n                            edit.unnormalize(word);\n                            edit.unnormalize(td);\n                        }\n                    }\n                    else changedrow.set(td.dataset.n,null);\n\n                    if(normword !== unnormword) {\n                        word.setAttribute('lemma',normword);\n                        td.dataset.normal = normword;\n\n                        if(showNormalized) td.textContent = normword;\n                    }\n                }\n                changedrows.set(r,changedrow);\n            }\n            view.updateAllHeaders(true);\n            view.xScrollToHighlit();\n\n            edit.doStack([edit.doUnrenormalize,[changedrows]],doing);\n        },\n        \n        doUnrenormalize: function(rowsmap,doing = 'undo') {\n            const showNormalized = check.normalizedView();\n            const undomap = new Map();\n            const htmlrows = [...find.trs()];\n            const xmlrows = [...find.texts()];\n\n            for(const [rownum, row] of rowsmap.entries()) {\n                const htmlrow = htmlrows[rownum];\n                const xmlrow = xmlrows[rownum];\n                const undorowmap = new Map();\n\n                for(const [n, normword] of row.entries()) {\n                    const td = find.firsttd(n,htmlrow);\n                    const word = find.firstword(n,xmlrow);\n\n                    const undo = word.hasAttribute('lemma') ?\n                        word.getAttribute('lemma') :\n                        null;\n                    undorowmap.set(n,undo);\n                    \n                    if(normword === null) {\n                        edit.unnormalize(td);\n                        edit.unnormalize(word);\n                    }\n                    else {\n                        td.dataset.normal = normword;\n                        word.setAttribute('lemma',normword);\n                        if(showNormalized) td.textContent = normword;\n                    }\n                }\n                undomap.set(rownum,undorowmap);\n            }\n            edit.doStack([edit.doUnrenormalize,[undomap]],doing);\n        },\n\n        unnormalize: function(cell) {\n            if(cell.hasOwnProperty('IAST'))\n                cell.textContent = cell.IAST.textContent;\n            if(cell.dataset && cell.dataset.hasOwnProperty('normal')) {\n                delete cell.dataset.normal;\n            }\n            if(cell.getAttribute('lemma'))\n                cell.removeAttribute('lemma');\n        },\n\n    }; // end edit\n\n    const view = {\n        toggleNormalize: function() {\n            if(check.normalizedView())\n                view.showUnnormalized();\n            else\n                view.showNormalized();\n        },\n        showNormalized: function(box) {\n            if(box) // called from Box.show()\n                box.updatescript();\n            else {\n                const par = document.getElementById('views');\n                par.classList.add('normalized');\n                for(const textbox of _state.textboxes)\n                    textbox.updatescript();\n                _state.matrix.updatescript();\n                if(!check.anyhighlit())\n                    multi.clearTrees();\n                else\n                    multi.repopulateTrees(...find.lowhigh(find.highlit()));\n            }\n\n            view.updateAllHeaders(true);\n            view.xScrollToHighlit();\n        },\n        showUnnormalized: function() {\n            document.getElementById('views').classList.remove('normalized');\n            _state.matrix.updatescript();\n            \n            for(const textbox of _state.textboxes)\n                textbox.updatescript();\n            \n            if(!check.anyhighlit())\n                multi.clearTrees();\n            else\n                multi.repopulateTrees(...find.lowhigh(find.highlit()));\n\n            view.updateAllHeaders(true);\n            view.xScrollToHighlit();\n        },\n    \n        toggleHeader: function() {\n            const header = _state.matrix.boxdiv.querySelector('tr.header');\n            if(header.style.display === 'none')\n                header.style.display = 'table-row';\n            else\n                header.style.display = 'none';\n        },\n\n        updateHeaders(nums) {\n            for(const num of nums) {\n                const th = find.firstth(num);\n                const [count,unique] = find.readings(num);\n                const readspan = th.querySelector('span.readings');\n                const readings = count < 2 ? count : `${count}(${unique.size})`;\n                readspan.textContent = readings;\n            }\n        },\n    \n        updateAllHeaders(readingsonly = false) {\n            const trs = [...find.trs()];\n            const trwalkers = trs.map(tr => find.trWalker(tr));\n            const tds = [...find.tds(false,trs[0])];\n            const ths = [...find.ths()];\n            const head = _state.matrix.boxdiv.querySelector('tr.header');\n            const newTh = function() {\n                const th = document.createElement('th');\n                const span = document.createElement('span');\n                span.classList.add('readings');\n                th.appendChild(span);\n                const form = document.createElement('form');\n                form.innerHTML = '<div><input class=\"insignificant\" type=\"checkbox\">Insignificant</div><div><input class=\"binary\" type=\"checkbox\">Binary</div>';\n                th.appendChild(form);\n                head.appendChild(th);\n                return th;\n            };\n        \n            for(let n = 0;n<tds.length;n++) {\n                const th = n >= ths.length ?\n                    newTh() : ths[n];\n                const td = tds[n];\n\n                th.dataset.ref = td.dataset.n;\n                let count = 0;\n                const unique = new Set();\n                for(const walker of trwalkers) {\n                    const txt = walker.nextNode().textContent;\n                    if(txt !== '') {\n                        count++;\n                        unique.add(txt);\n                    }\n                }\n            \n                const readings = count < 2 ? count : `${count}(${unique.size})`;\n                th.querySelector('span.readings').textContent = readings;\n                if(!readingsonly) {\n                    th.querySelector('input.insignificant').checked = td.dataset.insignificant ? true : false;\n                    th.querySelector('input.binary').checked = td.dataset.binary ? true : false;\n                }\n            }\n            if(ths.length > tds.length) {\n                for(let n=tds.length;n<ths.length;n++)\n                    head.removeChild(ths[n]);\n            }\n        },\n        xScrollToHighlit: function() {\n            const hl = find.highlit();\n            if(hl.size > 0) view.xScroll([...hl][0]);\n        },    \n        xScroll: function(num,row) {\n            if(!num) return;\n            const par = row || find.firsttr();\n            const el = find.firsttd(num,par);\n            const elrect = el.getBoundingClientRect();\n            const matrix = _state.matrix.boxdiv;\n            const matrixrect = matrix.getBoundingClientRect();\n            const rightboundary = matrixrect.right;\n            const anchorrect = par.querySelector('th').getBoundingClientRect();\n            const leftboundary = anchorrect.right;\n            const outright = elrect.right > rightboundary;\n            const outleft = (elrect.left + 0.1) < leftboundary;\n            if(outright) el.scrollIntoView({inline: 'end', block: 'nearest'});\n            if(outleft) {\n                el.scrollIntoView({inline: 'start', block: 'nearest'});\n                matrix.scroll({left: matrix.scrollLeft - anchorrect.width});\n            }\n        },\n    };\n\n    const find = {\n        basename: function() {\n            return _state.filename.split(/\\.[^.]+$/)[0];\n        },\n        range: function(a,b) {\n            return Array.from(Array(parseInt(b)-parseInt(a)+1).keys(), x => x+a);\n        },\n        maxlemma: function() {\n            return [...find.firsttext().querySelectorAll('w[n]')].length-1;\n        },\n        lemmata: function(num,par) {\n            const el = par ? par : document.querySelector('#views');\n            return num === false ?\n                el.querySelectorAll('.lemma') :\n                el.querySelectorAll(`.lemma[data-n=\"${num}\"]`);\n        },\n\n        tds: function(num,row) {\n            const el = row ? row : _state.matrix.boxdiv;\n            if(num === false)\n                return el.querySelectorAll('td[data-n]');\n            else\n                return el.querySelectorAll(`td[data-n=\"${num}\"]`);\n        },\n\n        firsttd: function(num,row) {\n            const el = row ? row : _state.matrix.boxdiv;\n            return el.querySelector(`td[data-n=\"${num}\"]`);\n        },\n\n        tr: function(label) {\n            return _state.matrix.boxdiv.querySelector(`tr[data-n=\"${label}\"]`);\n        },\n\n        trs: function(element) {\n            const el = element ? element : _state.matrix.boxdiv;\n            return el.querySelectorAll('tr[data-n]');\n        },\n\n        firsttr: function(element) {\n            const el = element ? element : _state.matrix.boxdiv;\n            return el.querySelector('tr[data-n]');\n        },\n        lasttr: function(element) {\n            const el = element ? element : _state.matrix.boxdiv;\n            return el.querySelector('tr[data-n]:last-of-type');\n        },\n    \n        trWalker: function(tr) {\n            return document.createNodeIterator(tr,NodeFilter.SHOW_ELEMENT,\n                {acceptNode: function(node) {if(node.tagName === 'TD') return NodeFilter.FILTER_ACCEPT;}},\n                false);\n        },\n\n        textWalker: function(text) {\n            return document.createNodeIterator(text,NodeFilter.SHOW_ELEMENT,\n                {acceptNode: function(node) {if(node.tagName.toLowerCase() === 'w') return NodeFilter.FILTER_ACCEPT;}},\n                false);\n        },\n\n        tei: function(label, doc = _state.xml) {\n            return doc.querySelector(`TEI[n=\"${label}\"]`);\n        },\n\n        teis: function(doc = _state.xml) {\n            return doc.querySelectorAll('TEI');\n        },\n\n        texts: function(element) {\n            const el = element ? element : _state.xml;\n            return el.querySelectorAll('text');\n        },\n    \n        serializedtexts: function(tree) {\n            const otus = [...tree.querySelectorAll('otu[label]')].map(el => el.getAttribute('label'));\n            const teis = [...find.teis()].filter(el => otus.indexOf(el.getAttribute('n')) !== -1);\n            return new Map(\n                teis.map(t => [\n                    tree.querySelector(`node[label=\"${t.getAttribute('n')}\"]`).getAttribute('id'),\n                    [...t.querySelectorAll('w')].map(w => {\n                        return check.normalizedView() && w.hasAttribute('lemma') ?\n                            w.getAttribute('lemma') :\n                            w.textContent;\n                    })\n                ])\n            );\n        },\n    \n        serializedlevels: function(levels) {\n            return levels.map(arr => {\n                if(arr instanceof Map) {\n                    const newmap = new Map();\n                    for(const [key,value] of arr)  {\n                        newmap.set(key.getAttribute('id'),value.map(node => node.getAttribute('id')));\n                    }\n                    return newmap;\n                }\n                else {\n                    return arr.map(node => node.getAttribute('id'));\n                }\n            });\n        },\n\n        firsttext: function(id) {\n            return !id ? \n                _state.xml.querySelector('text') :\n                _state.xml.querySelector(`[n=\"${id}\"] text`);\n        },\n\n        words: function(num,text) {\n            const el = text ? text : _state.xml;\n            if(num === false)\n                return el.querySelectorAll('w[n]');\n            else\n                return el.querySelectorAll(`w[n=\"${num}\"]`);\n        },\n\n        firstword: function(num,row) {\n            const el = row ? row : _state.xml;\n            return el.querySelector(`w[n=\"${num}\"]`);\n        },\n\n        normal: function(el) {\n            const par = el ? el : document.getElementById('views');\n            //const par = el ? el : _state.matrix.boxdiv;\n            return par.querySelectorAll('.lemma[data-normal], .tree-lemma[data-normal]');\n        },\n    \n        htmlreading: function(el) {\n            return check.normalizedView() && el.dataset.normal ?\n                el.dataset.normal :\n                el.IAST.textContent;\n        },\n    \n        xmlreading: function(label,n) {\n            const el = _state.xml.querySelector(`TEI[n=\"${label}\"] > text > w[n=\"${n}\"]`);\n            return check.normalizedView() && el.hasAttribute('lemma') ?\n                el.getAttribute('lemma') :\n                el.textContent;\n        },\n    \n        xmlreadings: function(label) {\n            const els = [..._state.xml.querySelectorAll(`TEI[n=\"${label}\"] > text > w`)];\n\n            return els.map(el => {\n                check.normalizedView() && el.hasAttribute('lemma') ?\n                    el.getAttribute('lemma') :\n                    el.textContent;\n            });\n        },\n\n        ths: function() {\n            return _state.matrix.boxdiv.querySelectorAll('th[data-ref]');\n        },\n\n        firstth: function(num) {\n            return _state.matrix.boxdiv.querySelector(`th[data-ref=\"${num}\"]`);\n        },\n        checkbox: function(num,type) {\n            return _state.matrix.boxdiv.querySelector(`th[data-ref=\"${num}\"] input.${type}`);\n        },\n\n        highlit: function() {\n            const firstrow = find.firsttr();\n            const lemmata = firstrow.querySelectorAll('.highlit');\n            //if(lemmata.length === 0) return false;\n            const nums = new Set();\n            for(const lemma of lemmata) {\n                nums.add(lemma.dataset.n);\n            }\n            return nums;\n        },\n\n        highlitcell: function() {\n            return _state.matrix.boxdiv.querySelector('td.highlitcell');\n        },\n\n        highlitrow: function() {\n            const highlitcell = find.highlitcell();\n            return highlitcell ? highlitcell.closest('tr') : false;\n        },\n\n        lowhigh: function(nums) {\n            const sortednums = [...nums].sort((a,b) => parseInt(a)-parseInt(b));\n            const low = parseInt(sortednums[0]);\n            const high = sortednums.length > 1 ?\n                parseInt(sortednums[sortednums.length-1]) :\n                undefined;\n            return [low,high];\n        },\n\n        readings: function(num, element) {\n            const el = element ? element : _state.matrix.boxdiv;\n            const tds = find.tds(num,el);\n            var count = 0;\n            const unique = new Set();\n            for(const td of tds) {\n                const txt = td.textContent;\n                if(txt !== '') {\n                    count++;\n                    unique.add(txt);\n                }\n            }\n            return [count,unique.size];\n        },\n\n        attr: function(type,nums) {\n            const firstrow = find.firsttr();\n            var states = [];\n            for(const num of nums) {\n                const cell = find.firsttd(num,firstrow);\n                if(cell.dataset[type] === 'true')\n                    states.push([num,true]);\n                else\n                    states.push([num,false]);\n            }\n            return new Map(states);\n        },\n    \n        whichattr: function(el) {\n            if(el.hasAttribute('n')) return 'n';\n            else if(el.hasAttribute('data-n')) return 'data-n';\n            else if(el.hasAttribute('data-ref')) return 'data-ref';\n            else return false;\n        },\n\n        clauses: function(nums,strict = false) {\n            const firstrow = find.firsttext();\n            var someungrouped = false;\n\n            // make a list of clauses\n            const cls = new Set();\n            for(const num of nums) {\n                const word = find.firstword(num,firstrow);\n                const cl = word.closest('cl');\n                if(cl) cls.add(cl);\n                else if(strict) someungrouped = true;\n            }\n        \n            if(cls.size === 0) return false;\n            else {\n            // get list of numbers in each clause\n                const clgroups = [...cls].map(cl => {\n                    const words = cl.querySelectorAll('w');\n                    return new Set([...words].map(w => w.getAttribute('n')));\n                });\n                if(someungrouped) {\n                    return [null].concat(clgroups);\n                }\n                else\n                    return clgroups;\n            }\n        },\n    \n        clausesToRemove: function(clgroups,nums,threshold = 0) {\n            const toremove = new Set();\n            for(const group of clgroups) {\n                const clone = new Set(group);\n                for(const num of nums)\n                    clone.delete(num);\n                if(clone.size <= threshold)\n                    toremove.add(group);\n            }\n            return [...toremove];\n        },\n    \n        empty: function() {\n            const emptyset = new Set();\n            const trs = [...find.trs()];\n            const trWalkers = trs.map(el => find.trWalker(el));\n            const max = trs[0].querySelector('td:last-of-type').dataset.n;\n            for(let n=0;n<=max;n++) {\n                var emptylemma = true;\n                for(const walker of trWalkers) {\n                    const word = walker.nextNode();\n                    if(emptylemma) {\n                        if(word.textContent !== '')\n                            emptylemma = false;\n                    }\n                }\n                if(emptylemma) emptyset.add(n);\n            }\n            return emptyset;\n        },\n\n        prevNonempty: function(index,arr) {\n            for(let n=index;n>=0;n--) {\n                const td = arr[n];\n                if(td.textContent !== '') return n;\n            }\n            return false;\n            /*         var n = num;\n        var td = find.firsttd(n,row);\n        while(td) {\n            if(td.textContent !== '') return n;\n            n--;\n            td = find.firsttd(n,row);\n        }\n        return num; */\n        },\n    \n        nextNonempty: function(index,arr) {\n            for(let n=index;n<arr.length;n++) {\n                const td = arr[n];\n                if(td.textContent !== '') return n;\n            }\n            return false;\n        },\n\n        setIntersection: function(...sets) {\n            const setA = sets[0];\n            return new Set(\n                [...setA].filter(el => {\n                    for(let n=1;n<sets.length;n++) {\n                        if(!sets[n].has(el))\n                            return false;\n                    }\n                    return true;\n                })\n            );\n        },\n\n        setUnion: function(...sets) {\n            return new Set(\n                sets.reduce((acc, cur) => {\n                    acc = [...acc,...cur];\n                    return acc;\n                },[])\n            );\n        },\n        cursorPos(el) {\n            const range = window.getSelection().getRangeAt(0);\n            const preCaretRange = range.cloneRange();\n            preCaretRange.selectNodeContents(el);\n            const fullLength = preCaretRange.toString().length;\n            preCaretRange.setEnd(range.endContainer, range.endOffset);\n            const caretOffset = preCaretRange.toString().length;\n            return [caretOffset,fullLength];\n        },\n    };\n\n    const check = {\n        undo: function() {\n            return _state.undo.length > 0 ? true : false;\n        },\n        redo: function() {\n            return _state.redo.length > 0 ? true : false;\n        },\n\n        checkbox: function(type,nums) {\n            if(!check.anyhighlit()) return false;\n\n            const numss = nums === false ?\n                find.highlit() :\n                nums;\n\n            const states = find.attr(type,numss);\n            for(const state of states.values())\n                if(state === false)\n                    return false;\n            return true;\n        },\n    \n        grouped: function() {\n            const nums = find.highlit();\n            if(!nums) return false;\n            const firstrow = find.firsttr();\n            for(const num of nums) {\n                const cell = find.firsttd(num,firstrow);\n                if(cell.classList.contains('group-start') ||\n               cell.classList.contains('group-internal') ||\n               cell.classList.contains('group-end'))\n                    return true;\n            }\n            return false;\n        },\n        oneGrouped: function() {\n            const nums = find.highlit();\n            if(nums.size === 0) return false;\n            if(nums.size === 1) {\n                const firstrow = find.firsttr();\n                const cell = find.firsttd([...nums][0],firstrow);\n                //const cell = firstrow.querySelector('td[data-n=\"'+[...nums][0]+'\"]');\n                if(cell.classList.contains('group-start') ||\n               cell.classList.contains('group-end') ||\n               cell.classList.contains('group-internal'))\n                    return true;\n                else\n                    return false;\n            }\n            return true;\n        },\n\n        anyhighlit: function() {\n            return _state.matrix.boxdiv.querySelector('td.highlit') ? true : false;\n        },\n\n        manyhighlit: function() {\n            return find.highlit().size > 1;\n        },\n\n        highlitcell: function() {\n            return _state.matrix.boxdiv.querySelector('td.highlitcell') ? true : false;\n        },\n\n        normalizedView: function() {\n            return document.getElementById('views').classList.contains('normalized');\n        },\n\n        anyNormalized: function() {\n            return _state.matrix.boxdiv.querySelector('.lemma[data-normal]');\n        },\n\n        headerView: function() {\n            return _state.matrix.boxdiv.querySelector('tr.header').style.display === 'none' ? false : true;\n        },\n    };\n\n    const make = {\n        tei: function(label) {\n            const tei = _state.xml.createElementNS(_const.teins,'TEI');\n            tei.setAttribute('n',label);\n            /*\n            const text = _state.xml.createElementNS(_const.teins,'text');\n            tei.appendChild(text);\n            make.emptywords(text);\n            */\n            const template = find.firsttext().cloneNode(true);\n            tei.appendChild(template);\n            for(const w of find.words(false,template)) {\n                w.removeAttribute('lemma');\n                while(w.firstChild)\n                    w.firstChild.remove();\n            }\n            return tei;\n        },\n        \n        emptycell: function(n) {\n            const td = document.createElement('td');\n            td.className = 'lemma';\n            td.dataset.n = n;\n            return td;\n        },\n\n        emptyword: function(n,doc = _state.xml) {\n            const w = doc.createElementNS(_const.teins,'w');\n            w.setAttribute('n',n);\n            return w;\n        },\n\n        emptywords: function(text,max,start) {\n            const m = max || _state.maxlemma;\n            const n_start = start || 0;\n            for(let n = n_start; n <= m; n++) {\n                const word = make.emptyword(n);\n                text.appendChild(word);\n            }\n            \n\n        },\n        row: function(label,type) {\n            const tr = document.createElement('tr');\n            const th = document.createElement('th');\n            th.scope = 'row';\n            th.draggable = true;\n            th.appendChild(document.createTextNode(label));\n            th.addEventListener('dragstart',events.thDragStart);\n            tr.dataset.n = label;\n            tr.appendChild(th);\n            const firstrow = find.firsttr();\n            for(const ftd of firstrow.querySelectorAll('td')) {\n                const td = document.createElement('td');\n                td.dataset.n = ftd.dataset.n;\n                td.className = ftd.className;\n                if(type) td.classList.add(type);\n                tr.appendChild(td);\n            }\n            /*\n            for(let n=0;n<=_state.maxlemma;n++) {\n                const td = document.createElement('td');\n                td.dataset.n = n;\n                td.className = 'lemma';\n                if(type) td.classList.add(type);\n                tr.appendChild(td);\n            }\n            */\n            return tr;\n        },\n    };\n\n    const contextMenu = {\n\n        create: function(e) {\n            const contextmenu = document.createElement('div');\n            contextmenu.classList.add('contextmenu');\n            contextmenu.style.left = (e.clientX - 12) + 'px';\n            contextmenu.style.top = (e.clientY - 22) + 'px';\n            return contextmenu;\n        },\n\n        remove: function() {\n            for(const oldmenu of document.querySelectorAll('.contextmenu'))\n                oldmenu.parentNode.removeChild(oldmenu);\n        },\n        show: function(menu) {\n            document.body.appendChild(menu);\n        },\n        populate: function(menu,items) {\n            const list = document.createElement('ul');\n            for(const item of items) {\n                const li = document.createElement('li');\n                if(item.hasOwnProperty('cond')) {\n                    const frag = document.createRange().createContextualFragment(\n                        '<form><input type=\"checkbox\"'+(item.cond() ? ' checked' : '')+'></form>'\n                    );\n                    li.appendChild(frag);\n                }\n\n                if(item.hasOwnProperty('toggle')) {\n                    const txt = item.toggle() ? item.text : item.alt;\n                    li.appendChild(document.createTextNode(txt));\n                }\n                else\n                    li.appendChild(document.createTextNode(item.text));\n                li.addEventListener('mouseup',item.func);\n                list.appendChild(li);\n            }\n            menu.appendChild(list);\n        },\n    };\n\n    /*** Classes ***/\n\n    class menuBox {\n        constructor(name) {\n            this.name = name;\n            this.box = document.createElement('div');\n            this.box.classList.add('menubox');\n            const heading = document.createElement('div');\n            heading.classList.add('heading');\n            heading.appendChild(document.createTextNode(name));\n            this.box.appendChild(heading);\n            heading.addEventListener('mouseover',this.checkConditions.bind(this));\n            this.box.addEventListener('mouseup',this.click.bind(this));\n            this.items = new Map();\n            this.conditions = new Map();\n        }\n\n        populate(items) {\n            const ul = this.box.querySelector('ul') || \n            (function(obj) {\n                const newul = document.createElement('ul');\n                obj.box.appendChild(newul);\n                return newul;})(this);\n            for(const item of items) {\n                const li = document.createElement('li');\n\n                if(item.hasOwnProperty('checkbox')) {\n                    const form = document.createElement('form');\n                    const input = document.createElement('input');\n                    input.type = 'checkbox';\n                    input.addEventListener('click',e => e.preventDefault());\n                    form.appendChild(input);\n                    li.appendChild(form);\n                    li.appendChild(document.createTextNode(item.text));\n                    this.conditions.set(input,item.checkbox);\n                }\n                else if(item.hasOwnProperty('toggle')) {\n                    const span = document.createElement('span');\n                    span.appendChild(document.createTextNode(item.text));\n                    span.dataset.text = item.text;\n                    span.dataset.alt = item.alt;\n                    this.conditions.set(span,item.toggle);\n                    li.appendChild(span);\n                }\n                else\n                    li.appendChild(document.createTextNode(item.text));\n            \n                if(item.hasOwnProperty('greyout')) {\n                    this.conditions.set(li,item.greyout);\n                }\n            \n                this.items.set(li,item.func);\n                ul.appendChild(li);\n            }\n        }\n\n        click(e) {\n            const li = e.target.tagName === 'LI' ?\n                e.target :\n                e.target.closest('li');\n            if(li && !li.classList.contains('greyedout')) {\n                const func = this.items.get(li);\n                if(func) {\n                    func(e);\n                    this.checkConditions();\n                }\n            }\n        }\n\n        checkConditions() {\n            const checked = new Map();\n            for(const [el, func] of this.conditions) {\n                const result = checked.get(func) || \n                (function() {const x = func(); \n                    checked.set(func,x); \n                    return x;})();\n                if(el.tagName === 'INPUT') {\n                    el.checked = result;\n                }\n                else if (el.tagName === 'SPAN') {\n                    if(result) \n                        el.textContent = el.dataset.alt;\n                    else\n                        el.textContent = el.dataset.text;\n                }\n                else if(el.tagName === 'LI') {\n                    if(!result) el.classList.add('greyedout');\n                    else el.classList.remove('greyedout');\n                }\n            }\n        }\n    }\n\n    class Box {\n        constructor(name) {\n            this.name = name;\n            this.script = 0;\n        }\n   \n        show() {\n            _state.descs.appendChild(this.descbox);\n            if(check.normalizedView())\n                view.showNormalized(this);\n            _state.viewdiv.appendChild(this.boxdiv);\n            this.closed = false;\n        }\n\n        clear() {\n            while(this.boxdiv.firstChild)\n                this.boxdiv.removeChild(this.boxdiv.firstChild);\n            if(this.svgcontainer) {\n                this.clearsvg();\n                this.boxdiv.appendChild(this.svgcontainer);\n            \n            }\n        }\n\n        destroy() {\n            _state.viewdiv.removeChild(this.boxdiv);\n            _state.descs.removeChild(this.descbox);\n            const treeindex = _state.trees.indexOf(this);\n            if(treeindex > -1)\n                _state.trees.splice(treeindex,1);\n            const textindex = _state.textboxes.indexOf(this);\n            if(textindex > -1)\n                _state.textboxes.splice(textindex,1);\n            this.closed = true;\n            //underlineVariants();\n            if(this.name === 'Matrix')\n                document.getElementById('matrixmenu').style.display = 'block';\n            drawTrees();\n            multi.rehighlight();\n        }\n\n        pullout() {\n            this.destroy();\n            const features = 'menubar=no,location=no,status=no,height=620,width=620,scrollbars=yes,centerscreen=yes';\n            const slavenum = window.mainWindow ?\n                window.mainWindow.comboView.getWindows().length :\n                _state.windows.length;\n            const newWindow = window.open('slave.html','slave'+slavenum,features);\n            newWindow.mainWindow = window.mainWindow ?\n                window.mainWindow :\n                window;\n            newWindow.startbox = this.text ?\n            //{text: {name: this.name, map: this.textmap}} :\n                {text: {name: this.name}} :\n                {tree: this.name};\n            newWindow.mainWindow.comboView.addWindow(newWindow);\n        }\n\n        makeDescBox() {\n            const descbox = document.createElement('div');\n            const closer = document.createElement('div');\n            closer.classList.add('closer');\n            closer.innerHTML = 'x';\n            closer.title = 'close';\n            /*      const opener = document.createElement('div');\n      opener.classList.add('opener');\n      opener.innerHTML = '^';\n      opener.title = 'open in new window'; */\n            const scripter = document.createElement('div');\n            scripter.classList.add('scripter');\n            scripter.innerHTML = 'A';\n            scripter.title = 'change script';\n            descbox.appendChild(closer);\n            //descbox.appendChild(opener);\n            descbox.appendChild(scripter);\n            descbox.appendChild(document.createTextNode(this.desc));\n            this.descbox = descbox;\n            closer.addEventListener('click',this.destroy.bind(this));\n            //opener.addEventListener('click',this.pullout.bind(this));\n            scripter.addEventListener('click',this.cyclescript.bind(this));\n        }\n\n        cyclescript() {\n            this.script = this.script + 1;\n            if(this.script === _const.scripts.length)\n                this.script = 0;\n            const scripter = this.descbox.querySelector('.scripter');\n            if(this.script === 0)\n                scripter.innerHTML = 'A';\n            else\n                scripter.innerHTML = to[_const.scripts[this.script]]('a');\n            if(_const.scripts[this.script] === 'grantha')\n                scripter.classList.add('grantha');\n            else scripter.classList.remove('grantha');\n            this.updatescript();\n        }\n  \n        updatescript() {\n            const nodes = this.boxdiv.querySelectorAll('.lemma,.tree-lemma');\n            for(const node of nodes) {\n                const hasNormalized = node.dataset.hasOwnProperty('normal');\n                if(!hasNormalized && node.textContent.trim() === '') continue;\n                /*if(!node.hasOwnProperty('IAST'))\n                node.IAST = node.cloneNode(true); */\n                const tochange = (function() {\n                    if(check.normalizedView() && hasNormalized) {\n                        const temp = document.createElement('span');\n                        temp.appendChild(document.createTextNode(node.dataset.normal));\n                        return temp;\n                    }\n                    else\n                        return node.IAST.cloneNode(true);\n                }());\n                const newnode = this.script === 0 ?\n                    tochange :\n                    changeScript(tochange,_const.scripts[this.script]);\n                node.innerHTML = '';\n                while(newnode.firstChild)\n                    node.appendChild(newnode.firstChild);\n            }\n            if(_const.scripts[this.script] === 'grantha') \n                this.boxdiv.classList.add('grantha');\n            else this.boxdiv.classList.remove('grantha');\n            if(this.boxdiv.classList.contains('matrix'))\n                view.xScrollToHighlit();\n        }\n    }\n\n    class TreeBox extends Box {\n        constructor(stemmaid,id) {\n            super(`#${stemmaid} #${id}`);\n            this.stemmaid = stemmaid;\n            this.id = id;\n            this.nexml = _state.treelist.get(this.name).cloneNode(true);\n            this.desc = this.nexml.querySelector('tree').getAttribute('label');\n        }\n        init() {\n            this.makeDescBox();\n            const treediv = document.createElement('div');\n            treediv.classList.add('tree-box');\n            var divid;\n            var n = 0;\n            do {\n                divid = 'tree' + n;\n                n++;\n            } while(document.getElementById(divid));\n            treediv.id = divid;\n            this.boxdiv = treediv;\n            this.boxdiv.addEventListener('mouseover',events.treeMouseover.bind(this));\n            this.boxdiv.addEventListener('click',events.treeClick);\n            this.svgcontainer = document.createElement('div');\n            this.svgcontainer.id = this.boxdiv.id + 'container';\n            this.boxdiv.appendChild(this.svgcontainer);\n            this.boxdiv.myTree = this;\n\n            //const parser = new DOMParser();\n            ///this.nexml = parser.parseFromString(_state.treelist.get(this.name),'text/xml');\n            this.calcPaths();\n            this.jiggleroot();\n            this.findLevels();\n            this.labelInternal();\n        }\n        show() {\n            _state.descs.appendChild(this.descbox);\n            _state.viewdiv.appendChild(this.boxdiv);\n        }\n\n        jiggleroot() {\n            const oldroot = this.nexml.evaluate('//nex:node[@root=\"true\"]',this.nexml,this.nsResolver,XPathResult.FIRST_ORDERED_NODE_TYPE,null).singleNodeValue;\n            const edges = this.nexml.evaluate('//nex:edge[@source=\"'+oldroot.id+'\"]|//nex:edge[@target=\"'+oldroot.id+'\"]',this.nexml,this.nsResolver,XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,null);\n            if(edges.snapshotLength === 3) {\n                var oldedge;\n                var newsrctrgt;\n                for(let i=0;i<edges.snapshotLength;i++) {\n                    const thisedge = edges.snapshotItem(i);\n                    const sourceid = thisedge.getAttribute('source');\n                    const targetid = thisedge.getAttribute('target');\n                    const sourcenode = this.nexml.evaluate('//nex:node[@id=\"'+sourceid+'\"]',this.nexml,this.nsResolver,XPathResult.FIRST_ORDERED_NODE_TYPE,null).singleNodeValue;\n                    const targetnode = this.nexml.evaluate('//nex:node[@id=\"'+targetid+'\"]',this.nexml,this.nsResolver,XPathResult.FIRST_ORDERED_NODE_TYPE,null).singleNodeValue;\n                    if(!sourcenode.hasAttribute('otu') && !targetnode.hasAttribute('otu')) {\n                        oldedge = thisedge;\n                        newsrctrgt = targetid === oldroot.id ?\n                            'target' : 'source';\n                        break;\n                    }\n                }\n                if(oldedge) {\n                    const newroot = this.nexml.createElementNS(oldroot.namespaceURI,'node');\n                    newroot.id = 'fakeroot';\n                    newroot.setAttribute('root','true');\n                    oldroot.removeAttribute('root');\n                    oldroot.parentElement.insertBefore(newroot,oldroot);\n                    const newedge = this.nexml.createElementNS(oldroot.namespaceURI,'edge');\n                    newedge.id = 'newrootedge';\n                    newedge.setAttribute('length','0');\n                    newedge.setAttribute('source','fakeroot');\n                    newedge.setAttribute('target',oldroot.id);\n                    oldroot.parentElement.insertBefore(newedge,oldedge);\n            \n                    oldedge.setAttribute(newsrctrgt,newroot.id);\n                }\n            }\n        }\n    \n        findLevels() {\n            const alledges = this.nexml.querySelectorAll('edge');\n            const taxa = [...this.nexml.querySelectorAll('node[otu]')];\n            const tree = this.nexml;\n            this.levels = [taxa];\n\n            const getNextLevel = function(curlevel,edges) {\n                const ids = curlevel.map(t => t.id);\n                const dups = new Map();\n                const nodups = new Map();\n                const usededges = [];\n                for (const e of edges) {\n                    const target = e.getAttribute('target');\n                    const source = e.getAttribute('source');\n                    const group = (() => {\n                        /*if(ids.indexOf(target) !== -1)\n                            return {ancestor: tree.querySelector(`node[id=\"${source}\"]`),\n                                child: tree.querySelector(`node[id=\"${target}\"]`)};\n                        else if(ids.indexOf(source) !== -1)\n                            return {ancestor: tree.querySelector(`node[id=\"${target}\"]`),\n                                child: tree.querySelector(`node[id=\"${source}\"]`)};\n                        else\n                            return null;*/\n                        if(ids.indexOf(target) !== -1)\n                            return {ancestor: tree.getElementById(source),\n                                child: tree.getElementById(target)};\n                        else if(ids.indexOf(source) !== -1)\n                            return {ancestor: tree.getElementById(target),\n                                child: tree.getElementById(source)};\n                        else\n                            return null;\n                    })();\n                    if(group !== null) {\n                        if(nodups.has(group.ancestor)) {// duplicate\n                            const othergroup = nodups.get(group.ancestor);\n                            dups.set(group.ancestor,[othergroup.child, group.child]);\n                            usededges.push(e);\n                            usededges.push(othergroup.edge);\n                        }\n                        else nodups.set(group.ancestor,{child: group.child, edge: e});\n                    }\n                }\n                const dupkeys = [...dups.keys()];\n                const leftovers = [...nodups.keys()].reduce((acc,key) => {\n                    if(dupkeys.indexOf(key) === -1)\n                        acc.push(nodups.get(key).child);\n                    return acc;\n                },[]);\n            \n                const unusededges = [...edges].reduce((acc,e) => {\n                    if(usededges.indexOf(e) === -1)\n                        acc.push(e);\n                    return acc;\n                },[]);\n\n                return {match: dups, remainder: [...new Set(leftovers)],edges: unusededges};\n            };\n\n            var curnodes = taxa;\n            var curedges = alledges;\n            do {\n                const nextlevel = getNextLevel(curnodes,curedges);\n                this.levels.push(nextlevel.match);\n                curnodes = [...nextlevel.match.keys(),...nextlevel.remainder];\n                curedges = nextlevel.edges;\n            } while (curedges.length > 0);\n        }\n\n        labelInternal() {\n            for(const node of this.nexml.querySelectorAll('node:not([label])'))\n                node.setAttribute('label',node.id);\n        }\n\n        fitch1() {\n            const firstpass = new Map();\n            for(const taxon of this.levels[0]) {\n                const label = taxon.getAttribute('label');\n                const treelemma = this.boxdiv.querySelector(`span.tree-lemma[data-id=\"${label}\"]`);\n                const reading = treelemma ? [find.htmlreading(treelemma)] : [];\n                firstpass.set(taxon,new Set(reading));\n            }\n            for(let m=1;m<this.levels.length;m++) { // start at 1 (after taxa)\n                for(const [node,children] of this.levels[m]) {\n                    const readings = children.map(node => firstpass.get(node));\n                    const intersection = find.setIntersection(...readings);\n                    const result = intersection.size > 0 ?\n                        intersection :\n                        find.setUnion(...readings);\n                    firstpass.set(node,result);\n\n                }\n            }\n            return firstpass;\n\n        }\n\n        fitch2(firstpass) {\n            const taxa = [...this.nexml.querySelectorAll('node[otu]')];\n            const secondpass = new Map();\n\n            for(const [node] of this.levels[this.levels.length-1]) {\n                secondpass.set(node,firstpass.get(node));\n            }\n\n            for(let n=this.levels.length-1;n>1;n--) {\n                for(const [node,children] of this.levels[n]) {\n                    const ancestral = secondpass.get(node);\n                    for(const child of children) {\n                        if(taxa.indexOf(child) !== -1)\n                            continue;\n                        const childreading = firstpass.get(child);\n                        if(childreading.size === 1)\n                            secondpass.set(child,childreading);\n                        else {\n                            const intersection = find.setIntersection(ancestral,childreading);\n                            const result = intersection.size > 0 ?\n                                intersection :\n                                childreading;\n                            secondpass.set(child,result);\n                        }\n                    }\n                }\n            }\n            return secondpass;\n        }\n\n        fitch() {\n            const firstpass = this.fitch1();\n            const formatOutput = function(m) {\n                const output = [...m].map(str => str.trim() === '' ? '_' : str);\n                return output.length === 1 ? output[0] : '{' + output.join(', ') + '}';\n            };\n\n            const secondpass = this.fitch2(firstpass);\n            for(const [node,reading] of secondpass) {\n                const htmlnode = this.boxdiv.querySelector(`span.internal[data-key=\"${node.id}\"]`);\n                htmlnode.dataset.reconstructed = formatOutput(reading);\n            }\n        }\n\n        clearsvg() {\n            while(this.svgcontainer.firstChild)\n                this.svgcontainer.removeChild(this.svgcontainer.firstChild);\n        }\n    \n        removecolors() {\n            //const colored = this.nexml.evaluate('//nex:node[@color]',this.nexml,this.nsResolver,XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,null);\n\n            const colored = this.nexml.querySelectorAll('node[color]');\n            for(let i=0; i < colored.snapshotLength; i++)\n                colored.snapshotItem(i).removeAttribute('color');\n        }\n\n        drawlines(nodes,color) {\n            this.removecolors();\n            if(nodes) {\n            /*\n            const nodearr = nodes.split(';');\n            const edges = this.getPath(...nodearr\n                        .map(s => s.replace(/[-_]/g,''))\n                    ).path;\n            \n            */\n                const edges = this.getPath(...nodes.split(';')).path;\n                const nodeset = new Set();\n                for(const edge of edges) {\n                    nodeset.add(edge.getAttribute('target'));\n                    nodeset.add(edge.getAttribute('source'));\n                }\n                for(const node of nodeset) {\n                    const el = this.nexml.evaluate('//nex:node[@id=\"'+node+'\"]',this.nexml,this.nsResolver,XPathResult.FIRST_ORDERED_NODE_TYPE,null).singleNodeValue;\n                    //const edges = this.nexml.evaluate('//nex:edge[@source=\"'+node+'\"]|//nex:edge[@target=\"'+node+'\"]',this.nexml,this.nsResolver,XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,null);\n                    if(/*edges.snapshotLength < 3 && */!el.getAttribute('root'))\n                        el.setAttribute('color',color);\n                }\n            }\n            const width = parseInt(window.getComputedStyle(this.svgcontainer,null).width) - 15; // -15 for vertical scrollbar\n            const maxheight = parseInt(window.getComputedStyle(this.boxdiv,null).height) - 10;\n            const height = (function() {\n                if(maxheight < 600) return 600;\n                //else if(maxheight < 800) return maxheight;\n                //else return 800;\n                else return maxheight;\n            })();\n            Smits.PhyloCanvas.Render.Style.line.stroke = 'rgb(162,164,170)';\n            this.phylocanvas = new Smits.PhyloCanvas(\n                {nexml: this.nexml, fileSource: true},\n                this.svgcontainer.id,\n                width,height,\n                // 'circular'\n            );\n            const highlit = this.svgcontainer.querySelectorAll('path:not([stroke=\"#a2a4aa\"])');\n            for(const high of highlit) {\n                high.style.strokeWidth = '2';\n            }\n        }\n        draw() {\n            this.clear();\n            this.drawlines();\n            this.makeLabels();\n        }\n    \n        clearLabels() {\n            for(const txt of this.boxdiv.firstChild.querySelectorAll('text')) {\n                txt.parentElement.removeChild(txt);\n            }\n        }\n\n\n        makeLabels() {\n            const alltexts = [...find.texts()];\n            const texts = new Set(alltexts.map(el => el.parentNode.getAttribute('n')));\n            const reconstructed = new Map(\n                alltexts.filter(el =>\n                    el.parentNode.hasAttribute('corresp') &&\n                (el.parentNode.getAttribute('corresp') === this.name))\n                    .map(el => [el.parentNode.getAttribute('select').replace(/^#/,''),el.parentNode.getAttribute('n')])\n            );\n            for(const txt of this.boxdiv.firstChild.querySelectorAll('text')) {\n                const newEl = document.createElement('div');\n                newEl.setAttribute('class','tree-div');\n                const offleft = parseInt(txt.getAttribute('x') - 5);\n                const offtop = parseInt(txt.getAttribute('y')) - 15;\n                newEl.style.left = offleft + 'px';\n                newEl.style.top = offtop + 'px';\n                const key = txt.textContent.trim();//.replace(/[-_]/g,'');\n                //            newEl.innerHTML =\n                /*                (texts.has(key) ?\n                    `<span class=\"witness inactive\" data-key=\"${key}\">${key}</span>` :\n                    `<span class=\"internal\" data-key=\"${key}\">${key}</span>`)\n                + '<span class=\"tree-lemma '+key+'\" data-id=\"'+key+'\"></span>';\n*/\n                if(texts.has(key))\n                    newEl.innerHTML =\n`<span class=\"witness inactive\" data-key=\"${key}\">${key}</span><span class=\"tree-lemma ${key}\" data-id=\"${key}\"></span>`;\n                else if(key !== 'fakeroot') {\n                    if(reconstructed.has(key))\n                        newEl.innerHTML = `<span class=\"internal reconstructed\" data-key=\"${key}\" data-label=\"${reconstructed.get(key)}\">${reconstructed.get(key)}</span><span class=\"tree-lemma invisible ${key}\" data-id=\"${key}\" data-label=\"${reconstructed.get(key)}\"></span>`;\n                    else\n                        newEl.innerHTML = `<span class=\"internal\" data-key=\"${key}\">0</span>`;\n                }\n                else newEl.innerHTML = `<span class=\"internal\" data-key=\"${key}\"></span>`;\n                //while(txt.firstChild)\n                //    txt.removeChild(txt.firstChild);\n                txt.parentElement.removeChild(txt);\n                this.boxdiv.appendChild(newEl);\n            }\n        }\n    \n        clearlemmata() {\n            for(const el of this.boxdiv.querySelectorAll('span.tree-lemma')) {\n                el.innerHTML = '';\n                if(el.dataset.hasOwnProperty('normal'))\n                    delete el.dataset.normal;\n                el.IAST = el.cloneNode(true);\n            }\n        }\n    \n        populate(n,m) {\n            /*        for(const [key,value] of _texts)\n            for(const el of this.boxdiv.getElementsByClassName(key)) {\n                el.innerHTML = '';\n                if(m)\n                    el.appendChild(xslt.transformString(\n                        value.text.slice(n,parseInt(m)+1).join(' '),\n                        proc));\n                else\n                    el.appendChild(xslt.transformString(\n                        value.text[n],\n                        proc));\n                el.IAST = el.cloneNode(true); // why was this commented out?\n            } */\n            const texts = find.texts();\n            for(const text of texts) {\n                const key = text.parentNode.getAttribute('n');\n                const el = this.boxdiv.querySelector(`span.tree-lemma[data-id=\"${key}\"]`) || this.boxdiv.querySelector(`span.tree-lemma[data-label=\"${key}\"]`);\n                if(!el) continue;\n                if(!el.hasOwnProperty('IAST')) el.IAST = el.cloneNode(true);\n                el.IAST.innerHTML = '';\n                if(m) {\n                    const arr = [];\n                    const normarr = [];\n                    var emended = false;\n                    for(let x=n;x<=m;x++) {\n                        const word = find.firstword(x,text);\n                        arr.push(word.innerHTML);\n                        if(word.hasAttribute('lemma'))\n                            normarr[x-n] = word.getAttribute('lemma');\n                        if(word.hasAttribute('emended')) emended = true;\n                    }\n                    el.IAST.appendChild(xslt.transformString(arr.join(' ').replace(/\\s+/g,' ').trim(),xslt.sheets['tree']));\n                    if(normarr.length !== 0) {\n                        const newarr = arr.slice(0).map((e,i) =>\n                            normarr.hasOwnProperty(i) ?\n                                normarr[i] :\n                                e\n                        );\n                        const temp = document.createElement('span');\n                        temp.appendChild(xslt.transformString(newarr.join(' ').replace(/\\s+/g,' ').trim(),xslt.sheets['tree']));\n                        el.dataset.normal = temp.innerHTML;\n                    }\n                    if(emended) el.dataset.emended = true;\n                    else if(el.dataset.hasOwnProperty('emended')) delete el.dataset.emended;\n                }\n                else {\n                    const word = find.firstword(n,text);\n                    el.IAST.appendChild(xslt.transformString(word.innerHTML,xslt.sheets['tree']));\n                    if(word.hasAttribute('lemma'))\n                        el.dataset.normal = word.getAttribute('lemma');\n                    else\n                        delete el.dataset.normal;\n                    if(word.hasAttribute('emended')) el.dataset.emended = true;\n                    else if(el.dataset.hasOwnProperty('emended')) delete el.dataset.emended;\n                }\n                if(check.normalizedView() && el.dataset.hasOwnProperty('normal'))\n                    el.innerHTML = el.dataset.normal;\n                else\n                    el.innerHTML = el.IAST.innerHTML;\n            }\n            const inactive = this.boxdiv.querySelectorAll('.inactive');\n            for(const label of inactive)\n                label.classList.remove('inactive');\n            this.fitch();\n        }\n\n        calcPaths() {\n            this.nodes = [];\n            this.paths = [];\n            this.longest = {path:[]};\n            this.nsResolver = this.nexml.createNSResolver(this.nexml.ownerDocument == null ? this.nexml.documentElement : this.nexml.ownerDocument.documentElement );\n            const nodesSnapshot = this.nexml.evaluate('//nex:node[@label]',this.nexml,this.nsResolver,XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n            for(let i=0; i < nodesSnapshot.snapshotLength; i++)\n                this.nodes.push(nodesSnapshot.snapshotItem(i));\n            for(let i=0; i < this.nodes.length; i++) {\n                const startnode = this.nodes[i];\n                const startlabel = startnode.getAttribute('label');\n                const startid = startnode.id;\n                for(let j=i+1;j<this.nodes.length;j++) {\n                    const endnode = this.nodes[j];\n                    const endlabel = endnode.getAttribute('label');\n                    const endid = endnode.id;\n                    this.paths.push({nodes: [startlabel,endlabel],\n                        path: this.pathFind(startid,endid)});\n                }\n            }\n            for(const key of Object.keys(this.paths))\n                if(this.paths[key].path.length > this.longest.path.length)\n                    this.longest = this.paths[key];\n        }\n\n        pathFind(startid,endid,checked) {\n            if(!checked) checked = [];\n            const edges = this.nexml.evaluate('//nex:edge[@source=\"'+startid+'\"]|//nex:edge[@target=\"'+startid+'\"]',this.nexml,this.nsResolver,XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,null);\n            var path;\n\n            for(let i=0; i < edges.snapshotLength; i++) {\n                const thisedge = edges.snapshotItem(i);\n                path = [thisedge];\n                if(checked.indexOf(thisedge.id) != -1) continue;\n\n                checked.push(thisedge.id);\n                const otherend = thisedge.getAttribute('source') !== startid ?\n                    thisedge.getAttribute('source') :\n                    thisedge.getAttribute('target');\n                if(otherend === endid) return path;\n                const othernode = this.nexml.evaluate('//nex:node[@id=\"'+otherend+'\"]',this.nexml,this.nsResolver,XPathResult.FIRST_ORDERED_NODE_TYPE,null);\n                if(othernode.singleNodeValue.hasAttribute('otu')) continue;\n                else {\n                    const nextlevel = this.pathFind(otherend,endid,checked);\n                    if(nextlevel) return path.concat(nextlevel);\n                    else continue;\n                }\n            }\n            return false;\n        }\n    \n        analyzeVariants(n,m) {\n            /* arguments: n -- index of lemma in each witness of the _texts object\n     * returns object of longest paths:\n     *      keys are lemmata,\n     *      value is either:\n     *          an object with properties length (int), branch_length (float), and paths (array)\n     *          or a string, the name of the witness, pointing to the normalized lemma\n     */\n            const lemmata = [];\n            const aliases = [];\n\n            const makeLgLemma = function(str) {\n                if(!str.startsWith('<lg')) return str;\n\n                return xslt.transformString(str,xslt.sheets['lg']).firstChild.data.slice(1);\n            };\n\n            const multiLemmaConcat = function(arr) {\n                return arr.map(lemma => {\n                    return makeLgLemma(lemma);\n                }).join(' ')\n                    .replace(/\\s+/g,' ')\n                    .trim();\n            };\n\n            const getReading = check.normalizedView() ?\n                function(n,text) {\n                    const word = find.firstword(n,text);\n                    return word.hasAttribute('lemma') ?\n                        word.getAttribute('lemma') :\n                        word.textContent;\n                } :\n                function(n,text) {\n                    return find.firstword(n,text).textContent;\n                };\n\n            for(const text of find.texts()) {\n                const key = text.parentNode.getAttribute('n');\n            \n                // ignore reconstructions and texts not in current tree\n                if(!this.nexml.querySelector(`otu[label=\"${key}\"]`))\n                    continue;\n\n                const lemma = m ?\n                    multiLemmaConcat(\n                    //Array.from(Array(parseInt(m)-n+1).keys(), p => p+n)\n                        find.range(n,m).map(x => getReading(x,text))\n                    ) :\n                    makeLgLemma(getReading(n,text));\n                if(lemma === '')\n                    if(lemmata.hasOwnProperty(''))\n                        lemmata[''].push(key);\n                    else\n                        lemmata[''] = [key];\n                else { // normalization dealt with elsewhere now\n                    if(lemmata.hasOwnProperty(lemma))\n                        lemmata[lemma].push(key);\n                    else\n                        lemmata[lemma] = [key];\n                    /*                const next_lemma = m ?\n                    findNextLemma2(value.text,m) :\n                    findNextLemma2(value.text,n);\n                const clean = normalize(lemma,next_lemma);\n                if(lemmata.hasOwnProperty(clean))\n                    lemmata[clean].push(key)\n                else lemmata[clean] = [key];\n\n                if(clean !== lemma)\n                    aliases[key] = clean;\n */\n                }\n            }\n            const longestPaths = {};\n            for(const lemma of Object.keys(lemmata)) {\n                var longest = {length: 0, branch_length: 0, paths: []};\n                if(lemmata[lemma].length === 1) {\n                    longest = false;\n                }\n                else {\n                    for(let i=0;i<lemmata[lemma].length;i++) {\n                        for(let j=i+1;j<lemmata[lemma].length;j++) {\n                            const path = this.getPath(lemmata[lemma][i],lemmata[lemma][j]);\n                            if(!path.hasOwnProperty('path'))\n                                //console.log(path);\n                                alert(path);\n                            if(path.path.length === longest.length) {\n                                const branch_length = this.calcBranchLength(path.path);\n                                if(branch_length === longest.branch_length)\n                                    longest.paths.push(path);\n                                else if(branch_length > longest.branch_length)\n                                    longest = {length: path.path.length,\n                                        branch_length: branch_length,\n                                        paths: [path]};\n                            }\n                            else if(path.path.length > longest.length)\n                                longest = {length: path.path.length,\n                                    branch_length: this.calcBranchLength(path.path),\n                                    paths: [path]};\n                        }\n                    }\n                }\n                longestPaths[lemma] = longest;\n            }\n            for(const key of Object.keys(aliases))\n                longestPaths[key] = aliases[key];\n            return longestPaths;\n        }\n\n        getPath(wit1,wit2) {\n            for(const path of this.paths) {\n            //const nodes = path.nodes.map(s => s.replace(/[-_]/g,''));\n                if(path.nodes.indexOf(wit1) > -1 && path.nodes.indexOf(wit2) > -1)\n                    return path;\n            }\n            return false;\n        }\n\n        calcBranchLength(path) {\n            return path.map(node => node.getAttribute('length'))\n                .reduce((acc,cur) => parseFloat(acc)+parseFloat(cur));\n        }\n    \n        colourizeVariants(n,m) {\n            const paths = this.analyzeVariants(n,m);\n            for(const el of this.boxdiv.querySelectorAll('span.tree-lemma')) {\n                const path = paths.hasOwnProperty(el.dataset.id) ?\n                    paths[paths[el.dataset.id]] :\n                    paths[el.textContent];\n                const red = {red: 252, green: 70, blue: 107};\n                const blue = {red: 63, green: 94, blue: 251};\n                if(path) {\n                    el.style.color = pickColour(path.length/this.longest.path.length,blue,red);\n                    el.dataset.length = path.length;\n                    el.dataset.branch_length = path.branch_length;\n                    el.dataset.nodes = path.paths[0].nodes.join(';');\n                }\n                else {\n                    el.style.color = pickColour(1/this.longest.path.length,blue,red);\n                    el.dataset.length = 0;\n                    el.dataset.branch_length = 0;\n                    el.dataset.nodes = '';\n                }\n                if(el.textContent.trim() === '') {\n                    el.innerHTML = '<span lang=\"en\">\\u00a0\\u00a0\\u00a0</span>';\n                    el.style.backgroundColor = el.style.color;\n                }\n                else el.style.backgroundColor = '';\n            }\n\n        }\n    }\n\n    class EdBox extends Box {\n        //    constructor(name,arr) {\n        constructor(name) {\n            super(name);\n            //        this.textmap = arr;\n            //this.desc = arr.get(name).desc;\n            this.desc = name;\n            this.text = find.firsttext(name);\n        //this.text = arr.get(name).text;\n        //this.name = name;\n        }\n        init() {\n            this.makeTextBox();\n            this.makeDescBox();\n            this.descbox.style.maxWidth = '595px';\n            this.descbox.style.paddingLeft = '5px';\n            this.boxdiv.addEventListener('mouseup',events.textMouseup);\n        }\n    \n        refresh() {\n        //this.text = _texts.get(this.name).text;\n        //this.text = find.firsttext(this.name);\n            this.boxdiv.innerHTML = '';\n            this.boxdiv.appendChild(xslt.sheets['lemma'].transformToFragment(this.text,document));\n            //this.boxdiv.appendChild(XSLTransformElement(this.text,xslt_proc));\n            touchUpNode(this.boxdiv);\n            for(const lemma of find.lemmata(false,this.boxdiv)) {\n                lemma.IAST = lemma.cloneNode(true);\n            }\n            //this.boxdiv.appendChild(csvToFrag(this.text));\n            this.updatescript();\n        }\n\n        makeTextBox() {\n            const textbox = document.createElement('div');\n            textbox.dataset.id = this.name; \n            textbox.classList.add('text-box');\n            textbox.appendChild(xslt.sheets['lemma'].transformToFragment(this.text,document));\n            //textbox.appendChild(XSLTransformElement(this.text,xslt_proc));\n            touchUpNode(textbox);\n            for(const lemma of find.lemmata(false,textbox))\n                lemma.IAST = lemma.cloneNode(true);\n            //textbox.appendChild(csvToFrag(this.text));\n            //touchUp(textbox);\n            this.boxdiv = textbox;\n        }\n    }\n\n    class MatrixBox extends Box {\n        constructor() {\n            super(name);\n            this.desc = 'Matrix';\n            this.name = 'Matrix';\n            this.makeDescBox();\n            this.makeViewBox();\n            this.descbox.style.maxWidth = '100vw';\n            this.descbox.style.paddingLeft = '5px';\n        }\n        init() {\n            this.makeTable();\n        }\n        makeViewBox() {\n            const box = document.createElement('div');\n            box.classList.add('matrix');\n            box.dataset.id = this.name;\n            this.boxdiv = box;\n        }\n        makeTable() {\n            /*        const header = document.createElement('table');\n        header.classList.add('header');\n        _texts.forEach((value,key) =>  {\n            const head = document.createElement('th');\n            const row = document.createElement('tr');\n            head.appendChild(document.createTextNode(value.desc));\n            row.appendChild(head);\n            header.appendChild(row);\n        });\n        */\n            const scroller = document.createElement('div');\n            scroller.classList.add('scroller');\n\n            scroller.append(xslt.sheets['matrix'].transformToFragment(_state.xml,document));\n            //scroller.append(XSLTransformElement(_state.xml.documentElement,xslt_proc));\n            for(const th of scroller.getElementsByTagName('th'))\n                th.addEventListener('dragstart',events.thDragStart);\n\n            scroller.addEventListener('dragenter',events.trDragEnter);\n            scroller.addEventListener('dragleave',events.trDragLeave);\n            scroller.addEventListener('dragover',e => e.preventDefault());\n            scroller.addEventListener('drop',events.trDragDrop);\n            scroller.addEventListener('mousedown',events.matrixMousedown);\n            //this.boxdiv.append(header);\n        \n            const head = document.createElement('tr');\n            head.classList.add('header');\n            const firsttd = document.createElement('td');\n            firsttd.classList.add('anchor');\n            head.appendChild(firsttd);\n            const trs = [...find.trs(scroller)];\n            const trwalkers = trs.map(tr => find.trWalker(tr));\n            const tds = find.tds(false,trs[0]);\n\n            for(const td of tds) {\n                const th = document.createElement('th');\n                th.dataset.ref = td.dataset.n;\n                let count = 0;\n                const unique = new Set();\n                for(const walker of trwalkers) {\n                    const node = walker.nextNode();\n                    node.IAST = node.cloneNode(true);\n                    const txt = node.textContent;\n                    if(txt !== '') {\n                        count++;\n                        unique.add(txt);\n                    }\n                }\n                const readings = count < 2 ? count : `${count}(${unique.size})`;\n                const readspan = document.createElement('span');\n                readspan.classList.add('readings');\n                readspan.appendChild(document.createTextNode(readings));\n                th.appendChild(readspan);\n                const form = document.createElement('form');\n                form.innerHTML = '<div><input class=\"insignificant\" title=\"insignificant\" type=\"checkbox\"' + \n                             (td.dataset.insignificant ? 'checked' : '') +\n                             '></div><div><input class=\"binary\" title=\"binary\" type=\"checkbox\"'+ \n                             (td.dataset.binary ? 'checked' : '') +\n                             '></div>';\n                th.appendChild(form);\n                head.appendChild(th);\n            }\n\n            const tbody = scroller.querySelector('tbody');\n            tbody.insertBefore(head,tbody.firstChild);\n            //head.addEventListener('click',events.matrixHeaderClick);\n            this.boxdiv.append(scroller);\n        }\n    }\n\n    const worker = {\n        fitch: function() {\n            var mss,levels,num,id;\n\n            const find = {\n                setIntersection: function(...sets) {\n                    const setA = sets[0];\n                    return new Set(\n                        [...setA].filter(el => {\n                            for(let n=1;n<sets.length;n++) {\n                                if(!sets[n].has(el))\n                                    return false;\n                            }\n                            return true;\n                        })\n                    );\n                },\n\n                setUnion: function(...sets) {\n                    return new Set(\n                        sets.reduce((acc, cur) => {\n                            acc = [...acc,...cur];\n                            return acc;\n                        },[])\n                    );\n                },\n            };\n\n            const fitch1 = function(n,target) {\n                const firstpass = new Map();\n                for(const taxon of levels[0]) {\n                    const val = mss.get(taxon);\n                    //const reading = mss.get(taxon)[n];\n                    //const reading = val? val[n] : '';\n                    const reading = val ? [val[n]] : [];\n                    firstpass.set(taxon,new Set(reading));\n                }\n                for(let m=1;m<levels.length;m++) { // start at 1 (after taxa)\n                    for(const [node,children] of levels[m]) {\n                        const readings = children.map(node => firstpass.get(node));\n                        const intersection = find.setIntersection(...readings);\n                    \n                        // shortcut, because we only care about one node\n                        if(node === target && intersection.size === 1)\n                            return [...intersection][0];\n\n                        const result = intersection.size > 0 ?\n                            intersection :\n                            find.setUnion(...readings);\n                        firstpass.set(node,result);\n\n                    }\n                }\n                return firstpass;\n\n            };\n\n            const fitch2 = function(firstpass,target) {\n                const taxa = levels[0];\n                const secondpass = new Map();\n                \n                /*\n                for(const [node,children] of levels[levels.length-1]) {\n                    secondpass.set(node,firstpass.get(node));\n                }\n                */\n                for(const level of levels[levels.length-1])\n                    secondpass.set(level[0],firstpass.get(level[0]));\n\n                for(let n=levels.length-1;n>1;n--) {\n                    for(const [node,children] of levels[n]) {\n                        const ancestral = secondpass.get(node);\n                        for(const child of children) {\n                            if(taxa.indexOf(child) !== -1)\n                                continue;\n                            const childreading = firstpass.get(child);\n                            const intersection = find.setIntersection(ancestral,childreading);\n                            const result = intersection.size > 0 ?\n                                intersection :\n                                childreading;\n                        \n                            // if reading of target node found, skip rest of reconstruction\n                            if(child === target)\n                                return result;\n\n                            secondpass.set(child,result);\n                        }\n                    }\n                }\n                return secondpass.get(target);\n            };\n\n            const fitch = function(target,n) {\n                const firstpass = fitch1(n,target);\n                if(typeof firstpass === 'string') {\n                    return firstpass;\n                }\n            \n                // do the second pass if the first pass is inconclusive\n                const formatOutput = function(m) {\n                    if(m.size === 1) return [...m][0].trim();\n                    const output = [...m].map(str => str.trim() === '' ? '_' : str);\n                    return output.length === 1 ? output[0] : '{' + output.join(', ') + '}';\n                };\n                return formatOutput(fitch2(firstpass,target));\n\n            };\n\n            onmessage = function(e) {\n                mss = e.data.readings;\n                levels = e.data.levels;\n                num = e.data.num;\n                id = e.data.id;\n                postMessage({n: num, result: fitch(id,num)});\n            };\n        }\n    };\n\n    return {\n        slaveinit: function() {\n            comboView.init();\n            if(window.startbox !== undefined) {\n                if(window.startbox.tree)\n                    newBox.tree(window.startbox.tree.stemmaid,window.startbox.tree.id);\n                else if(window.startbox.text)\n                    newBox.text(window.startbox.text.name,window.startbox.text.map);\n            }\n        },\n        maininit: function() {\n            document.getElementById('comboview').style.display = 'block';\n            comboView.init();\n            fillSelector();\n        },\n        init: function() {\n        /*\n        _texts = new Map(\n            VPTexts.map(o => {\n            o[1].text = o[1].text.split(';');\n            return o;\n            })\n        );*/\n            _state.viewdiv = document.getElementById('views');\n            _state.descs = document.getElementById('descs');\n            _state.viewdiv.addEventListener('click',events.textClick);\n            //        _state.viewdiv.addEventListener('mouseover',lemmaMouseover);\n            document.addEventListener('keydown',events.keyDown,{capture: true});\n            document.addEventListener('contextmenu',events.rightClick);\n            document.addEventListener('mouseup',contextMenu.remove);\n        },\n        getWindows: function() {\n            return _state.windows;\n        },\n        addWindow: function(win) {\n            _state.windows.push(win);\n        },\n        getViewdiv: function() {\n            return _state.viewdiv;\n        },\n        getTrees: function() {\n            return _state.trees;\n        },\n    };\n\n}());\n\nwindow.addEventListener('load',window.comboView.maininit);\n", "import {Sanscript} from \"./sanscript.js\";\nconst Normalizer = function() {\n  const filters_slp1 = [\n    {\n      name: \"valapalagilaka\",\n      search: \"с╣Щ\",\n      replace: () => \"r\"\n    },\n    {\n      name: \"short e\",\n      search: \"с║╜\",\n      replace: () => \"e\"\n    },\n    {\n      name: \"short o\",\n      search: \"├╡\",\n      replace: () => \"o\"\n    },\n    {\n      name: \"pс╣Ыс╣гс╣нham─Бtr─Б e\",\n      search: \"├к\",\n      replace: () => \"e\"\n    },\n    {\n      name: \"pс╣Ыс╣гс╣нham─Бtr─Б o\",\n      search: \"├┤\",\n      replace: () => \"o\"\n    },\n    {\n      name: \"pс╣Ыс╣гс╣нham─Бtr─Б ai\",\n      search: \"├К\",\n      replace: () => \"E\"\n    },\n    {\n      name: \"pс╣Ыс╣гс╣нham─Бtr─Б au\",\n      search: \"├Ф\",\n      replace: () => \"O\"\n    },\n    {\n      name: \"candrabindu\",\n      search: \"m╠Р\",\n      replace: () => \"M\"\n    },\n    {\n      name: \"oс╣Гk─Бras\",\n      search: \"oс╣Б\",\n      replace: () => \"oM\"\n    },\n    {\n      name: \"additional punctuation\",\n      search: \"[()\\\\[\\\\],;?!|_\\\\-=+\\\\d.'\\\\/]+\",\n      replace: () => \"\"\n    },\n    {\n      name: \"geminated aspirated consonants\",\n      search: \"(?:kK|gG|cC|jJ|wW|qQ|tT|dD|pP|bB)\",\n      replace: (match) => match[0].slice(-1)\n    },\n    {\n      name: \"geminated m after h\",\n      search: \"(?:Mhm|hmm)\",\n      replace: () => \"hm\"\n    },\n    {\n      name: \"geminated t\",\n      search: \"([rfi]|p[aA])tt|tt(?=[rvy]\\\\S)\",\n      replace: (match) => `${match[1]}t`\n    },\n    {\n      name: \"geminated consonants after r\",\n      search: \"([rf]\\\\s*)([kgcjwqdpbRnmyvl])\\\\2{1,2}\",\n      replace: (match) => `${match[1]}${match[2]}`\n    },\n    {\n      name: \"final nasal variants\",\n      search: \"(?:M[lSs]|nn)(?!\\\\S)\",\n      replace: () => \"n\"\n    },\n    {\n      name: \"internal nasal variants\",\n      search: \"[mnNYR](?=[pPbBmdDtTnwWqQcCjJkKgG])\",\n      replace: () => \"M\"\n    },\n    {\n      name: \"final anusv─Бra variants\",\n      search: \"M?[mN](?!\\\\S)|n(?=\\\\s+[tdn])|Y(?=\\\\s+[jc])\",\n      replace: () => \"M\"\n    },\n    {\n      name: \"visarga aс╕е before voiced consonants\",\n      search: \"(?<!\\\\sB)(?:a[Hr]|[o])(?=\\\\s+['gGjJqQdDnbBmrylvh])\",\n      replace: () => \"aH\"\n    },\n    {\n      name: \"visarga aс╕е before vowels\",\n      search: \"aH(?=\\\\s+[AiIeuUof])\",\n      replace: () => \"a\"\n    },\n    {\n      name: \"visarga aс╕е before unvoiced consonants and space + anusv─Бra\",\n      search: \"o\\\\s+(?=[kKcCwWtTpPszSM])\",\n      replace: () => \"aH a\"\n    },\n    {\n      name: \"visarga ─Бс╕е variants\",\n      search: \"AH(?=\\\\s+[aAiIeEuUogGjJqQdDbBnmyrlvh])\",\n      replace: () => \"A\"\n    },\n    {\n      name: \"other visarga variants\",\n      search: \"H?[rszS](?!\\\\S)\",\n      replace: () => \"H\"\n    },\n    {\n      name: \"avagrahas\",\n      search: \"'\",\n      replace: () => \"a\"\n    },\n    {\n      name: \"internal visarga variants\",\n      search: \"z(?=[kK])|s(?=s)\",\n      replace: () => \"H\"\n    },\n    {\n      name: \"final au/─Бv\",\n      search: \"Av(?!\\\\S)\",\n      replace: () => \"O\"\n    },\n    {\n      name: \"final su\",\n      search: \"(?<=[sz])v(?=\\\\s+[aAiIuUoOeE])\",\n      replace: () => \"u\"\n    },\n    {\n      name: \"final i\",\n      search: \"i(?=\\\\s+[aAuUoOeE])\",\n      replace: () => \"y\"\n    },\n    {\n      name: \"kcch/k┼Ы\",\n      search: \"k(\\\\s*)(?:S|c?C)\",\n      replace: (match) => `k${match[1]}S`\n    },\n    {\n      name: \"c┼Ы/t┼Ы\",\n      search: \"[tc](\\\\s*)S\",\n      replace: (match) => `c${match[1]}C`\n    },\n    {\n      name: \"cch/ch\",\n      search: \"([aAiIuUeEoO])C\",\n      replace: (match) => `${match[1]}cC`\n    },\n    {\n      name: \"final t + hi\",\n      search: \"d(\\\\s+)D(?=[iy](?:\\\\s|$))\",\n      replace: (match) => `t${match[1]}h`\n    },\n    {\n      name: \"final t + voiced syllable\",\n      search: \"d(?=(?:\\\\s+[aAiIeEuUoOgGdDbByrv]|\\\\s*$))\",\n      replace: () => \"t\"\n    },\n    {\n      name: \"final t + n/m\",\n      search: \"([ai])n(?=\\\\s+[nm])\",\n      replace: (match) => `${match[1]}t`\n    },\n    {\n      name: \"final t + c/j\",\n      search: \"j(?=\\\\s+j)|c(?=\\\\s+c)\",\n      replace: () => \"t\"\n    },\n    {\n      name: \"i/y + vowel\",\n      search: \"y(?=\\\\s+[aAuUeEoO])\",\n      replace: () => \"i\"\n    },\n    {\n      name: \"bhd for bdh\",\n      search: \"Bd\",\n      replace: () => \"bD\"\n    }\n  ];\n  const filters = [\n    {\n      name: \"valapalagilaka\",\n      search: \"с╣Щ\",\n      replace: () => \"r\"\n    },\n    {\n      name: \"short e\",\n      search: \"с║╜\",\n      replace: () => \"e\"\n    },\n    {\n      name: \"short o\",\n      search: \"├╡\",\n      replace: () => \"o\"\n    },\n    {\n      name: \"pс╣Ыс╣гс╣нham─Бtr─Б e\",\n      search: \"├к\",\n      replace: () => \"e\"\n    },\n    {\n      name: \"pс╣Ыс╣гс╣нham─Бtr─Б o\",\n      search: \"├┤\",\n      replace: () => \"o\"\n    },\n    {\n      name: \"pс╣Ыс╣гс╣нham─Бtr─Б ai\",\n      search: \"a├о\",\n      replace: () => \"ai\"\n    },\n    {\n      name: \"pс╣Ыс╣гс╣нham─Бtr─Б au\",\n      search: \"a├╗\",\n      replace: () => \"au\"\n    },\n    {\n      name: \"candrabindu\",\n      search: \"m╠Р\",\n      replace: () => \"с╣Г\"\n    },\n    {\n      name: \"oс╣Гk─Бras\",\n      search: \"oс╣Б\",\n      replace: () => \"oс╣Г\"\n    },\n    {\n      name: \"additional punctuation\",\n      search: \"[()\\\\[\\\\],;?!|_\\\\-=+\\\\d.'\\\\/]+\",\n      replace: () => \"\"\n    },\n    {\n      name: \"geminated aspirated consonants\",\n      search: \"([kgcjс╣нс╕Нtdpb]){2}h\",\n      replace: (match) => `${match[1]}h`\n    },\n    {\n      name: \"geminated m after h\",\n      search: \"(?:с╣Гhm|hmm)\",\n      replace: () => \"hm\"\n    },\n    {\n      name: \"geminated t\",\n      search: \"([rс╣Ыi]|p[a─Б])tt|tt(?=[rvy]\\\\S)\",\n      replace: (match) => `${match[1]}t`\n    },\n    {\n      name: \"geminated consonants after r\",\n      search: \"([rс╣Ы]\\\\s*)([kgcjс╣нс╕Нс╣Зtdnpbmyvl])\\\\2{1,2}\",\n      replace: (match) => `${match[1]}${match[2]}`\n    },\n    {\n      name: \"final nasal variants\",\n      search: \"(?:с╣Г[lс╣гs]|nn)(?!\\\\S)\",\n      replace: () => \"n\"\n    },\n    {\n      name: \"internal nasal variants\",\n      search: \"[mnс╣Е├▒с╣З](?=[pbmdtnс╣нс╕Нcjkg])\",\n      replace: () => \"с╣Г\"\n    },\n    {\n      name: \"final anusv─Бra variants\",\n      search: \"с╣Г?[mс╣Е](?!\\\\S)|n(?=\\\\s+[tdn])|├▒(?=\\\\s+[jc])\",\n      replace: () => \"с╣Г\"\n    },\n    {\n      name: \"visarga aс╕е before voiced consonants\",\n      search: \"(?:a[с╕еr]|[o])(?=\\\\s+['gjс╕Нdnbmyrlvh])\",\n      replace: () => \"aс╕е\"\n    },\n    {\n      name: \"visarga aс╕е before vowels\",\n      search: \"aс╕е(?=\\\\s+[─Бi─лeu┼лoс╣Ы])\",\n      replace: () => \"a\"\n    },\n    {\n      name: \"visarga aс╕е before unvoiced consonants and space + anusv─Бra\",\n      search: \"o\\\\s+(?=[kcс╣нtp┼Ыс╣гsс╣Г])\",\n      replace: () => \"aс╕е a\"\n    },\n    {\n      name: \"visarga ─Бс╕е variants\",\n      search: \"─Бс╕е(?=\\\\s+[a─Бi─лeu┼лogjс╕Нdnbmyrlvh])\",\n      replace: () => \"─Б\"\n    },\n    {\n      name: \"other visarga variants\",\n      search: \"с╕е?[r┼Ыс╣гs](?!\\\\S)\",\n      replace: () => \"с╕е\"\n    },\n    {\n      name: \"avagrahas\",\n      search: \"'\",\n      replace: () => \"a\"\n    },\n    {\n      name: \"internal visarga variants\",\n      search: \"с╣г(?=k)|s(?=s)\",\n      replace: () => \"s\"\n    },\n    {\n      name: \"final au/─Бv\",\n      search: \"─Бv(?!\\\\S)\",\n      replace: () => \"au\"\n    },\n    {\n      name: \"final su\",\n      search: \"(?<=[sс╣г])v(?=\\\\s+[a─Бi─лu┼лoe])\",\n      replace: () => \"u\"\n    },\n    {\n      name: \"final i\",\n      search: \"i(?=\\\\s+[a─Бu┼лeo])\",\n      replace: () => \"y\"\n    },\n    {\n      name: \"kcch/k┼Ы\",\n      search: \"k(\\\\s*)(?:┼Ы|c?ch)\",\n      replace: (match) => `k${match[1]}┼Ы`\n    },\n    {\n      name: \"c┼Ы/t┼Ы\",\n      search: \"[tc](\\\\s*)┼Ы\",\n      replace: (match) => `c${match[1]}ch`\n    },\n    {\n      name: \"cch/ch\",\n      search: \"([a─Бi─лu┼лeo])ch\",\n      replace: (match) => `${match[1]}cch`\n    },\n    {\n      name: \"final t + hi\",\n      search: \"d(\\\\s+)dh(?=[iy](?:\\\\s|$))\",\n      replace: (match) => `t${match[1]}h`\n    },\n    {\n      name: \"final t + voiced syllable\",\n      search: \"d(?=(?:\\\\s+[a─Бi─лeu┼лogdbyrv]|\\\\s*$))\",\n      replace: () => \"t\"\n    },\n    {\n      name: \"final t + n/m\",\n      search: \"([ai])n(?=\\\\s+[nm])\",\n      replace: (match) => `${match[1]}t`\n    },\n    {\n      name: \"final t + c/j\",\n      search: \"j(?=\\\\s+j)|c(?=\\\\s+c)\",\n      replace: () => \"t\"\n    },\n    {\n      name: \"i/y + vowel\",\n      search: \"y(?=\\\\s+[a─Бu┼лeo])\",\n      replace: () => \"i\"\n    },\n    {\n      name: \"bhd for bdh\",\n      search: \"bhd\",\n      replace: () => \"bdh\"\n    }\n  ];\n  const spaces = {\n    none: {\n      name: \"remove spaces\",\n      search: \"\\\\s\",\n      replace: () => \"\"\n    },\n    collapse: {\n      name: \"collapse spaces\",\n      search: \"\\\\s+\",\n      replace: () => \" \"\n    }\n  };\n  const replaceAll = function(filter, strs) {\n    const full = strs.join(\"\");\n    const newstrs = [];\n    const matches = [...full.matchAll(filter.search)];\n    let start = 0;\n    let remainder = null;\n    for (const str of strs) {\n      const end = start + str.length;\n      let newstr = str;\n      let offset = 0;\n      if (remainder) {\n        if (remainder.length <= str.length) {\n          newstr = strSplice(str, 0, remainder.length, remainder.text);\n          offset = remainder.text.length - remainder.length;\n          remainder = null;\n        } else {\n          const remhead = remainder.text.slice(0, str.length);\n          newstr = remhead;\n          const remtail = remainder.text.slice(str.length);\n          remainder = {length: remainder.length - str.length, text: remtail};\n          continue;\n        }\n      }\n      while (matches.length > 0 && matches[0].index < end) {\n        const match = matches.shift();\n        const matchstart = match.index - start + offset;\n        const newtxt = filter.replace(match);\n        if (match.index + match[0].length < end) {\n          newstr = strSplice(newstr, matchstart, match[0].length, newtxt);\n          offset = offset + newtxt.length - match[0].length;\n        } else {\n          const splitat = str.length - matchstart + offset;\n          const newhead = newtxt.slice(0, splitat);\n          newstr = newstr.slice(0, matchstart) + newhead;\n          const newtail = newtxt.slice(splitat);\n          const taillen = match[0].length - splitat;\n          remainder = {length: taillen, text: newtail};\n        }\n      }\n      newstrs.push(newstr);\n      start = end;\n    }\n    return newstrs;\n  };\n  const strSplice = function(str, start, len, splice_in) {\n    return str.slice(0, start) + splice_in + str.slice(start + len);\n  };\n  const filterAll = function(strs) {\n    let retstrs = strs.map((s) => Sanscript.t(s, \"iast\", \"slp1\"));\n    for (const filter of [...filters_slp1, spaces.none]) {\n      retstrs = replaceAll(filter, retstrs);\n    }\n    return retstrs.map((s) => Sanscript.t(s, \"slp1\", \"iast\"));\n  };\n  return filterAll;\n}();\nexport {Normalizer};\n", "import {Sanscript} from \"./sanscript.js\";\n\"use strict\";\nconst to = {\n  smush: function(text, placeholder) {\n    return text.toLowerCase().replace(/([с╕Нdrmvynhs]) ([a─Бi─лu┼лс╣Ыeo├й├│])/g, \"$1$2\" + placeholder).replace(/([kgcjс╣нс╕Нtdpb]) h/g, \"$1тАМ\" + placeholder + \"h\").replace(/([kgcj├▒с╕Нtdnpbmrlyv┼Ыс╣гsс╣Щ]) ([kgcjс╣нс╕Нtdnpbmyrlv┼Ыс╣гshс╕╗])/g, \"$1\" + placeholder + \"$2\").replace(/([o├│e├й─Б]) ([с╣Г'])/g, \"$1\" + placeholder + \"$2\").replace(/^с╣Г/, \"'тАНс╣Г\").replace(/^с╕е/, \"'тАНс╕е\").replace(/^_y/, \"'тАНy\").replace(/├╝/g, \"тАМu\").replace(/├п/g, \"тАМi\").replace(/_{1,2}(?=\\s*)/g, function(match) {\n      if (match === \"__\")\n        return \"тАН\";\n      else if (match === \"_\")\n        return \"тАМ\";\n    });\n  },\n  iast: function(text, f) {\n    const from = f || \"devanagari\";\n    return Sanscript.t(text, from, \"iast\", {skip_sgml: true});\n  },\n  devanagari: function(text, p) {\n    const placeholder = p || \"\";\n    const options = {skip_sgml: true};\n    const presmush = text.replace(/с╣Щ/g, \"r\").replace(/^_─Б/, \"рд╜тАНрд╛\");\n    const smushed = to.smush(presmush, placeholder);\n    const in_deva = Sanscript.t(smushed, \"iast\", \"devanagari\", options);\n    return in_deva.replace(/┬п/g, \"ъг╗\");\n  },\n  malayalam: function(text, p) {\n    const placeholder = p || \"\";\n    const options = {skip_sgml: true};\n    const chillu = {\n      р┤Х: \"р╡┐\",\n      р┤д: \"р╡╜\",\n      р┤и: \"р╡╗\",\n      р┤о: \"р╡Ф\",\n      р┤░: \"р╡╝\"\n    };\n    const presmush = text.replace(/^_─Б/, \"р┤╜тАНр┤╛\");\n    const smushed = to.smush(presmush, placeholder).replace(/e/g, \"с║╜\").replace(/o/g, \"├╡\").replace(/с╣Щ/g, \"r\").replace(/с╣Б/g, \"с╣Г\").replace(/с╕┐/g, \"с╣Г\").replace(/├н/g, \"i\").replace(/├║/g, \"u\").replace(/├й/g, \"e\");\n    const in_mlym = Sanscript.t(smushed, \"iast\", \"malayalam\", options);\n    return in_mlym.replace(/(^|[^р╡Н])р┤░р╡Н(?=\\S)/g, \"$1р╡О\").replace(/([р┤Хр┤др┤ир┤ор┤░])р╡Н(?![^\\s\\u200C,тАФтАЩтАХ])/g, function(match, p1) {\n      return chillu[p1];\n    });\n  },\n  grantha: function(text, p) {\n    const placeholder = p || \"\";\n    const options = {skip_sgml: true};\n    const finals = new Map([\n      [\"р┤╕\", \"юЗУ\"],\n      [\"р┤░\", \"р╡╝\"],\n      [\"р┤п\", \"юЗЛ\"],\n      [\"р┤Ъ\", \"юЖ╢\"],\n      [\"р┤ж\", \"юЗВ\"],\n      [\"р┤╢\", \"юЗТ\"]\n    ]);\n    const finals_regex = new RegExp(\"([\" + [...finals.keys()].join(\"\") + \"])р╡Н(?![^тАМ ,тАФтАЩтАХ])\", \"g\");\n    const presmush = text.replace(/^_─Б/, \"р┤╜тАНр┤╛\");\n    const smushed = to.smush(presmush, placeholder).replace(/e/g, \"с║╜\").replace(/o/g, \"├╡\").replace(/с╣Щ/g, \"r\").replace(/с╣Б/g, \"с╣Г\").replace(/с╕┐/g, \"с╣Г\").replace(/├н/g, \"i\").replace(/├║/g, \"u\").replace(/├й/g, \"e\");\n    const in_gnth = Sanscript.t(smushed, \"iast\", \"malayalam\", options);\n    return in_gnth.replace(/(^|[^р╡Н])р┤░р╡Н(?=\\S)/g, \"$1р╡О\").replace(finals_regex, (match, p1) => finals.get(p1)).replace(/р┤Хр╡Нр┤╖р┤┐/g, \"роХрпНро╖ро┐\");\n  },\n  telugu: function(text, p) {\n    var placeholder = p || \"\";\n    const options = {skip_sgml: true};\n    const presmush = text.replace(/^_─Б/, \"р░╜тАНр░╛\");\n    const smushed = to.smush(presmush, placeholder).replace(/e/g, \"с║╜\").replace(/o/g, \"├╡\").replace(/с╣Щ/g, \"rтАН\").replace(/с╣Б/g, \"с╣Г\").replace(/с╕┐/g, \"с╣Г\").replace(/├н/g, \"i\").replace(/├║/g, \"u\").replace(/├й/g, \"e\");\n    return Sanscript.t(smushed, \"iast\", \"telugu\", options);\n  }\n};\nconst changeScript = function(orignode, script, placeholder = false, cur_lang = \"sa\") {\n  const func = to[script];\n  const node = orignode.cloneNode(true);\n  const loop = function(node2, cur_lang2) {\n    let kids = node2.childNodes;\n    for (let kid of kids) {\n      if (kid.nodeType === 8)\n        continue;\n      if (kid.nodeType === 3) {\n        if (cur_lang2 !== \"sa\")\n          continue;\n        else\n          kid.data = func(kid.data, placeholder);\n      } else if (kid.hasChildNodes()) {\n        let kidlang = kid.getAttribute(\"lang\") || cur_lang2;\n        if (kidlang === \"sa\" && kid.classList.contains(\"subst\"))\n          jiggle(kid, script);\n        loop(kid, kidlang);\n      }\n    }\n  };\n  loop(node, cur_lang);\n  return node;\n};\nconst findTextNode = function(node, last = false) {\n  if (node.nodeType === 3)\n    return node;\n  const walker = document.createTreeWalker(node, NodeFilter.SHOW_TEXT, null, false);\n  if (!last)\n    return walker.nextNode;\n  else {\n    let txt;\n    while (walker.nextNode())\n      txt = walker.currentNode;\n    return txt;\n  }\n};\nconst jiggle = function(node, script) {\n  if (node.firstChild.nodeType !== 3 && node.lastChild.nodeType !== 3)\n    return;\n  const kids = node.childNodes;\n  const starts_with_vowel = /^[a─Бi─лu┼лeoс╣Ыс╣Эс╕╖с╣Гс╕е]/;\n  const ends_with_consonant = /[kgс╣Еcj├▒с╣нс╕Нс╣Зtdnpbmyrlvс╣г┼Ыsh]$/;\n  const telugu_vowels = [\"─Б\", \"i\", \"─л\", \"e\", \"o\", \"_\", \"ai\", \"au\"];\n  const telu_cons_headstroke = [\"h\", \"k\", \"┼Ы\", \"y\", \"g\", \"gh\", \"c\", \"ch\", \"jh\", \"с╣нh\", \"с╕Н\", \"с╕Нh\", \"t\", \"th\", \"d\", \"dh\", \"n\", \"p\", \"ph\", \"bh\", \"m\", \"r\", \"с╕╗\", \"v\", \"с╣г\", \"s\"];\n  var telugu_del_headstroke = false;\n  var telugu_kids = [];\n  var add_at_beginning = [];\n  const starts_with_text = kids[0].nodeType === 3;\n  for (let kid of kids) {\n    if (kid.nodeType > 3)\n      continue;\n    const txt = kid.textContent.trim();\n    if (txt === \"\")\n      continue;\n    if (txt === \"a\") {\n      kid.textContent = \"\";\n      continue;\n    }\n    if (txt.match(ends_with_consonant)) {\n      const last_txt = findTextNode(kid, true);\n      last_txt.textContent = last_txt.textContent.replace(/\\s+$/, \"\") + \"a\";\n      if (script === \"telugu\" && telu_cons_headstroke.indexOf(txt) >= 0) {\n        telugu_kids.push(kid);\n      }\n    }\n    if (kid === node.lastChild && kid.nodeType === 3) {\n      const cap = document.createElement(\"span\");\n      cap.appendChild(kid.cloneNode(false));\n      node.replaceChild(cap, kid);\n      kid = cap;\n      kid.classList.add(\"aalt\");\n    } else if (starts_with_text && txt.match(starts_with_vowel))\n      kid.classList.add(\"aalt\");\n    switch (script) {\n      case \"devanagari\":\n        if (txt === \"i\" || txt === \"├й\")\n          add_at_beginning.unshift(kid);\n        break;\n      case \"grantha\":\n      case \"malayalam\":\n        if (txt === \"e\" || txt === \"ai\")\n          add_at_beginning.unshift(kid);\n        else if (txt === \"o\") {\n          const new_e = kid.cloneNode(true);\n          replaceTextInNode(\"o\", \"e\", new_e);\n          add_at_beginning.unshift(new_e);\n          replaceTextInNode(\"o\", \"─Б\", kid);\n        }\n        break;\n      case \"telugu\":\n        if (!telugu_del_headstroke && telugu_vowels.indexOf(txt) >= 0)\n          telugu_del_headstroke = true;\n        break;\n    }\n  }\n  for (const el of add_at_beginning) {\n    node.insertBefore(el, node.firstChild);\n  }\n  if (telugu_del_headstroke) {\n    for (const el of telugu_kids) {\n      const lasttxtnode = findTextNode(el, true);\n      lasttxtnode.textContent = lasttxtnode.textContent + \"тАНр▒Н\";\n    }\n  }\n};\nconst replaceTextInNode = function(text, replace, node) {\n  const walker = document.createTreeWalker(node, NodeFilter.SHOW_TEXT, null, false);\n  while (walker.nextNode()) {\n    let cur_txt = walker.currentNode.textContent;\n    if (cur_txt.match(text))\n      walker.currentNode.textContent = replace;\n  }\n};\nexport {to, changeScript};\n", "'use strict';\n// loads from UTF-16 byte array\nlet contents = String.fromCharCode(60,120,115,108,58,115,116,121,108,101,115,104,101,101,116,32,118,101,114,115,105,111,110,61,34,49,46,48,34,32,120,109,108,110,115,58,120,115,108,61,34,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,49,57,57,57,47,88,83,76,47,84,114,97,110,115,102,111,114,109,34,10,32,32,32,32,32,32,32,32,120,109,108,110,115,58,120,61,34,104,116,116,112,58,47,47,119,119,119,46,116,101,105,45,99,46,111,114,103,47,110,115,47,49,46,48,34,10,32,32,32,32,32,32,32,32,101,120,99,108,117,100,101,45,114,101,115,117,108,116,45,112,114,101,102,105,120,101,115,61,34,120,34,62,10,60,120,115,108,58,111,117,116,112,117,116,32,109,101,116,104,111,100,61,34,116,101,120,116,34,32,111,109,105,116,45,120,109,108,45,100,101,99,108,97,114,97,116,105,111,110,61,34,121,101,115,34,47,62,10,32,32,32,32,60,120,115,108,58,115,116,114,105,112,45,115,112,97,99,101,32,101,108,101,109,101,110,116,115,61,34,42,34,47,62,10,32,32,32,32,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,47,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,32,32,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,32,32,32,32,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,112,97,114,97,91,99,111,110,116,101,110,116,45,115,116,121,108,101,93,91,110,111,116,40,116,101,120,116,40,41,41,93,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,110,111,114,109,97,108,105,122,101,45,115,112,97,99,101,40,46,41,34,47,62,10,32,32,32,32,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,32,32,32,32,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,116,101,105,67,111,114,112,117,115,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,32,32,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,32,32,32,32,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,84,69,73,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,110,34,47,62,60,120,115,108,58,116,101,120,116,62,44,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,38,35,120,97,59,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,32,32,32,32,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,116,101,120,116,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,32,32,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,32,32,32,32,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,119,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,34,60,47,120,115,108,58,116,101,120,116,62,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,60,120,115,108,58,116,101,120,116,62,34,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,60,33,45,45,120,115,108,58,105,102,32,116,101,115,116,61,34,110,111,116,40,112,111,115,105,116,105,111,110,40,41,32,61,32,108,97,115,116,40,41,41,34,45,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,44,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,60,33,45,45,47,120,115,108,58,105,102,45,45,62,10,32,32,32,32,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,32,32,32,32,60,33,45,45,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,110,111,100,101,40,41,124,64,42,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,99,111,112,121,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,32,115,101,108,101,99,116,61,34,110,111,100,101,40,41,124,64,42,34,47,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,99,111,112,121,62,10,32,32,32,32,60,47,120,115,108,58,116,101,109,112,108,97,116,101,45,45,62,10,60,47,120,115,108,58,115,116,121,108,101,115,104,101,101,116,62,10);\nexport default contents", "'use strict';\n// loads from UTF-16 byte array\nlet contents = String.fromCharCode(60,120,115,108,58,115,116,121,108,101,115,104,101,101,116,32,118,101,114,115,105,111,110,61,34,49,46,48,34,32,120,109,108,110,115,58,120,115,108,61,34,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,49,57,57,57,47,88,83,76,47,84,114,97,110,115,102,111,114,109,34,10,32,32,32,32,32,32,32,32,120,109,108,110,115,58,120,61,34,104,116,116,112,58,47,47,119,119,119,46,116,101,105,45,99,46,111,114,103,47,110,115,47,49,46,48,34,10,32,32,32,32,32,32,32,32,101,120,99,108,117,100,101,45,114,101,115,117,108,116,45,112,114,101,102,105,120,101,115,61,34,120,34,62,10,32,32,32,32,60,120,115,108,58,111,117,116,112,117,116,32,105,110,100,101,110,116,61,34,121,101,115,34,47,62,10,32,32,32,32,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,115,112,97,110,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,32,32,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,32,32,32,32,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,112,97,114,97,91,99,111,110,116,101,110,116,45,115,116,121,108,101,93,91,110,111,116,40,116,101,120,116,40,41,41,93,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,110,111,114,109,97,108,105,122,101,45,115,112,97,99,101,40,46,41,34,47,62,10,32,32,32,32,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,32,32,32,32,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,116,101,105,72,101,97,100,101,114,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,38,35,49,48,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,99,111,112,121,62,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,32,115,101,108,101,99,116,61,34,110,111,100,101,40,41,124,64,42,34,47,62,60,47,120,115,108,58,99,111,112,121,62,10,32,32,32,32,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,32,32,32,32,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,120,101,110,111,68,97,116,97,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,38,35,49,48,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,99,111,112,121,62,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,32,115,101,108,101,99,116,61,34,110,111,100,101,40,41,124,64,42,34,47,62,60,47,120,115,108,58,99,111,112,121,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,38,35,49,48,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,32,32,32,32,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,84,69,73,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,38,35,49,48,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,99,111,112,121,62,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,32,115,101,108,101,99,116,61,34,110,111,100,101,40,41,124,64,42,34,47,62,60,47,120,115,108,58,99,111,112,121,62,10,32,32,32,32,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,32,32,32,32,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,116,101,120,116,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,38,35,49,48,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,99,111,112,121,62,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,32,115,101,108,101,99,116,61,34,110,111,100,101,40,41,124,64,42,34,47,62,60,47,120,115,108,58,99,111,112,121,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,38,35,49,48,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,38,35,51,50,59,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,32,32,32,32,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,119,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,99,111,112,121,62,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,32,115,101,108,101,99,116,61,34,110,111,100,101,40,41,124,64,42,34,47,62,60,47,120,115,108,58,99,111,112,121,62,10,32,32,32,32,32,32,32,32,60,33,45,45,120,115,108,58,105,102,32,116,101,115,116,61,34,110,111,116,40,112,111,115,105,116,105,111,110,40,41,32,61,32,108,97,115,116,40,41,41,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,38,35,51,50,59,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,105,102,45,45,62,10,32,32,32,32,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,32,32,32,32,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,110,111,100,101,40,41,124,64,42,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,99,111,112,121,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,32,115,101,108,101,99,116,61,34,110,111,100,101,40,41,124,64,42,34,47,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,99,111,112,121,62,10,32,32,32,32,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,60,47,120,115,108,58,115,116,121,108,101,115,104,101,101,116,62,10);\nexport default contents", "'use strict';\n// loads from UTF-16 byte array\nlet contents = String.fromCharCode(60,120,115,108,58,115,116,121,108,101,115,104,101,101,116,32,118,101,114,115,105,111,110,61,34,49,46,48,34,32,120,109,108,110,115,58,120,115,108,61,34,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,49,57,57,57,47,88,83,76,47,84,114,97,110,115,102,111,114,109,34,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,120,109,108,110,115,58,120,61,34,104,116,116,112,58,47,47,119,119,119,46,116,101,105,45,99,46,111,114,103,47,110,115,47,49,46,48,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,120,99,108,117,100,101,45,114,101,115,117,108,116,45,112,114,101,102,105,120,101,115,61,34,120,34,62,10,60,120,115,108,58,111,117,116,112,117,116,32,109,101,116,104,111,100,61,34,104,116,109,108,34,47,62,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,116,101,105,67,111,114,112,117,115,34,62,10,32,32,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,116,97,98,108,101,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,84,69,73,34,62,10,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,116,101,120,116,34,62,10,32,32,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,116,114,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,110,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,46,46,47,64,110,34,47,62,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,105,102,32,116,101,115,116,61,34,46,46,47,64,99,111,114,114,101,115,112,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,116,114,101,101,110,97,109,101,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,46,46,47,64,99,111,114,114,101,115,112,34,47,62,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,110,111,100,101,110,97,109,101,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,46,46,47,64,115,101,108,101,99,116,34,47,62,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,105,102,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,116,104,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,115,99,111,112,101,34,62,114,111,119,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,114,97,103,103,97,98,108,101,34,62,116,114,117,101,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,46,46,47,64,110,34,47,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,119,34,62,10,32,32,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,116,100,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,99,104,111,111,115,101,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,119,104,101,110,32,116,101,115,116,61,34,112,97,114,101,110,116,58,58,120,58,99,108,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,99,104,111,111,115,101,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,119,104,101,110,32,116,101,115,116,61,34,112,111,115,105,116,105,111,110,40,41,32,61,32,39,49,39,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,99,108,97,115,115,34,62,108,101,109,109,97,32,103,114,111,117,112,45,115,116,97,114,116,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,47,120,115,108,58,119,104,101,110,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,119,104,101,110,32,116,101,115,116,61,34,112,111,115,105,116,105,111,110,40,41,32,61,32,108,97,115,116,40,41,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,99,108,97,115,115,34,62,108,101,109,109,97,32,103,114,111,117,112,45,101,110,100,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,47,120,115,108,58,119,104,101,110,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,111,116,104,101,114,119,105,115,101,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,99,108,97,115,115,34,62,108,101,109,109,97,32,103,114,111,117,112,45,105,110,116,101,114,110,97,108,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,47,120,115,108,58,111,116,104,101,114,119,105,115,101,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,47,120,115,108,58,99,104,111,111,115,101,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,47,120,115,108,58,119,104,101,110,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,111,116,104,101,114,119,105,115,101,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,99,108,97,115,115,34,62,108,101,109,109,97,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,47,120,115,108,58,111,116,104,101,114,119,105,115,101,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,99,104,111,111,115,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,105,102,32,116,101,115,116,61,34,64,108,101,109,109,97,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,110,111,114,109,97,108,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,108,101,109,109,97,34,47,62,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,105,102,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,105,102,32,116,101,115,116,61,34,64,101,109,101,110,100,101,100,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,101,109,101,110,100,101,100,34,62,116,114,117,101,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,105,102,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,110,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,110,34,47,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,105,102,32,116,101,115,116,61,34,64,105,110,115,105,103,110,105,102,105,99,97,110,116,61,39,116,114,117,101,39,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,105,110,115,105,103,110,105,102,105,99,97,110,116,34,62,116,114,117,101,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,105,102,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,105,102,32,116,101,115,116,61,34,64,98,105,110,97,114,121,61,39,116,114,117,101,39,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,98,105,110,97,114,121,34,62,116,114,117,101,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,105,102,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,60,47,120,115,108,58,115,116,121,108,101,115,104,101,101,116,62,10);\nexport default contents", "'use strict';\n// loads from UTF-16 byte array\nlet contents = String.fromCharCode(60,120,115,108,58,115,116,121,108,101,115,104,101,101,116,32,118,101,114,115,105,111,110,61,34,49,46,48,34,32,120,109,108,110,115,58,120,115,108,61,34,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,49,57,57,57,47,88,83,76,47,84,114,97,110,115,102,111,114,109,34,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,120,109,108,110,115,58,120,61,34,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,49,57,57,57,47,120,104,116,109,108,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,120,99,108,117,100,101,45,114,101,115,117,108,116,45,112,114,101,102,105,120,101,115,61,34,120,34,62,10,60,120,115,108,58,111,117,116,112,117,116,32,109,101,116,104,111,100,61,34,104,116,109,108,34,32,111,109,105,116,45,120,109,108,45,100,101,99,108,97,114,97,116,105,111,110,61,34,121,101,115,34,47,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,112,98,34,62,10,32,32,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,104,114,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,110,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,110,34,47,62,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,32,32,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,105,109,103,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,99,108,97,115,115,34,62,101,100,105,116,98,117,116,116,111,110,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,110,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,110,34,47,62,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,115,114,99,34,62,101,100,105,116,95,105,99,111,110,46,115,118,103,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,32,32,32,32,60,104,51,32,99,108,97,115,115,61,34,112,98,34,32,108,97,110,103,61,34,101,110,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,110,34,47,62,60,47,104,51,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,108,98,34,62,10,60,98,114,32,47,62,10,60,115,112,97,110,32,99,108,97,115,115,61,34,108,98,34,32,108,97,110,103,61,34,101,110,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,110,34,47,62,60,47,115,112,97,110,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,102,119,34,62,10,60,100,105,118,32,99,108,97,115,115,61,34,102,119,34,62,40,60,105,32,108,97,110,103,61,34,101,110,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,116,121,112,101,34,47,62,44,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,112,108,97,99,101,34,47,62,60,47,105,62,41,58,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,60,47,100,105,118,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,100,105,118,91,64,116,121,112,101,61,39,115,116,111,114,121,39,93,34,62,10,32,32,32,32,60,115,112,97,110,32,99,108,97,115,115,61,34,115,116,111,114,121,34,32,108,97,110,103,61,34,101,110,34,62,40,115,116,111,114,121,32,110,111,46,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,110,117,109,34,47,62,44,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,99,105,116,121,34,47,62,44,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,107,105,110,103,34,47,62,41,60,47,115,112,97,110,62,10,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,100,105,118,91,64,116,121,112,101,61,39,118,101,114,115,101,39,93,34,62,10,32,32,32,32,60,115,112,97,110,32,99,108,97,115,115,61,34,118,101,114,115,101,34,62,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,32,47,62,60,47,115,112,97,110,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,100,101,108,34,62,10,32,32,32,32,60,120,115,108,58,118,97,114,105,97,98,108,101,32,110,97,109,101,61,34,114,101,110,100,34,32,115,101,108,101,99,116,61,34,64,114,101,110,100,34,47,62,10,32,32,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,100,101,108,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,116,105,116,108,101,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,100,101,108,101,116,101,100,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,105,102,32,116,101,115,116,61,34,115,116,114,105,110,103,40,36,114,101,110,100,41,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,32,40,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,36,114,101,110,100,34,47,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,41,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,60,47,120,115,108,58,105,102,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,97,100,100,34,62,10,32,32,32,32,60,120,115,108,58,118,97,114,105,97,98,108,101,32,110,97,109,101,61,34,112,108,97,99,101,34,32,115,101,108,101,99,116,61,34,64,112,108,97,99,101,34,47,62,10,32,32,32,32,60,120,115,108,58,118,97,114,105,97,98,108,101,32,110,97,109,101,61,34,114,101,110,100,34,32,115,101,108,101,99,116,61,34,64,114,101,110,100,34,47,62,10,32,32,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,105,110,115,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,116,105,116,108,101,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,97,100,100,101,100,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,105,102,32,116,101,115,116,61,34,115,116,114,105,110,103,40,36,114,101,110,100,41,32,111,114,32,115,116,114,105,110,103,40,36,112,108,97,99,101,41,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,32,40,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,36,114,101,110,100,34,47,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,105,102,32,116,101,115,116,61,34,115,116,114,105,110,103,40,36,114,101,110,100,41,32,97,110,100,32,115,116,114,105,110,103,40,36,112,108,97,99,101,41,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,44,32,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,47,120,115,108,58,105,102,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,36,112,108,97,99,101,34,47,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,41,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,47,120,115,108,58,105,102,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,115,117,98,115,116,34,62,10,32,32,32,32,60,115,112,97,110,32,99,108,97,115,115,61,34,115,117,98,115,116,34,62,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,32,47,62,60,47,115,112,97,110,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,103,34,62,10,32,32,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,115,112,97,110,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,116,105,116,108,101,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,114,101,110,100,34,47,62,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,99,108,97,115,115,34,62,103,97,105,106,105,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,108,103,34,62,10,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,115,112,97,110,34,62,10,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,99,108,97,115,115,34,62,116,114,101,101,45,118,101,114,115,101,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,108,97,110,103,34,62,101,110,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,60,120,115,108,58,116,101,120,116,62,91,118,101,114,115,101,32,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,110,34,47,62,10,32,32,32,32,60,120,115,108,58,116,101,120,116,62,93,60,47,120,115,108,58,116,101,120,116,62,10,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,108,34,62,10,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,115,112,97,110,34,62,10,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,99,108,97,115,115,34,62,108,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,60,47,120,115,108,58,115,116,121,108,101,115,104,101,101,116,62,10);\nexport default contents", "'use strict';\n// loads from UTF-16 byte array\nlet contents = String.fromCharCode(60,120,115,108,58,115,116,121,108,101,115,104,101,101,116,32,118,101,114,115,105,111,110,61,34,49,46,48,34,32,120,109,108,110,115,58,120,115,108,61,34,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,49,57,57,57,47,88,83,76,47,84,114,97,110,115,102,111,114,109,34,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,120,109,108,110,115,58,120,61,34,104,116,116,112,58,47,47,119,119,119,46,116,101,105,45,99,46,111,114,103,47,110,115,47,49,46,48,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,120,99,108,117,100,101,45,114,101,115,117,108,116,45,112,114,101,102,105,120,101,115,61,34,120,34,62,10,60,120,115,108,58,111,117,116,112,117,116,32,109,101,116,104,111,100,61,34,104,116,109,108,34,47,62,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,119,34,62,10,32,32,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,115,112,97,110,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,110,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,110,34,47,62,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,105,102,32,116,101,115,116,61,34,64,108,101,109,109,97,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,110,111,114,109,97,108,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,108,101,109,109,97,34,47,62,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,105,102,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,105,102,32,116,101,115,116,61,34,64,101,109,101,110,100,101,100,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,101,109,101,110,100,101,100,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,101,109,101,110,100,101,100,34,47,62,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,105,102,62,10,32,32,32,32,32,32,32,60,120,115,108,58,99,104,111,111,115,101,62,10,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,119,104,101,110,32,116,101,115,116,61,34,110,111,116,40,110,111,114,109,97,108,105,122,101,45,115,112,97,99,101,40,46,41,41,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,99,108,97,115,115,34,62,108,101,109,109,97,32,105,110,118,105,115,105,98,108,101,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,38,35,120,48,48,65,48,59,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,47,120,115,108,58,119,104,101,110,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,111,116,104,101,114,119,105,115,101,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,99,108,97,115,115,34,62,108,101,109,109,97,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,47,120,115,108,58,111,116,104,101,114,119,105,115,101,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,99,104,111,111,115,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,32,32,32,32,60,120,115,108,58,116,101,120,116,62,38,35,49,55,51,59,60,47,120,115,108,58,116,101,120,116,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,99,108,34,62,10,32,32,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,115,112,97,110,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,99,108,97,115,115,34,62,103,114,111,117,112,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,112,98,34,62,10,32,32,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,104,114,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,110,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,110,34,47,62,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,32,32,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,105,109,103,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,99,108,97,115,115,34,62,101,100,105,116,98,117,116,116,111,110,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,110,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,110,34,47,62,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,115,114,99,34,62,101,100,105,116,95,105,99,111,110,46,115,118,103,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,32,32,32,32,60,104,51,32,99,108,97,115,115,61,34,112,98,34,32,108,97,110,103,61,34,101,110,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,110,34,47,62,60,47,104,51,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,108,98,34,62,10,60,98,114,32,47,62,10,60,115,112,97,110,32,99,108,97,115,115,61,34,108,98,34,32,108,97,110,103,61,34,101,110,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,110,34,47,62,60,47,115,112,97,110,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,102,119,34,62,10,60,100,105,118,32,99,108,97,115,115,61,34,102,119,34,62,40,60,105,32,108,97,110,103,61,34,101,110,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,116,121,112,101,34,47,62,44,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,112,108,97,99,101,34,47,62,60,47,105,62,41,58,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,60,47,100,105,118,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,100,105,118,91,64,116,121,112,101,61,39,115,116,111,114,121,39,93,34,62,10,32,32,32,32,60,115,112,97,110,32,99,108,97,115,115,61,34,115,116,111,114,121,34,32,108,97,110,103,61,34,101,110,34,62,40,115,116,111,114,121,32,110,111,46,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,110,117,109,34,47,62,44,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,99,105,116,121,34,47,62,44,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,107,105,110,103,34,47,62,41,60,47,115,112,97,110,62,10,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,100,105,118,91,64,116,121,112,101,61,39,118,101,114,115,101,39,93,34,62,10,32,32,32,32,60,115,112,97,110,32,99,108,97,115,115,61,34,118,101,114,115,101,34,62,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,32,47,62,60,47,115,112,97,110,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,100,101,108,34,62,10,32,32,32,32,60,120,115,108,58,118,97,114,105,97,98,108,101,32,110,97,109,101,61,34,114,101,110,100,34,32,115,101,108,101,99,116,61,34,64,114,101,110,100,34,47,62,10,32,32,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,100,101,108,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,116,105,116,108,101,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,100,101,108,101,116,101,100,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,105,102,32,116,101,115,116,61,34,115,116,114,105,110,103,40,36,114,101,110,100,41,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,32,40,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,36,114,101,110,100,34,47,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,41,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,60,47,120,115,108,58,105,102,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,97,100,100,34,62,10,32,32,32,32,60,120,115,108,58,118,97,114,105,97,98,108,101,32,110,97,109,101,61,34,112,108,97,99,101,34,32,115,101,108,101,99,116,61,34,64,112,108,97,99,101,34,47,62,10,32,32,32,32,60,120,115,108,58,118,97,114,105,97,98,108,101,32,110,97,109,101,61,34,114,101,110,100,34,32,115,101,108,101,99,116,61,34,64,114,101,110,100,34,47,62,10,32,32,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,105,110,115,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,116,105,116,108,101,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,97,100,100,101,100,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,105,102,32,116,101,115,116,61,34,115,116,114,105,110,103,40,36,114,101,110,100,41,32,111,114,32,115,116,114,105,110,103,40,36,112,108,97,99,101,41,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,32,40,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,36,114,101,110,100,34,47,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,105,102,32,116,101,115,116,61,34,115,116,114,105,110,103,40,36,114,101,110,100,41,32,97,110,100,32,115,116,114,105,110,103,40,36,112,108,97,99,101,41,34,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,44,32,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,47,120,115,108,58,105,102,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,36,112,108,97,99,101,34,47,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,120,115,108,58,116,101,120,116,62,41,60,47,120,115,108,58,116,101,120,116,62,10,32,32,32,32,32,32,32,32,32,32,32,32,60,47,120,115,108,58,105,102,62,10,32,32,32,32,32,32,32,32,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,115,117,98,115,116,34,62,10,32,32,32,32,60,115,112,97,110,32,99,108,97,115,115,61,34,115,117,98,115,116,34,62,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,32,47,62,60,47,115,112,97,110,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,103,34,62,10,32,32,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,115,112,97,110,34,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,100,97,116,97,45,116,105,116,108,101,34,62,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,114,101,110,100,34,47,62,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,99,108,97,115,115,34,62,103,97,105,106,105,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,108,103,34,62,10,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,115,112,97,110,34,62,10,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,99,108,97,115,115,34,62,108,103,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,108,34,62,10,32,32,60,120,115,108,58,101,108,101,109,101,110,116,32,110,97,109,101,61,34,115,112,97,110,34,62,10,32,32,32,32,60,120,115,108,58,97,116,116,114,105,98,117,116,101,32,110,97,109,101,61,34,99,108,97,115,115,34,62,108,60,47,120,115,108,58,97,116,116,114,105,98,117,116,101,62,10,32,32,32,32,60,120,115,108,58,97,112,112,108,121,45,116,101,109,112,108,97,116,101,115,47,62,10,32,32,60,47,120,115,108,58,101,108,101,109,101,110,116,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,60,47,120,115,108,58,115,116,121,108,101,115,104,101,101,116,62,10);\nexport default contents", "'use strict';\n// loads from UTF-16 byte array\nlet contents = String.fromCharCode(60,120,115,108,58,115,116,121,108,101,115,104,101,101,116,32,118,101,114,115,105,111,110,61,34,49,46,48,34,32,120,109,108,110,115,58,120,115,108,61,34,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,49,57,57,57,47,88,83,76,47,84,114,97,110,115,102,111,114,109,34,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,120,109,108,110,115,58,120,61,34,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,49,57,57,57,47,120,104,116,109,108,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,120,99,108,117,100,101,45,114,101,115,117,108,116,45,112,114,101,102,105,120,101,115,61,34,120,34,62,10,60,120,115,108,58,111,117,116,112,117,116,32,109,101,116,104,111,100,61,34,116,101,120,116,34,32,111,109,105,116,45,120,109,108,45,100,101,99,108,97,114,97,116,105,111,110,61,34,121,101,115,34,47,62,10,60,120,115,108,58,116,101,109,112,108,97,116,101,32,109,97,116,99,104,61,34,120,58,108,103,34,62,10,60,120,115,108,58,118,97,108,117,101,45,111,102,32,115,101,108,101,99,116,61,34,64,110,34,47,62,10,60,47,120,115,108,58,116,101,109,112,108,97,116,101,62,10,60,47,120,115,108,58,115,116,121,108,101,115,104,101,101,116,62,10);\nexport default contents", "import csvXSLT from \"../xslt/csv.js\";\nimport prettyXSLT from \"../xslt/prettyprint.js\";\nimport matrixXSLT from \"../xslt/matrix.js\";\nimport treeXSLT from \"../xslt/tree.js\";\nimport lemmaXSLT from \"../xslt/lemma.js\";\nimport lgXSLT from \"../xslt/lg.js\";\nconst makeProc = function(sheet) {\n  const parser = new DOMParser();\n  const xslsheet = parser.parseFromString(sheet, \"text/xml\");\n  const xslt_proc = new XSLTProcessor();\n  xslt_proc.importStylesheet(xslsheet);\n  return xslt_proc;\n};\nconst xslt = function(_state, _const) {\n  this.transformString = function(s, proc) {\n    const temp = _state.xml.createElementNS(_const.teins, \"ab\");\n    temp.innerHTML = s;\n    return proc.transformToFragment(temp, document);\n  };\n  this.sheets = {\n    csv: makeProc(csvXSLT),\n    xml: makeProc(prettyXSLT),\n    matrix: makeProc(matrixXSLT),\n    lemma: makeProc(lemmaXSLT),\n    lg: makeProc(lgXSLT),\n    tree: makeProc(treeXSLT)\n  };\n};\nexport {xslt};\n", "/**\n * @constructor\n * @param {!{patterns: !Object, leftmin: !number, rightmin: !number}} language The language pattern file. Compatible with Hyphenator.js.\n */\nfunction Hypher(language) {\n    var exceptions = [],\n        i = 0;\n    /**\n     * @type {!Hypher.TrieNode}\n     */\n    this.trie = this.createTrie(language['patterns']);\n\n    /**\n     * @type {!number}\n     * @const\n     */\n    this.leftMin = language['leftmin'];\n\n    /**\n     * @type {!number}\n     * @const\n     */\n    this.rightMin = language['rightmin'];\n\n    /**\n     * @type {!Object.<string, !Array.<string>>}\n     */\n    this.exceptions = {};\n\n    if (language['exceptions']) {\n        exceptions = language['exceptions'].split(/,\\s?/g);\n\n        for (; i < exceptions.length; i += 1) {\n            this.exceptions[exceptions[i].replace(/\\u2027/g, '').toLowerCase()] = new RegExp('(' + exceptions[i].split('\\u2027').join(')(') + ')', 'i');\n        }\n    }\n}\n\n/**\n * Creates a trie from a language pattern.\n * @private\n * @param {!Object} patternObject An object with language patterns.\n * @return {!Hypher.TrieNode} An object trie.\n */\nHypher.prototype.createTrie = function (patternObject) {\n    var size = 0,\n        i = 0,\n        c = 0,\n        p = 0,\n        chars = null,\n        points = null,\n        codePoint = null,\n        t = null,\n        tree = {\n            _points: []\n        },\n        patterns;\n\n    for (size in patternObject) {\n        if (patternObject.hasOwnProperty(size)) {\n            patterns = patternObject[size].match(new RegExp('.{1,' + (+size) + '}', 'g'));\n\n            for (i = 0; i < patterns.length; i += 1) {\n                chars = patterns[i].replace(/[0-9]/g, '').split('');\n                points = patterns[i].split(/\\D/);\n                t = tree;\n\n                for (c = 0; c < chars.length; c += 1) {\n                    codePoint = chars[c].charCodeAt(0);\n\n                    if (!t[codePoint]) {\n                        t[codePoint] = {};\n                    }\n                    t = t[codePoint];\n                }\n\n                t._points = [];\n\n                for (p = 0; p < points.length; p += 1) {\n                    t._points[p] = points[p] || 0;\n                }\n            }\n        }\n    }\n    return tree;\n};\n\n/**\n * Hyphenates a text.\n *\n * @param {!string} str The text to hyphenate.\n * @return {!string} The same text with soft hyphens inserted in the right positions.\n */\nHypher.prototype.hyphenateText = function (str, minLength) {\n    minLength = minLength || 4;\n\n    // Regexp(\"\\b\", \"g\") splits on word boundaries,\n    // compound separators and ZWNJ so we don't need\n    // any special cases for those characters. Unfortunately\n    // it does not support unicode word boundaries, so\n    // we implement it manually.\n    var words = str.split(/([a-zA-Z0-9_\\u0027\\u00AD\\u00DF-\\u00EA\\u00EB\\u00EC-\\u00EF\\u00F1-\\u00F6\\u00F8-\\u00FD\\u0101\\u0103\\u0105\\u0107\\u0109\\u010D\\u010F\\u0111\\u0113\\u0117\\u0119\\u011B\\u011D\\u011F\\u0123\\u0125\\u012B\\u012F\\u0131\\u0135\\u0137\\u013C\\u013E\\u0142\\u0144\\u0146\\u0148\\u0151\\u0153\\u0155\\u0159\\u015B\\u015D\\u015F\\u0161\\u0165\\u016B\\u016D\\u016F\\u0171\\u0173\\u017A\\u017C\\u017E\\u017F\\u0219\\u021B\\u02BC\\u0390\\u03AC-\\u03CE\\u03F2\\u0401\\u0410-\\u044F\\u0451\\u0454\\u0456\\u0457\\u045E\\u0491\\u0531-\\u0556\\u0561-\\u0587\\u0902\\u0903\\u0905-\\u090B\\u090E-\\u0910\\u0912\\u0914-\\u0928\\u092A-\\u0939\\u093E-\\u0943\\u0946-\\u0948\\u094A-\\u094D\\u0982\\u0983\\u0985-\\u098B\\u098F\\u0990\\u0994-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BE-\\u09C3\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u0A02\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A14-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A82\\u0A83\\u0A85-\\u0A8B\\u0A8F\\u0A90\\u0A94-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABE-\\u0AC3\\u0AC7\\u0AC8\\u0ACB-\\u0ACD\\u0B02\\u0B03\\u0B05-\\u0B0B\\u0B0F\\u0B10\\u0B14-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3E-\\u0B43\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B57\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C02\\u0C03\\u0C05-\\u0C0B\\u0C0E-\\u0C10\\u0C12\\u0C14-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3E-\\u0C43\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C82\\u0C83\\u0C85-\\u0C8B\\u0C8E-\\u0C90\\u0C92\\u0C94-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBE-\\u0CC3\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3E-\\u0D43\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u1F00-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB2-\\u1FB4\\u1FB6\\u1FB7\\u1FBD\\u1FBF\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD2\\u1FD3\\u1FD6\\u1FD7\\u1FE2-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u200D\\u2019]+)/gi);\n\n    for (var i = 0; i < words.length; i += 1) {\n        if (words[i].indexOf('/') !== -1) {\n            // Don't insert a zero width space if the slash is at the beginning or end\n            // of the text, or right after or before a space.\n            if (i !== 0 && i !== words.length - 1 && !(/\\s+\\/|\\/\\s+/.test(words[i]))) {\n                words[i] += '\\u200B';\n            }\n        } else if (words[i].length > minLength) {\n            words[i] = this.hyphenate(words[i]).join('\\u00AD');\n        }\n    }\n    return words.join('');\n};\n\n/**\n * Hyphenates a word.\n *\n * @param {!string} word The word to hyphenate\n * @return {!Array.<!string>} An array of word fragments indicating valid hyphenation points.\n */\nHypher.prototype.hyphenate = function (word) {\n    var characters,\n        characterPoints = [],\n        originalCharacters,\n        i,\n        j,\n        k,\n        node,\n        points = [],\n        wordLength,\n        lowerCaseWord = word.toLowerCase(),\n        nodePoints,\n        nodePointsLength,\n        m = Math.max,\n        trie = this.trie,\n        result = [''];\n\n    if (this.exceptions.hasOwnProperty(lowerCaseWord)) {\n        return word.match(this.exceptions[lowerCaseWord]).slice(1);\n    }\n\n    if (word.indexOf('\\u00AD') !== -1) {\n        return [word];\n    }\n\n    word = '_' + word + '_';\n\n    characters = word.toLowerCase().split('');\n    originalCharacters = word.split('');\n    wordLength = characters.length;\n\n    for (i = 0; i < wordLength; i += 1) {\n        points[i] = 0;\n        characterPoints[i] = characters[i].charCodeAt(0);\n    }\n\n    for (i = 0; i < wordLength; i += 1) {\n        node = trie;\n        for (j = i; j < wordLength; j += 1) {\n            node = node[characterPoints[j]];\n\n            if (node) {\n                nodePoints = node._points;\n                if (nodePoints) {\n                    for (k = 0, nodePointsLength = nodePoints.length; k < nodePointsLength; k += 1) {\n                        points[i + k] = m(points[i + k], nodePoints[k]);\n                    }\n                }\n            } else {\n                break;\n            }\n        }\n    }\n\n    for (i = 1; i < wordLength - 1; i += 1) {\n        if (i > this.leftMin && i < (wordLength - this.rightMin) && points[i] % 2) {\n            result.push(originalCharacters[i]);\n        } else {\n            result[result.length - 1] += originalCharacters[i];\n        }\n    }\n\n    return result;\n};\n\nvar hypher = Hypher;\n\nexport default hypher;\n", "const hyphenation_sa = {\n  id: \"sa\",\n  leftmin: 2,\n  rightmin: 2,\n  patterns: {\n    2: \"a1e1i1o1u1├й1├н1├п1├│1├║1├╝1─Б1─л1┼л1с╕╖1с╕╣1с╣Ы1с╣Э1\",\n    3: \"2b_2c_2d_2g_2h_2j_2k_2l_2m_2n_2p_2r_2s_2t_2v_2y_2├▒_2┼Ы_2с╕Н_2с╕е12с╕л12с╕╖_2с╣Б12с╣Г12с╣Е_2с╣З_2с╣н_2с║Ц1l╠е1r╠е1\",\n    4: \"2bh_2ch_2dh_2gh_2jh_2kh_2m╠Р12ph_2rb_2rd_2rg_2rk_2rp_2rt_2rс╕Н_2rс╣н_2th_2с╕Нh_2с╣нh_a2i1a2u1a3├п1a3├╝1l╠е╠Д1r╠е╠Д1\"\n  }\n};\nexport {hyphenation_sa};\n"],
  "mappings": "AAAA,aACA,GAAM,IAAY,GAClB,GAAU,SAAW,CACnB,UAAW,GACX,QAAS,IAEX,GAAI,IAAU,GAAU,QAAU,CAChC,SAAU,CACR,OAAQ,gCAAgC,MAAM,KAC9C,YAAa,gCAAgC,MAAM,KACnD,YAAa,CAAC,IAAK,IAAK,IAAK,IAC7B,OAAQ,CAAC,KACT,WAAY,oEAAoE,MAAM,KACtF,QAAS,4BAA4B,MAAM,KAC3C,IAAK,CAAC,KACN,KAAM,CAAC,KAET,QAAS,CACP,OAAQ,gCAAgC,MAAM,KAC9C,YAAa,8BAA8B,MAAM,KACjD,YAAa,QAAQ,MAAM,KAC3B,OAAQ,CAAC,KACT,WAAY,8EAA8E,MAAM,KAChG,QAAS,8BAA8B,MAAM,KAC7C,MAAO,cAAc,MAAM,MAE7B,KAAM,CACJ,OAAQ,CACN,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,GACA,KACA,KACA,GACA,KACA,MAEF,YAAa,CACX,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,GACA,KACA,KACA,GACA,KACA,MAEF,YAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,IAC5C,OAAQ,CAAC,MACT,WAAY,CACV,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEF,QAAS,CACP,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGJ,OAAQ,CACN,OAAQ,CACN,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,GACA,KACA,KACA,GACA,KACA,MAEF,YAAa,CACX,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,GACA,KACA,KACA,GACA,KACA,MAEF,YAAa,CAAC,KAAM,KAAM,KAAM,KAAM,MACtC,OAAQ,CAAC,MACT,WAAY,CACV,KACA,KACA,KACA,KACA,KACA,KACA,KAC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,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAC9hS,GAAQ,GCHf,aAEA,GAAI,IAAW,OAAO,aAAa,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IA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",
  "names": []
}
